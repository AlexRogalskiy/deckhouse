user  nginx;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 500;
    multi_accept on;
    use epoll;
}

http {
    log_format json_combined escape=json '{ "time_local": "$time_local", '
     '"host": "$host", '
     '"remote_addr": "$remote_addr", '
     '"remote_user": "$remote_user", '
     '"request": "$request", '
     '"status": "$status", '
     '"body_bytes_sent": "$body_bytes_sent", '
     '"request_time": "$request_time", '
     '"http_referrer": "$http_referer", '
     '"http_user_agent": "$http_user_agent" }';

    ssi on;
    gzip off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    error_log /dev/stderr info;
    server {
        charset utf-8;
        listen 80;
        server_name _;

        index       index.html;

        set_real_ip_from  0.0.0.0/0;
        access_log       /dev/stdout json_combined;
        error_log        /dev/stderr info;

        rewrite ^/$ /ru/ permanent;

        location / {
            proxy_redirect    off;
            proxy_set_header  Host              deckhouse.io;
            proxy_set_header  X-Real-IP         $remote_addr;
            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;

            proxy_pass http://site:8080;
          }
        #location ~* ^(/(ru|en))?/documentation/v[\d]+[^\/]*/(.*)?$ {
        location ~* ^(/(ru|en))?/documentation/v1.2.3-dev/(.*)?$ {
            #rewrite ^(/(ru|en))?/documentation/v[\d]+[^\/]*/(.*)?$ $1/$3 break;
            proxy_redirect    off;
            proxy_set_header  Host              deckhouse.io;
            proxy_set_header  X-Real-IP         $remote_addr;
            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;

            proxy_pass http://documentation;
          }
    }
}
