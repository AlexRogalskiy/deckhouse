{{- $kubeVersion := semver .Values.global.discovery.kubernetesVersion -}}

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-proxy
  namespace: kube-system
{{ include "helm_lib_module_labels" (list . (dict "k8s-app" "kube-proxy")) | indent 2 }}
spec:
  selector:
    matchLabels:
      k8s-app: kube-proxy
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-proxy
    spec:
      imagePullSecrets:
      - name: deckhouse-registry
      priorityClassName: system-node-critical
      containers:
      - name: kube-proxy
        image: {{ .Values.global.modulesImages.registry }}/kube-proxy/kube-proxy-{{ $kubeVersion.Major }}-{{ $kubeVersion.Minor }}:{{ index .Values.global.modulesImages.tags.kubeProxy (list "kubeProxy" $kubeVersion.Major $kubeVersion.Minor | join "") }}
        command:
        - /usr/local/bin/kube-proxy
        - --config=/var/lib/kube-proxy/config.conf
        - --hostname-override=$(NODE_NAME)
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/kube-proxy
          name: kube-proxy
        - mountPath: /run/xtables.lock
          name: xtables-lock
          readOnly: false
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
      hostNetwork: true
      serviceAccountName: d8-kube-proxy
      volumes:
      - name: kube-proxy
        configMap:
          name: kube-proxy
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
      - name: lib-modules
        hostPath:
          path: /lib/modules
      tolerations:
      - operator: Exists
      nodeSelector:
        beta.kubernetes.io/os: linux
