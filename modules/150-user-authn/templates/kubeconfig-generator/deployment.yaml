{{- if or (.Values.userAuthn.publishApi) (.Values.userAuthn.kubeconfigGenerator) }}
{{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: kubeconfig-generator
  namespace: kube-{{ .Chart.Name }}
  labels:
    heritage: antiopa
    module: {{ .Chart.Name }}
    app: kubeconfig-generator
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: kubeconfig-generator
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeconfig-generator
  namespace: kube-{{ .Chart.Name }}
  labels:
    heritage: antiopa
    module: {{ .Chart.Name }}
    app: kubeconfig-generator
spec:
  replicas: {{ .Values.global.discovery.clusterMasterCount }}
  selector:
    matchLabels:
      app: kubeconfig-generator
  template:
    metadata:
      labels:
        app: kubeconfig-generator
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/kubeconfig-generator/configmap.yaml") . | sha256sum }}
    spec:
{{- include "helm_lib_node_selector" (tuple . "system") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "system") | indent 6 }}
      imagePullSecrets:
      - name: antiopa-registry
{{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
      priorityClassName: cluster-low
{{- end }}
      volumes:
      - name: config
        configMap:
          name: kubeconfig-generator
      - name: idp-tls
        secret:
          secretName: ingress-tls
          items:
          - key: tls.crt
            path: tls.crt
      containers:
      - name: kubeconfig-generator
        image: {{ .Values.global.modulesImages.registry }}/user-authn/kubeconfig-generator:{{ .Values.global.modulesImages.tags.userAuthn.kubeconfigGenerator }}
        command:
        - "/bin/sh"
        - "-l"
        - "-c"
        - "update-ca-certificates; /app/bin/dex-k8s-authenticator --config config.yaml"
        ports:
        - name: http
          containerPort: 5555
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
        volumeMounts:
        - name: config
          subPath: config.yaml
          mountPath: /app/config.yaml
        - name: idp-tls
          mountPath: "/usr/local/share/ca-certificates/"
          readOnly: true
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
{{- end }}
