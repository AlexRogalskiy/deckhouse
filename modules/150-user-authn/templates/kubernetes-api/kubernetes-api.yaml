{{- define "publish_api_ingress_annotations" }}
  {{- if eq (include "helm_lib_module_https_mode" .) "CertManager" }}
    {{- if eq .Values.userAuthn.publishAPI.https.mode "Global" }}
certmanager.k8s.io/cluster-issuer: {{ include "helm_lib_module_https_cert_manager_cluster_issuer_name" . }}
    {{- else if eq .Values.userAuthn.publishAPI.https.mode "SelfSigned" }}
      {{- if .Values.global.enabledModules | has "cert-manager" }}
certmanager.k8s.io/issuer: kubernetes-api
      {{- else }}
{{ fail "cert-manager module must be enabled for publishAPI https SelfSigned mode" }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}


{{- if .Values.userAuthn.publishAPI.enable }}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
{{ include "publish_api_ingress_annotations" . | indent 4 }}
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
  {{- if .Values.userAuthn.publishAPI.whitelistSourceRanges }}
    nginx.ingress.kubernetes.io/whitelist-source-range: {{ .Values.userAuthn.publishAPI.whitelistSourceRanges | join "," }}
  {{- end }}
  {{- if include "is_basic_auth_enabled_in_any_crowd" . }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($http_authorization ~ "^(.*)Basic(.*)$") {
        rewrite ^(.*)$ /basic-auth$1;
      }
  {{- end }}
  name: kubernetes-api
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" "kubernetes-configurator")) | indent 2 }}
spec:
  {{- if include "helm_lib_module_https_ingress_tls_enabled" . }}
  tls:
  - hosts:
    - {{ include "helm_lib_module_public_domain" (list . "api") }}
    secretName: kubernetes-tls
  {{- end }}
  rules:
  - host: {{ include "helm_lib_module_public_domain" (list . "api") }}
    http:
      paths:
      - backend:
          serviceName: kubernetes
          servicePort: 443
---
apiVersion: v1
kind: Service
metadata:
  name: kubernetes
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" "kubernetes-configurator")) | indent 2 }}
spec:
  clusterIP: None
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: {{ .Values.userAuthn.internal.kubernetesApiserverTargetPort }}
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Endpoints
metadata:
  name: kubernetes
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" "kubernetes-configurator")) | indent 2 }}
subsets:
- addresses:
  {{- range $address := .Values.userAuthn.internal.kubernetesApiserverAddresses }}
  - ip: {{ $address }}
  {{- end }}
  ports:
  - name: https
    port: {{ .Values.userAuthn.internal.kubernetesApiserverTargetPort }}
    protocol: TCP
{{- end }}
