{{- if .Values.userAuthn.publishAPI.enable }}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: {{ .Values.userAuthn.publishAPI.ingressClass | default (include "helm_lib_module_ingress_class" . | quote ) }}
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2m
  {{- if .Values.userAuthn.publishAPI.whitelistSourceRanges }}
    nginx.ingress.kubernetes.io/whitelist-source-range: {{ .Values.userAuthn.publishAPI.whitelistSourceRanges | join "," }}
  {{- end }}
  {{- if include "is_basic_auth_enabled_in_any_crowd" . }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($http_authorization ~ "^(.*)Basic(.*)$") {
        rewrite ^(.*)$ /basic-auth$1;
      }
  {{- end }}
  name: kubernetes-api
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" "kubernetes-configurator")) | indent 2 }}
spec:
  {{- if (include "helm_lib_module_https_ingress_tls_enabled" . ) }}
  tls:
  - hosts:
    - {{ include "helm_lib_module_public_domain" (list . "api") }}
    secretName: {{ include "helm_lib_module_https_secret_name" (list . "kubernetes-tls") }}
  {{- end }}
  rules:
  - host: {{ include "helm_lib_module_public_domain" (list . "api") }}
    http:
      paths:
      - backend:
          serviceName: kubernetes
          servicePort: 443
{{- end }}
