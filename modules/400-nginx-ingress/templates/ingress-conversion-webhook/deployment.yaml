---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-conversion-webhook
  namespace: d8-system
{{ include "helm_lib_module_labels" (list . (dict "app" "ingress-conversion-webhook")) | indent 2 }}
spec:
  replicas: {{ .Values.global.discovery.clusterMasterCount }}
{{- if gt (.Values.global.discovery.clusterMasterCount | int) 1 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: {{ div (.Values.global.discovery.clusterMasterCount | int) 2 | default 1 }}
{{- end }}
  selector:
    matchLabels:
      heritage: deckhouse
      module: {{ .Chart.Name }}
      app: ingress-conversion-webhook
  template:
    metadata:
      annotations:
        checksum/extension-apiserver-authentication: {{ .Values.global.discovery.extensionAPIServerAuthenticationChecksum }}
      labels:
        heritage: deckhouse
        module: {{ .Chart.Name }}
        app: ingress-conversion-webhook
    spec:
{{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
      priorityClassName: cluster-critical
{{- end }}
{{- if gt (.Values.global.discovery.clusterMasterCount | int) 1 }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                heritage: deckhouse
                module: {{ .Chart.Name }}
                app: ingress-conversion-webhook
            topologyKey: kubernetes.io/hostname
{{- end }}
      serviceAccountName: kube-nginx-ingress-ingress-conversion-webhook
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
      - operator: Exists
      imagePullSecrets:
      - name: deckhouse-registry
      containers:
        - name: webhook
          image: {{ .Values.global.modulesImages.registry }}/nginx-ingress/ingress-conversion-webhook:{{ .Values.global.modulesImages.tags.nginxIngress.ingressConversionWebhook }}
          args:
          - -tls-cert-file=/etc/webhook/certs/tls.crt
          - -tls-key-file=/etc/webhook/certs/tls.key
          - -enable-rwr={{ .Values.nginxIngress.rewriteTargetMigration }}
          ports:
          - containerPort: 8080
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
          livenessProbe:
            tcpSocket:
              port: 8080
          resources:
            requests:
              memory: 20Mi
              cpu: 10m
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/webhook/certs
              readOnly: true
      volumes:
        - name: webhook-certs
          secret:
            secretName: ingress-conversion-webhook
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-conversion-webhook
  namespace: d8-system
{{ include "helm_lib_module_labels" (list . (dict "app" "ingress-conversion-webhook")) | indent 2 }}
spec:
  selector:
    heritage: deckhouse
    module: {{ .Chart.Name }}
    app: ingress-conversion-webhook
  ports:
  - name: https
    port: 443
    targetPort: 8080
