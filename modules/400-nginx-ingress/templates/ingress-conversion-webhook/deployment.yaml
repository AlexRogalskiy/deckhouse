---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-conversion-webhook
  namespace: d8-system
{{ include "helm_lib_module_labels" (list . (dict "app" "ingress-conversion-webhook")) | indent 2 }}
spec:
{{- include "helm_lib_deployment_on_master_strategy_and_replicas_for_ha" . | indent 2 }}
  selector:
    matchLabels:
      heritage: deckhouse
      module: {{ .Chart.Name }}
      app: ingress-conversion-webhook
  template:
    metadata:
      annotations:
        checksum/extension-apiserver-authentication: {{ .Values.global.discovery.extensionAPIServerAuthenticationRequestheaderClientCA | sha256sum }}
        checksum/certificate: {{ include (print .Template.BasePath "/ingress-conversion-webhook/secret.yaml") . | sha256sum }}
      labels:
        heritage: deckhouse
        module: {{ .Chart.Name }}
        app: ingress-conversion-webhook
    spec:
{{- include "helm_lib_priority_class" (tuple . "cluster-critical") | indent 6 }}
{{- include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app" "ingress-conversion-webhook")) | indent 6 }}
{{- include "helm_lib_node_selector" (tuple . "master") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "master") | indent 6 }}
      serviceAccountName: kube-nginx-ingress-ingress-conversion-webhook
      imagePullSecrets:
      - name: deckhouse-registry
      containers:
        - name: webhook
          image: {{ .Values.global.modulesImages.registry }}/nginx-ingress/ingress-conversion-webhook:{{ .Values.global.modulesImages.tags.nginxIngress.ingressConversionWebhook }}
          args:
          - -tls-cert-file=/etc/webhook/certs/tls.crt
          - -tls-key-file=/etc/webhook/certs/tls.key
          - -enable-rwr={{ .Values.nginxIngress.rewriteTargetMigration }}
          ports:
          - containerPort: 8080
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
          livenessProbe:
            tcpSocket:
              port: 8080
          resources:
            requests:
              memory: 20Mi
              cpu: 10m
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/webhook/certs
              readOnly: true
      volumes:
        - name: webhook-certs
          secret:
            secretName: ingress-conversion-webhook
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-conversion-webhook
  namespace: d8-system
{{ include "helm_lib_module_labels" (list . (dict "app" "ingress-conversion-webhook")) | indent 2 }}
spec:
  selector:
    heritage: deckhouse
    module: {{ .Chart.Name }}
    app: ingress-conversion-webhook
  ports:
  - name: https
    port: 443
    targetPort: 8080
