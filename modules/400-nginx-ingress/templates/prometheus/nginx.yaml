{{- if (.Values.global.enabledModules | has "prometheus") }}
  {{- range $config := prepend .Values.nginxIngress.additionalControllers .Values.nginxIngress }}
    {{- $context := $config | toJson | fromJson }}
    {{- $_ := set $context "Values" $.Values }}
    {{- $inlet := (include "helper.inlet" $context) }}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
    {{- if not $context.name }}
  name: nginx-ingress-controller
    {{- else }}
  name: nginx-ingress-controller-{{ $context.name }}
    {{- end }}
  namespace: kube-prometheus
{{ include "helm_lib_module_labels" (list $ (dict "prometheus" "main")) | indent 2 }}
spec:
  jobLabel: prometheus-target
  endpoints:
  - port: controller
    relabelings:
    - regex: endpoint|namespace|pod|service
      action: labeldrop
    - sourceLabels: [__meta_kubernetes_pod_node_name]
      targetLabel: node
    - sourceLabels: [__meta_kubernetes_service_name]
      regex: kube-prometheus-discovery-of-(.*)
      targetLabel: app
    - targetLabel: controller
    {{- if not $context.name }}
      replacement: main
    {{- else }}
      replacement: {{ $context.name }}
    {{- end }}
    - targetLabel: scrape_source
      replacement: controller
    metricRelabelings:
    # remove ingress_class, we have "controller" label
    - regex: ingress_class
      action: labeldrop
  - port: statsd
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
      certFile: /etc/prometheus/secrets/prometheus-scraper-cert/tls.crt
      keyFile: /etc/prometheus/secrets/prometheus-scraper-cert/tls.key
    relabelings:
    - regex: endpoint|namespace|pod|service
      action: labeldrop
    - sourceLabels: [__meta_kubernetes_pod_node_name]
      targetLabel: node
    - sourceLabels: [__meta_kubernetes_service_name]
      regex: kube-prometheus-discovery-of-(.*)
      targetLabel: app
    - targetLabel: controller
    {{- if not $context.name }}
      replacement: main
    {{- else }}
      replacement: {{ $context.name }}
    {{- end }}
    - targetLabel: scrape_source
      replacement: statsd
  selector:
    matchLabels:
      prometheus-target: nginx-ingress-controller
  namespaceSelector:
    matchNames:
    - {{ include "helper.namespace" $context }}
---
apiVersion: v1
kind: Service
metadata:
  name: kube-prometheus-discovery-of-nginx
  namespace: {{ include "helper.namespace" $context }}
{{ include "helm_lib_module_labels" (list $ (dict "prometheus-target" "nginx-ingress-controller")) | indent 2 }}
spec:
  selector:
    app: nginx
  type: ClusterIP
  clusterIP: None
  ports:
  - name: controller
    port: 10254
    targetPort: 10254
    protocol: TCP
  - name: statsd
    port: 9103
    targetPort: 9103
    protocol: TCP
    {{- if eq $inlet "Direct" }}
---
apiVersion: v1
kind: Service
metadata:
  name: kube-prometheus-discovery-of-nginx-for-direct-fallback
  namespace: {{ include "helper.namespace" $context }}
{{ include "helm_lib_module_labels" (list $ (dict "prometheus-target" "nginx-ingress-controller")) | indent 2 }}
spec:
  selector:
    app: nginx-for-direct-fallback
  type: ClusterIP
  clusterIP: None
  ports:
  - name: controller
    port: 10254
    targetPort: 10254
    protocol: TCP
  - name: statsd
    port: 9103
    targetPort: 9103
    protocol: TCP
    {{- end }}
  {{- end }}
{{- end }}
