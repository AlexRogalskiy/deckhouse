type: object
properties:
  apiserver:
    type: object
    default: {}
    description: |
      `kube-apiserver` parameters.
    properties:
      bindToWildcard:
        type: boolean
        default: false
        description: |
          Cлушать ли на `0.0.0.0`.

          По умолчанию API server слушает на hostIP, который обычно соответствует Internal адресу узла, но это зависит от типа кластера (Static или Cloud) и выбранной схемы размещения (layout'а).
      certSANs:
        type: array
        description: |
          Array of [SANs](https://en.wikipedia.org/wiki/Subject_Alternative_Name), with which the API server certificate will be generated.

          In addition to the passed list, the following list is always used:
          * `kubernetes`
          * `kubernetes.default`
          * `kubernetes.default.svc`
          * `kubernetes.default.svc.cluster.local`
          * `192.168.0.1`
          * `127.0.0.1`
          * *current_hostname*
          * *hostIP*
        x-examples:
          - [ "my-site.com", "192.168.67.76" ]
        items:
          type: string
          pattern: '^[0-9a-zA-Z\.-]+$'
      authn:
        type: object
        default: {}
        description: |
          Optional authentication parameters for Kubernetes API clients. By default, they are taken from [`user-authn`](https://early.deckhouse.io/en/documentation/v1/modules/150-user-authn/) module ConfigMap.
        properties:
          oidcIssuerURL:
            type: string
            description: |
              OIDC provider URL.
            x-examples:
              - "https://my-super-site.tech/"
          oidcCA:
            type: string
            description: |
              OIDC provider CA.
      authz:
        type: object
        default: {}
        description: |
          Optional authorization parameters for Kubernetes API clients. By default, they are taken from [`user-authz`](https://early.deckhouse.io/en/documentation/v1/modules/modules/140-user-authz/) module ConfigMap.
        properties:
          webhookURL:
            type: string
            description: |
              Authorization webhook URL.
            x-examples:
              - "https://127.0.0.1:40443/"
          webhookCA:
            type: string
            description: |
              Authorization webhook CA.
      loadBalancer:
        type: object
        description: |
          Если указано, будет создан сервис с типом `LoadBalancer` (`d8-control-plane-apiserver` в ns `kube-system`).
        properties:
          annotations:
            type: object
            description: |
              Аннотации, которые будут проставлены сервису для гибкой настройки балансировщика.
              > **Внимание!** модуль не учитывает особенности указания аннотаций в различных облаках. Если аннотации для заказа load balancer'а применяются только при создании сервиса, то для обновления подобных параметров вам необходимо будет удалить и добавить параметр `apiserver.loadBalancer`.
          sourceRanges:
            type: array
            description: |
              A list of CIDRs that are allowed to connect to the API.

              The cloud provider may not support this option or ignore it.
            items:
              type: string
              pattern: '^[0-9]{1,}\.[0-9]{1,}\.[0-9]{1,}\.[0-9]{1,}\/[0-9]+$'
      auditPolicyEnabled:
        type: boolean
        default: false
        description: |
          Включение [аудита событий](faq.html#как-включить-аудит-событий) с конфигурацией из `Secret` (`audit-policy` в ns `kube-system`).
  etcd:
    type: object
    description: |
      `etcd` parameters.
    properties:
      externalMembersNames:
        type: array
        description: |
          `etcd` external members array (they will not be deleted).
        x-examples:
          - ["main-master-1", "my-external-member"]
        items:
          type: string
          pattern: '^[0-9a-zA-Z\.-:\-\/]+$'
  nodeMonitorGracePeriodSeconds:
    type: integer
    default: 40
    description: |
      The number of seconds after which the node will enter the `Unreachable` status in case of lost connection.
  failedNodePodEvictionTimeoutSeconds:
    type: integer
    default: 300
    description: |
      The number of seconds after which pods will be deleted from the node with the `Unreachable` status.
      > **Note!** If you change the parameter, the pods  must be restarted.
