{{- range $key, $value := .CandiVersionMap.k8s }}
  {{- $version := toString $key }}
  {{- $patch := toString $value.patch }}
  {{- $v := semver $version }}
---
image: {{ $.ModuleName }}/{{ $.ImageName }}-{{ $version | replace "." "-" }}
from: {{ env "BASE_UBUNTU" }}
import:
  - image: common/pause
    add: /pause
    to: /pause
    before: setup
  {{- if semverCompare ">=1.19" $version }}
  - artifact: {{ $.ModuleName }}/{{ $.ImageName }}-builder-{{ $version | replace "." "-" }}
    add: /src/_output/bin/kube-controller-manager
    to: /usr/bin/kube-controller-manager
    before: setup
  {{- end }}
shell:
  beforeInstall:
  - apt-get update
  - apt install ca-certificates apt-transport-https gnupg gnupg2 gnupg1 curl -y
  - curl -sL 'https://download.ceph.com/keys/release.asc' | apt-key add -
  - echo deb https://download.ceph.com/debian-nautilus/ bionic main | tee /etc/apt/sources.list.d/ceph.list
  - apt-get update
  - apt-get install -y ceph-common
  - touch /etc/ceph/ceph.conf /etc/ceph/ceph.keyring
  {{- if semverCompare "<1.19" $version }}
  - curl -L https://storage.googleapis.com/kubernetes-release/release/v{{ printf "%s.%s" $version $patch }}/bin/linux/amd64/kube-controller-manager -o /usr/bin/kube-controller-manager
  - chmod +x /usr/bin/kube-controller-manager
  {{- end }}
  - apt-get purge -y --auto-remove curl apt-transport-https gnupg gnupg2 gnupg1
  - rm -rf /var/lib/apt/lists/*
docker:
  ENV:
    DEBIAN_FRONTEND: noninteractive
    container: docker
  ENTRYPOINT: ["/usr/bin/kube-controller-manager"]
  {{- if semverCompare ">=1.19" $version }}
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-builder-{{ $version | replace "." "-" }}
from: {{ env "BASE_GOLANG_ALPINE" }}
git:
  - add: /modules/040-{{ $.ModuleName }}/images/{{ $.ImageName }}/patches
    to: /patches
shell:
  beforeInstall:
  - apk add --no-cache make bash git mercurial patch rsync
  install:
  - mkdir /src
  - wget https://github.com/kubernetes/kubernetes/archive/v{{ printf "%s.%s" $version $patch }}.tar.gz -O - | tar -xz --strip-components=1 -C /src/
  - cd /src
  - |
    cat <<EOF > .kube-version
    KUBE_GIT_VERSION='v{{ printf "%s.%s" $version $patch }}'
    KUBE_GIT_MAJOR='{{ $v.Major }}'
    KUBE_GIT_MINOR='{{ $v.Minor }}'
    KUBE_GIT_COMMIT='0000000000000000000000000000000000000000'
    KUBE_GIT_TREE_STATE='archive'
    EOF
  - export KUBE_GIT_VERSION_FILE=.kube-version
  - for patchfile in /patches/{{ $version }}/*.patch ; do patch -p1 < ${patchfile}; done
  - make all WHAT=cmd/kube-controller-manager
  {{- end }}
{{- end }}
