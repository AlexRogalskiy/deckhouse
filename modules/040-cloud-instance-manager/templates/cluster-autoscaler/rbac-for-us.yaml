{{- if include "cluster_autoscaler_enabled" . }}
  {{- if hasKey $.Values.cloudInstanceManager.internal "cloudProvider" }}
    {{- if include "cluster_autoscaler_nodes" . }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-autoscaler
  namespace: d8-cloud-instance-manager
{{ include "helm_lib_module_labels" (list . (dict "app" "cluster-autoscaler")) | indent 2 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cluster-autoscaler
  namespace: d8-cloud-instance-manager
{{ include "helm_lib_module_labels" (list . (dict "app" "cluster-autoscaler")) | indent 2 }}
rules:
- apiGroups:
  - machine.sapcloud.io
  resources:
  - machinedeployments
  - machines
  - machinesets
  verbs:
  - get
  - list
  - watch
# leader election
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["endpoints"]
  resourceNames: ["cluster-autoscaler"]
  verbs: ["get", "update", "patch", "delete"]
- apiGroups:
  - machine.sapcloud.io
  resources:
  - machinedeployments
  - machines
  verbs:
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cluster-autoscaler
  namespace: d8-cloud-instance-manager
{{ include "helm_lib_module_labels" (list . (dict "app" "cluster-autoscaler")) | indent 2 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cluster-autoscaler
subjects:
- kind: ServiceAccount
  name: cluster-autoscaler
  namespace: d8-cloud-instance-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: d8:cloud-instance-manager:cluster-autoscaler
{{ include "helm_lib_module_labels" (list . (dict "app" "cluster-autoscaler")) | indent 2 }}
rules:
# accessing & modifying cluster state (nodes & pods)
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods/eviction"]
  verbs: ["create"]
# read-only access to cluster state
- apiGroups: [""]
  resources: ["services", "replicationcontrollers", "persistentvolumes", "persistentvolumeclaims"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps", "extensions"]
  resources: ["daemonsets", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["policy"]
  resources: ["poddisruptionbudgets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]
# misc access
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: d8:cloud-instance-manager:cluster-autoscaler
{{ include "helm_lib_module_labels" (list . (dict "app" "cluster-autoscaler")) | indent 2 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: d8:cloud-instance-manager:cluster-autoscaler
subjects:
- kind: ServiceAccount
  name: cluster-autoscaler
  namespace: d8-cloud-instance-manager
    {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: d8:cloud-instance-manager:cluster-autoscaler:rbac-proxy
{{ include "helm_lib_module_labels" (list . (dict "app" "cluster-autoscaler")) | indent 2 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: d8:rbac-proxy
subjects:
- kind: ServiceAccount
  name: cluster-autoscaler
  namespace: d8-cloud-instance-manager
  {{- end }}
{{- end }}
