{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: {{ .Chart.Name }}
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" .Chart.Name "workload-resource-policy.deckhouse.io" "master")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: {{ .Chart.Name }}
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: flant-pricing
  namespace: d8-flant-pricing
{{ include "helm_lib_module_labels" (list . (dict "app" "flant-pricing")) | indent 2 }}
spec:
{{ include "helm_lib_pdb_daemonset" . | indent 2 }}
  selector:
    matchLabels:
      app: flant-pricing
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Chart.Name }}
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" .Chart.Name)) | indent 2 }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
      annotations:
        checksum/config: {{ include "grafana_agent_config" . | sha256sum }}
        checksum/cert: {{ include (print $.Template.BasePath "/prometheus-api-client-tls.yaml") . | sha256sum}}
    spec:
      imagePullSecrets:
      - name: deckhouse-registry
      serviceAccountName: {{ .Chart.Name }}
{{- include "helm_lib_node_selector" (tuple . "master") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "master") | indent 6 }}
{{- include "helm_lib_priority_class" (tuple . "cluster-medium") | indent 6 }}
{{- include "helm_lib_module_pod_security_context_run_as_user_nobody" . | indent 6 }}
      initContainers:
{{ include "helm_lib_module_init_container_chown_nobody_volume" (tuple . "agent-data") | indent 6 }}
      containers:
      - name: {{ .Chart.Name }}
{{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | indent 8 }}
        image: {{ .Values.global.modulesImages.registry }}:{{ .Values.global.modulesImages.tags.flantPricing.flantPricing }}
        env:
        - name: FP_PROJECT
          value: {{ .Values.global.project | quote }}
        - name: FP_CLUSTER
          value: {{ .Values.global.clusterName | quote }}
        - name: FP_RELEASE_CHANNEL
          value: {{ .Values.flantPricing.internal.releaseChannel | quote }}
        - name: FP_BUNDLE
          value: {{ .Values.flantPricing.internal.bundle | quote }}
        - name: FP_CLOUD_PROVIDER
          value: {{ .Values.flantPricing.internal.cloudProvider | quote }}
        - name: FP_CONTROL_PLANE_VERSION
          value: {{ .Values.flantPricing.internal.controlPlaneVersion | quote }}
        - name: FP_MINIMAL_KUBELET_VERSION
          value: {{ .Values.flantPricing.internal.nodeStats.minimalKubeletVersion | quote }}
        - name: FP_PLAN
          value: {{ .Values.flantPricing.plan | quote }}
        - name: FP_CLUSTER_TYPE
          value: {{ .Values.flantPricing.internal.clusterType | quote }}
        - name: FP_MASTERS_COUNT
          value: {{ .Values.flantPricing.internal.nodeStats.mastersCount | quote }}
        - name: FP_MASTER_IS_DEDICATED
          value: {{ .Values.flantPricing.internal.nodeStats.masterIsDedicated | int | quote }}
        - name: FP_MASTER_MIN_CPU
          value: {{ .Values.flantPricing.internal.nodeStats.masterMinCPU | quote }}
        - name: FP_MASTER_MIN_MEMORY
          value: {{ .Values.flantPricing.internal.nodeStats.masterMinMemory | quote }}
        - name: FP_PLAN_IS_BOUGHT_AS_BUNDLE
          value: {{ .Values.flantPricing.planIsBoughtAsBundle | int | quote }}
        - name: FP_AUXILIARY_CLUSTER
          value: {{ .Values.flantPricing.auxiliaryCluster | int | quote }}
        - name: FP_NODES_DISCOUNT
          value: {{ .Values.flantPricing.nodesDiscount | int | quote }}
        - name: FP_DO_NOT_CHARGE_FOR_ROCK_SOLID
          value: {{ .Values.flantPricing.doNotChargeForRockSolid | quote | int | quote }}
        - name: FP_CONTACTS
          value: {{ .Values.flantPricing.contacts | quote }}
        - name: FP_DECKHOUSE_VERSION
          value: {{ .Values.global.deckhouseVersion | quote }}
        - name: FP_TERRAFORM_MANAGER_EBABLED
          value: {{ .Values.flantPricing.internal.terraformManagerEnabled | quote }}
        - name: DEBUG_UNIX_SOCKET
          value: /tmp/shell-operator-debug.socket
        - name: FP_KUBEALL_TEAM
          value: {{ .Values.flantPricing.***REMOVED***.team | quote }}
        - name: FP_KUBEALL_HOST
          value: {{ .Values.flantPricing.***REMOVED***.host | quote }}
        - name: FP_KUBEALL_KUBECTL
          value: {{ .Values.flantPricing.***REMOVED***.kubectl | quote }}
        - name: FP_KUBEALL_KUBECONFIG
          value: {{ .Values.flantPricing.***REMOVED***.kubeconfig | quote }}
        - name: FP_KUBEALL_CONTEXT
          value: {{ .Values.flantPricing.***REMOVED***.context | quote }}
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9115
          periodSeconds: 60
        volumeMounts:
        - mountPath: /etc/ssl/prometheus-api-client-tls/
          name: flant-pricing-prometheus-api-client-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
        resources:
          requests:
{{- include "helm_lib_module_ephemeral_storage_logs_with_extra" 50 | indent 12 }}
      - name: grafana-agent
{{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | indent 8 }}
        image: {{ .Values.global.modulesImages.registry }}:{{ .Values.global.modulesImages.tags.flantPricing.grafanaAgent }}
        volumeMounts:
        - name: agent-data
          mountPath: /data/agent
        - name: agent-config
          mountPath: /etc/agent-config
        command:
        - /bin/agent
        - -config.file=/etc/agent-config/agent-scraping-service.yaml
        livenessProbe:
          httpGet:
            path: /-/healthy
            scheme: HTTPS
            port: 9100
          periodSeconds: 30
        resources:
          requests:
{{- include "helm_lib_module_ephemeral_storage_only_logs" . | indent 12 }}
      - name: kube-rbac-proxy
{{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | indent 8 }}
        image: {{ .Values.global.modulesImages.registry }}:{{ .Values.global.modulesImages.tags.common.kubeRbacProxy }}
        args:
        - "--secure-listen-address=$(KUBE_RBAC_PROXY_LISTEN_ADDRESS):9100"
        - "--client-ca-file=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
        - "--v=2"
        - "--logtostderr=true"
        - "--stale-cache-interval=1h30m"
        ports:
        - containerPort: 9100
          name: https-metrics
        env:
        - name: KUBE_RBAC_PROXY_LISTEN_ADDRESS
          value: "0.0.0.0"
        - name: KUBE_RBAC_PROXY_CONFIG
          value: |
            excludePaths:
            - /-/healthy
            upstreams:
            - upstream: http://127.0.0.1:8080/
              path: /
              authorization:
                resourceAttributes:
                  namespace: d8-{{ .Chart.Name }}
                  apiGroup: apps
                  apiVersion: v1
                  resource: daemonsets
                  subresource: prometheus-metrics
                  name: {{ .Chart.Name }}
        resources:
          requests:
{{- include "helm_lib_module_ephemeral_storage_only_logs" . | indent 12 }}
      volumes:
      - name: agent-data
        hostPath:
          path: /var/lib/docker/volumes/flant-pricing-grafana-agent-data
      - name: agent-config
        secret:
          secretName: grafana-agent-config
      - name: flant-pricing-prometheus-api-client-tls
        secret:
          secretName: flant-pricing-prometheus-api-client-tls
      - name: tmp
        emptyDir: {}
