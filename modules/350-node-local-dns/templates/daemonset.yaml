{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: {{ .Chart.Name }}
  namespace: d8-system
{{ include "helm_lib_module_labels" (list .) | indent 2 }}
spec:
  targetRef:
    apiVersion: apps/v1
    kind: DaemonSet
    name: node-local-dns
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: "coredns"
      maxAllowed:
        cpu: 2
        memory: 256Mi
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: node-local-dns
  namespace: d8-system
{{ include "helm_lib_module_labels" (list . (dict "prometheus-target" "node-local-dns")) | indent 2 }}
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: coredns-metrics
    port: 9254
    protocol: TCP
  - name: sidecar-metrics
    port: 9255
    protocol: TCP
  selector:
    app: node-local-dns
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-local-dns
  namespace: d8-system
{{ include "helm_lib_module_labels" (list . (dict "app" "node-local-dns")) | indent 2 }}
spec:
  selector:
    matchLabels:
      app: node-local-dns
  template:
    metadata:
      labels:
        app: node-local-dns
    spec:
{{- include "helm_lib_priority_class" (tuple . "cluster-critical") | indent 6 }}
      hostNetwork: true
      serviceAccountName: default
      serviceAccount: default
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
      - operator: Exists
      containers:
      - name: coredns
        image: {{ .Values.global.modulesImages.registry }}/node-local-dns/coredns:{{ .Values.global.modulesImages.tags.nodeLocalDns.coredns }}
        command: ["/bin/bash", "-l", "-c", "/start.sh"]
        env:
        - name: KUBE_CLUSTER_DOMAIN
          value: {{ .Values.global.discovery.clusterDomain | quote }}
        - name: KUBE_DNS_SVC_IP
          value: {{ .Values.global.discovery.clusterDNSAddress | quote }}
        resources:
          requests:
            cpu: 25m
            memory: 30Mi
        securityContext:
          privileged: true
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - /liveness.sh
          periodSeconds: 1
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - -l
              - -c
              - /stop.sh
        volumeMounts:
        - mountPath: /run/xtables.lock
          name: xtables-lock
          readOnly: false
        - name: coredns-config
          mountPath: /etc/coredns
      - name: ca-auth-proxy-coredns
        image: {{ $.Values.global.modulesImages.registry }}/common/kube-ca-auth-proxy:{{ $.Values.global.modulesImages.tags.common.kubeCaAuthProxy }}
        args:
        - "--listen=$(MY_POD_IP):9254"
        - "--proxy-pass=http://127.0.0.1:9254/metrics"
        - "--user=d8-monitoring:scraper"
        env:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - containerPort: 9254
          name: coredns-metrics
        resources:
          requests:
            memory: 20Mi
            cpu: 10m
      volumes:
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
      - name: coredns-config
        configMap:
          name: node-local-dns
      imagePullSecrets:
      - name: deckhouse-registry
