{{- if not .Values.metallb.speaker.nodeSelector }}
  {{ fail "`metallb.speaker.nodeSelector` parameter is mandatory" }}
{{- end }}

{{- if ($.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: speaker
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" "speaker")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: speaker
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: speaker
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" "speaker")) | indent 2 }}
spec:
  selector:
    matchLabels:
      app: speaker
  template:
    metadata:
      labels:
        app: speaker
    spec:
{{- include "helm_lib_priority_class" (tuple . "cluster-high") | indent 6 }}
      nodeSelector:
{{ .Values.metallb.speaker.nodeSelector | toYaml | indent 8 }}
{{- if .Values.metallb.speaker.tolerations }}
      tolerations:
{{ .Values.metallb.speaker.tolerations | toYaml | indent 8 }}
{{- end }}
      imagePullSecrets:
        - name: deckhouse-registry
      containers:
        - args:
            - --host=127.0.0.1
            - --port=7472
            - --config=config
          env:
            - name: METALLB_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: METALLB_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          image: {{ $.Values.global.modulesImages.registry }}/metallb/speaker:{{ $.Values.global.modulesImages.tags.metallb.speaker }}
          imagePullPolicy: IfNotPresent
          name: speaker
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
                - SYS_ADMIN
              drop:
                - ALL
            readOnlyRootFilesystem: true
        - name: ca-auth-proxy
          image: {{ $.Values.global.modulesImages.registry }}/common/kube-ca-auth-proxy:{{ $.Values.global.modulesImages.tags.common.kubeCaAuthProxy }}
          args:
            - "--listen=7473"
            - "--proxy-pass=http://127.0.0.1:7472/metrics"
            - "--user=d8-monitoring:scraper"
          ports:
            - containerPort: 7473
              name: https-metrics
      hostNetwork: true
      serviceAccountName: speaker
      terminationGracePeriodSeconds: 0
