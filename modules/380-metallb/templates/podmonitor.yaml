{{- if (.Values.global.enabledModules | has "operator-prometheus-crd") }}
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: controller
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "prometheus" "main" "app" "controller")) | indent 2 }}
spec:
  jobLabel: app
  podMetricsEndpoints:
    - port: https-metrics
      scheme: https
      tlsConfig:
        insecureSkipVerify: true
        certFile: /etc/prometheus/secrets/prometheus-scraper-tls/tls.crt
        keyFile: /etc/prometheus/secrets/prometheus-scraper-tls/tls.key
      relabelings:
        - regex: endpoint
          action: labeldrop
        - targetLabel: tier
          replacement: cluster
        - sourceLabels: [__meta_kubernetes_pod_ready]
          regex: "true"
          action: keep
  selector:
    matchLabels:
      app: controller
  namespaceSelector:
    matchNames:
      - d8-{{ .Chart.Name }}
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: speaker
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "prometheus" "main" "app" "speaker")) | indent 2 }}
spec:
  jobLabel: app
  podMetricsEndpoints:
    - port: https-metrics
      scheme: https
      tlsConfig:
        insecureSkipVerify: true
        certFile: /etc/prometheus/secrets/prometheus-scraper-tls/tls.crt
        keyFile: /etc/prometheus/secrets/prometheus-scraper-tls/tls.key
      relabelings:
        - regex: endpoint
          action: labeldrop
        - targetLabel: tier
          replacement: cluster
        - sourceLabels: [__meta_kubernetes_pod_ready]
          regex: "true"
          action: keep
  selector:
    matchLabels:
      app: speaker
  namespaceSelector:
    matchNames:
      - d8-{{ .Chart.Name }}
{{- end }}
