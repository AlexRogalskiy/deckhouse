#!/bin/bash

source /deckhouse/shell_lib.sh

function __config__() {
  cat << EOF
    configVersion: v1
    beforeHelm: 20
    kubernetes:
    - name: cni_configuration_secret
      queue: /modules/$(module::name::kebab_case)
      keepFullObjectsInMemory: true
      group: main
      apiVersion: v1
      kind: Secret
      namespace:
        nameSelector:
          matchNames: [kube-system]
      nameSelector:
        matchNames: [d8-cni-configuration]
      jqFilter: "(.data // {}) | with_entries(.value |= (. | @base64d))"
EOF
}

function __main__() {
  if context::jq -er '.snapshots.cni_configuration_secret[0].filterResult.cni == "flannel"' > /dev/null ; then
    flannel_config="$(values::get --config 'cniFlannel')"

    flannel_config_from_secret="{}"
    if context::jq -er '.snapshots.cni_configuration_secret[0].filterResult.flannel | length > 0' > /dev/null ; then
      flannel_config_from_secret="$(context::jq -r '.snapshots.cni_configuration_secret[0].filterResult.flannel | fromjson')"
    fi

    i="$(jq -r --argjson self "$flannel_config" 'if $self.podNetworkMode != null then $self.podNetworkMode else .podNetworkMode // "host-gw" end' <<< "$flannel_config_from_secret")"
    values::set cniFlannel.internal.podNetworkMode "$i"
  else
    values::unset cniFlannel.internal
  fi
}

hook::run "$@"
