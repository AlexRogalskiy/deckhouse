#!/bin/bash

source /antiopa/shell_lib.sh

function __config__() {
  jo -p afterHelm=10
}

function __main__() {
  target_num_revisions=5
  target_num_revisions=$(($target_num_revisions+0))

  releases=$(kubectl --namespace=antiopa get cm -l OWNER=TILLER -o go-template --template='{{range .items}}{{ .metadata.labels.NAME }}{{"\n"}}{{ end }}' | sort -u)

  for release in $releases ; do
    for status in SUPERSEDED FAILED ; do
      # get the revisions of this release
      revisions=$(kubectl --namespace=antiopa get cm -l OWNER=TILLER,NAME=$release,STATUS=$status | awk '{if(NR>1)print $1}' | sed 's/.*\.v//' | sort -n)
      num_revisions=$(echo $revisions | tr " " "\n" | wc -l)
      num_revisions=$(($num_revisions+0))

      echo "Release $release has $num_revisions revisions in $status. Target is $target_num_revisions."
      if [[ $num_revisions -gt $target_num_revisions ]] ; then
        num_to_delete=$(($num_revisions-$target_num_revisions))
        echo "Will delete $num_to_delete revisions in $status"

        to_delete=$(echo $revisions | tr " " "\n" | head -n $num_to_delete)

        for delete_revision in $to_delete
        do
          cmname=$release.v$delete_revision
          echo "Deleting $cmname"
          # Do the delete
          kubectl --namespace=antiopa delete cm $cmname
        done
      fi
    done
  done
}

function __main_old__() {
  __main__
}

hook::run $@
