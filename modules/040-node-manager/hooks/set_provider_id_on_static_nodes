#!/bin/bash

source /deckhouse/shell_lib.sh

function __config__() {
  cat << EOF
    configVersion: v1
    kubernetes:
    - name: nodes
      queue: /modules/$(module::name::kebab_case)
      includeSnapshotsFrom: ["nodes"]
      waitForSynchronization: false
      apiVersion: v1
      kind: Node
      jqFilter: |
        {
          "needPatch": (
            (.spec.taints // [] | any(.key == "node.cloudprovider.kubernetes.io/uninitialized") | not) and
            (.metadata.labels."node.deckhouse.io/type" != "Cloud") and
            ((.spec.providerID // "") == "")
          )
        }
EOF
}

function __main__() {
  for node in $(context::jq -r '.snapshots.nodes[] | select(.filterResult.needPatch) | .object.metadata.name'); do
    kubernetes::patch_jq "" node/${node} '.spec.providerID = "static://"'
  done
}

hook::run "$@"
