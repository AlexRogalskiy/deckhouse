matrixTestDefaults:
  internal: &internalDefaults
    clusterMasterAddresses: ["10.0.0.1:6443", "10.0.0.2:6443", "10.0.0.3:6443"]
    kubernetesCA: myclusterca
    bashibleChecksumMigration:
      worker:
        bashibleBundle: mybundle
        bashibleChecksum: mychecksum
        machineClassChecksumBeforeMigration: null
    nodeUsers:
      __ConstantChoises__:
        - []
        - [{"name":"test1","spec":{"extraGroups":["docker","printer"],"isSudoer":false,"passwordHash":"$2a$10","sshPublicKey":"ssh-rsa pubkey","uid":1001}},{"name":"test2","spec":{"isSudoer":true,"passwordHash":"$2a$20","sshPublicKey":"ssh-rsa pubkey2","uid":1002}}]
global:
  enabledModules: ["vertical-pod-autoscaler-crd"]
  modulesImages:
    registry: registry.flant.com
    registryDockercfg: cfg
    tags:
      nodeManager:
        clusterAutoscaler: imagehash
        machineControllerManager: imagehash
      common:
        kubeRbacProxy: imagehash
  discovery:
    d8SpecificNodeCountByRole:
      master:
        __ConstantChoices__: ["1", "3"]
    clusterUUID: f49dd1c3-a63a-4565-a06c-625e35587eab
    kubernetesVersion: 1.16.15
  modules:
    placement:
      __ConstantChoices__:
      - {}
      - customTolerationKeys:
          - "test-1"
          - "test-2/master"

nodeManager:
  allowedBundles:
    __ConstantChoices__:
    - __EmptyItem__
    - ["ubuntu-lts"]
  allowKubernetesVersions:
    __ConstantChoices__:
    - __EmptyItem__
    - ["1.16"]
  internal:
    instancePrefix:
      __ConstantChoices__:
      - __EmptyItem__
      - myprefix
    __ConstantChoices__:
    - <<: *internalDefaults
      cloudProvider:
        type: aws
        machineClassKind: AWSInstanceClass
        aws:
          providerAccessKeyId: myprovaccesskeyid
          providerSecretAccessKey: myprovsecretaccesskey
          region: myregion
          loadBalancerSecurityGroupID: mylbsecuritygroupid
          keyName: mykeyname
          instances:
            iamProfileName: myiamprofilename
            additionalSecurityGroups:
              __ConstantChoices__:
              - __EmptyItem__
              - ["mysecgroupid1", "mysecgroupid2"]
          internal:
            zoneToSubnetIdMap:
              zonea: mysubnetida
              zoneb: mysubnetidb
          tags:
            aaa: aaa
      nodeGroups:
        __ConstantChoices__:
        - []
        - - name: worker
            instanceClass: # maximum
              ami: myami
              diskSizeGb: 50
              diskType: gp2
              iops: 42
              instanceType: t2.medium
              tags:
                bbb: bbb
            nodeType: Cloud
            kubernetesVersion: "1.16"
            cri:
              type: "Docker"
            cloudInstances:
              classReference:
                kind: AWSInstanceClass
                name: worker
              maxPerZone: 5
              minPerZone: 3
              zones:
              - zonea
              - zoneb
        - - name: worker
            instanceClass: # minimum
              ami: myami
              instanceType: t2.medium
            nodeType: Cloud
            kubernetesVersion: "1.16"
            cri:
              type: "Docker"
            cloudInstances:
              classReference:
                kind: AWSInstanceClass
                name: worker
              maxPerZone: 1
              minPerZone: 1
              zones:
              - zonea
    - <<: *internalDefaults
      cloudProvider:
        type: openstack
        machineClassKind: OpenStackMachineClass
        openstack:
          __ConstantChoices__:
          - connection:
              authURL: https://mycloud.qqq/3/ # maximum
              caCert: mycacert
              domainName: Default
              tenantName: mytname
              username: myuname
              password: pPaAsS
              region: myreg
            podNetworkMode: DirectRoutingWithPortSecurityEnabled
            instances:
              securityGroups: [groupa, groupb]
              sshKeyPairName: mysshkey
            internalSubnet: "10.0.0.1/24"
            internalNetworkNames: [mynetwork]
            externalNetworkNames: [shared]
          - connection:
              authURL: https://mycloud.qqq/3/ # minimum
              domainName: Default
              networkName: shared
              password: pPaAsS
              region: myreg
              tenantName: mytname
              username: myuname
            podNetworkMode: DirectRoutingWithPortSecurityEnabled
      nodeGroups:
        __ConstantChoices__:
        - []
        - - name: worker
            instanceClass: # maximum
              flavorName: m1.large
              imageName: ubuntu-18-04-cloud-amd64
              mainNetwork: kube
            nodeType: Cloud
            kubernetesVersion: "1.16"
            cri:
              type: "Docker"
            cloudInstances:
              classReference:
                kind: OpenStackInstanceClass
                name: worker
              maxPerZone: 4
              minPerZone: 2
              zones:
              - zonea
              - zoneb
    - <<: *internalDefaults
      cloudProvider:
        type: gcp
        machineClassKind: GCPMachineClass
        gcp:
          __ConstantChoices__:
          - region: region
            sshKey: privatekey
            networkName: mynetwork
            subnetworkName: mysubnetwork
            disableExternalIP:
              __ConstantChoices__:
              - __EmptyItem__
              - true
              - false
            image: image
            diskSizeGb: 20
            diskType: type
            networkTags: ["tag1", "tag2"]
            labels:
              test: test
            serviceAccountJSON: |-
              {
                "type": "service_account",
                "project_id": "project_id",
                "private_key_id": "private_key_id",
                "private_key": "private_key",
                "client_email": "client_email",
                "client_id": "client_id",
                "auth_uri": "auth_uri",
                "token_uri": "token_uri",
                "auth_provider_x509_cert_url": "auth_provider_x509_cert_url",
                "client_x509_cert_url": "client_x509_cert_url"
              }
      nodeGroups:
        __ConstantChoices__:
        - []
        - - name: worker
            instanceClass: # maximum
              flavorName: m1.large
              imageName: ubuntu-18-04-cloud-amd64
              machineType: mymachinetype
              preemptible: true #optional
              diskType: superdisk #optional
              diskSizeGb: 42 #optional
            nodeType: Cloud
            kubernetesVersion: "1.16"
            cri:
              type: "Docker"
            cloudInstances:
              classReference:
                kind: GCPInstanceClass
                name: worker
              maxPerZone: 4
              minPerZone: 2
              zones:
              - zonea
              - zoneb
        - - name: worker
            instanceClass: # minimum
              flavorName: m1.large
              imageName: ubuntu-18-04-cloud-amd64
              machineType: mymachinetype
            nodeType: Cloud
            kubernetesVersion: "1.16"
            cri:
              type: "Docker"
            cloudInstances:
              classReference:
                kind: GCPInstanceClass
                name: worker
              maxPerZone: 2
              minPerZone: 2
              zones:
              - zonea
    - <<: *internalDefaults
      cloudProvider:
        type: vsphere
        machineClassKind: VsphereMachineClass
        vsphere:
          __ConstantChoices__:
          - server: myhost.qqq # maximum
            username: myname
            password: pAsSwOrd
            insecure: true # optional
            regionTagCategory: myregtagcat # optional
            zoneTagCategory: myzonetagcateg # optional
            region: myreg
            sshKeys: [key1, key2] # optional
            vmFolderPath: dev/test
            disableTimesync: false
          - server: myhost.qqq # minimum
            username: myname
            password: pAsSwOrd
            region: myreg
            vmFolderPath: dev/test
      nodeGroups:
        __ConstantChoices__:
        - []
        - - name: worker
            instanceClass: # maximum
              flavorName: m1.large
              imageName: ubuntu-18-04-cloud-amd64
              numCPUs: 3
              memory: 3
              rootDiskSize: 42
              template: dev/test
              mainNetwork: mymainnetwork
              additionalNetworks: [aaa, bbb]
              datastore: lun-111
              runtimeOptions: # optional
                nestedHardwareVirtualization: true
                memoryReservation: 42
            nodeType: Cloud
            kubernetesVersion: "1.16"
            cri:
              type: "Docker"
            cloudInstances:
              classReference:
                kind: VsphereInstanceClass
                name: worker
              maxPerZone: 4
              minPerZone: 2
              zones:
              - zonea
              - zoneb
    - <<: *internalDefaults
      cloudProvider:
        type: yandex
        machineClassKind: YandexMachineClass
        yandex:
          serviceAccountJSON: '{"my":"svcacc"}'
          region: myreg
          folderID: myfolder
          sshKey: mysshkey
          sshUser: mysshuser
          nameservers: ["4.2.2.2"]
          zoneToSubnetIdMap:
            zonea: subneta
            zoneb: subnetb
          dns:
            search: ["qwe"]
            nameservers: ["1.2.3.4","3.4.5.6"]
      nodeGroups:
        __ConstantChoices__:
        - []
        - - name: worker
            instanceClass: # maximum
              flavorName: m1.large
              imageName: ubuntu-18-04-cloud-amd64
              platformID: myplaid
              cores: 42
              coreFraction: 50 #optional
              memory: 42
              gpus: 2
              imageID: myimageid
              preemptible: true #optional
              diskType: ssd #optional
              diskSizeGB: 42 #optional
              assignPublicIPAddress: true #optional
              mainSubnet: mymainsubnet
              additionalSubnets: [aaa, bbb]
              labels: # optional
                my: label
            nodeType: Cloud
            kubernetesVersion: "1.16"
            cri:
              type: "Docker"
            cloudInstances:
              classReference:
                kind: YandexInstanceClass
                name: worker
              maxPerZone: 5
              minPerZone: 2
              zones:
              - zonea
              - zoneb
        - - name: worker
            instanceClass: # minimum
              flavorName: m1.large
              imageName: ubuntu-18-04-cloud-amd64
              platformID: myplaid
              cores: 42
              memory: 42
              gpus: 2
              imageID: myimageid
              mainSubnet: mymainsubnet
              additionalSubnets: [aaa, bbb]
              labels: # optional
                my: label
            nodeType: Cloud
            kubernetesVersion: "1.16"
            cri:
              type: "Docker"
            cloudInstances:
              classReference:
                kind: YandexInstanceClass
                name: worker
              maxPerZone: 1
              minPerZone: 1
              zones:
              - zonea
              - zoneb
    - <<: *internalDefaults
      bootstrapTokens:
        worker: mytoken
      nodeGroups:
        __ConstantChoices__:
        - []
        - - name: worker
            nodeType: Static
            kubernetesVersion: "1.16"
            cri:
              type: "Docker"
    - <<: *internalDefaults
      bootstrapTokens:
        worker: mytoken
      nodeGroups:
        __ConstantChoices__:
        - []
        - - name: worker
            nodeType: Static
            kubernetesVersion: "1.16"
            cri:
              type: "Docker"
        - - name: worker
            nodeType: Static
            kubernetesVersion: "1.19"
            cri:
              type:
                __ConstantChoices__:
                - Docker
                - Containerd
                - NotManaged
        - - name: worker
            instanceClass: # maximum
              flavorName: m1.large
              imageName: ubuntu-18-04-cloud-amd64
            nodeType: Cloud
            kubernetesVersion: "1.16"
            cri:
              type: "Docker"
            cloudInstances:
              classReference:
                kind: OpenStackInstanceClass
                name: worker
              maxPerZone: 4
              minPerZone: 2
              zones:
              - zonea
              - zoneb
