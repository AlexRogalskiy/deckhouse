diff --git a/.header b/.header
deleted file mode 100644
index 7e8b2fb8..00000000
--- a/.header
+++ /dev/null
@@ -1,13 +0,0 @@
-// Copyright 2018 The prometheus-operator Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
diff --git a/pkg/apis/monitoring/v1/openapi_generated.go b/pkg/apis/monitoring/v1/openapi_generated.go
index 67830276..b64844af 100644
--- a/pkg/apis/monitoring/v1/openapi_generated.go
+++ b/pkg/apis/monitoring/v1/openapi_generated.go
@@ -1100,6 +1100,12 @@ func schema_pkg_apis_monitoring_v1_PodMetricsEndpoint(ref common.ReferenceCallba
 							Format:      "",
 						},
 					},
+					"tlsConfig": {
+						SchemaProps: spec.SchemaProps{
+							Description: "TLS configuration to use when scraping the endpoint",
+							Ref:         ref("github.com/coreos/prometheus-operator/pkg/apis/monitoring/v1.TLSConfig"),
+						},
+					},
 					"honorLabels": {
 						SchemaProps: spec.SchemaProps{
 							Description: "HonorLabels chooses the metric's labels on collisions with target labels.",
diff --git a/pkg/apis/monitoring/v1/types.go b/pkg/apis/monitoring/v1/types.go
index 770d1e6b..3852da10 100644
--- a/pkg/apis/monitoring/v1/types.go
+++ b/pkg/apis/monitoring/v1/types.go
@@ -594,6 +594,8 @@ type PodMetricsEndpoint struct {
 	Interval string `json:"interval,omitempty"`
 	// Timeout after which the scrape is ended
 	ScrapeTimeout string `json:"scrapeTimeout,omitempty"`
+	// TLS configuration to use when scraping the endpoint
+	TLSConfig *TLSConfig `json:"tlsConfig,omitempty"`
 	// HonorLabels chooses the metric's labels on collisions with target labels.
 	HonorLabels bool `json:"honorLabels,omitempty"`
 	// MetricRelabelConfigs to apply to samples before ingestion.
diff --git a/pkg/apis/monitoring/v1/zz_generated.deepcopy.go b/pkg/apis/monitoring/v1/zz_generated.deepcopy.go
index a47cb121..bebe1862 100644
--- a/pkg/apis/monitoring/v1/zz_generated.deepcopy.go
+++ b/pkg/apis/monitoring/v1/zz_generated.deepcopy.go
@@ -442,6 +442,11 @@ func (in *PodMetricsEndpoint) DeepCopyInto(out *PodMetricsEndpoint) {
 			}
 		}
 	}
+	if in.TLSConfig != nil {
+		in, out := &in.TLSConfig, &out.TLSConfig
+		*out = new(TLSConfig)
+		**out = **in
+	}
 	if in.ProxyURL != nil {
 		in, out := &in.ProxyURL, &out.ProxyURL
 		*out = new(string)
diff --git a/pkg/prometheus/promcfg.go b/pkg/prometheus/promcfg.go
index 3888e302..a519aa56 100644
--- a/pkg/prometheus/promcfg.go
+++ b/pkg/prometheus/promcfg.go
@@ -519,7 +519,7 @@ func (cg *configGenerator) generatePodMonitorConfig(version semver.Version, m *v
 		}
 		cfg = append(cfg, yaml.MapItem{Key: "metric_relabel_configs", Value: metricRelabelings})
 	}
-
+	cfg = addTLStoYaml(cfg, ep.TLSConfig)
 	return cfg
 }
 
