#!/bin/bash

source /deckhouse/shell_lib.sh

function __config__() {
# TODO
#{
#   "beforeHelm": 20,
#   "onKubernetesEvent": [
#      {
#         "kind": "node",
#         "event": [
#            "add",
#            "update"
#         ],
#         "jqFilter": "[.metadata.name, .status.nodeInfo.osImage, .metadata.labels]"
#      }
#   ]
#}'

  cat << EOF
    configVersion: v1
    beforeHelm: 20
    schedule:
    - name: check_labels
      queue: /modules/systemd-slices-cleaner/check_labels
      crontab: "0 0 * * *"
EOF
}

function __main__() {
# finding out 16.04 ubuntu nodes without label and labeling it
  for node in $(kubectl get nodes -o json | \
                      jq -r '.items[] |
                      select ((.status.nodeInfo.osImage|test("16.04"))
                      and
                      (.metadata.labels."systemd-slices-cleaner.antiopa.flant.com/enabled" != "true")) |
                      .metadata.name')
  do
    kubectl label node $node systemd-slices-cleaner.antiopa.flant.com/enabled=true
  done

# finding out not 16.04 ubuntu with label and unlabeling it
  for node in $(kubectl get nodes -o json | \
                      jq -r '.items[] |
                      select ((.status.nodeInfo.osImage|test("16.04") | not)
                      and
                      (.metadata.labels."systemd-slices-cleaner.antiopa.flant.com/enabled" == "true")) |
                      .metadata.name')
  do
    kubectl label node $node systemd-slices-cleaner.antiopa.flant.com/enabled-
  done

# finding out is there nodes with our label in cluster
  if kubectl get nodes -l systemd-slices-cleaner.antiopa.flant.com/enabled=true -o json | jq -e '.items[0]' >/dev/null 2>&1; then
    values::set systemdSlicesCleaner.enableSlicesCleanerDS true
  else
    values::set systemdSlicesCleaner.enableSlicesCleanerDS false
  fi
}

hook::run $@
