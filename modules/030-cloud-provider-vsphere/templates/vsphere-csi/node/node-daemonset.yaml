{{- if (include "helm_lib_cluster_has_non_static_nodes" .) }}
{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: vsphere-csi-node
  namespace: d8-cloud-provider-vsphere
{{ include "helm_lib_module_labels" (list . (dict "app" "node")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: vsphere-csi-node
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: vsphere-csi-node
  namespace: d8-cloud-provider-vsphere
{{ include "helm_lib_module_labels" (list . (dict "app" "node")) | indent 2 }}
spec:
  selector:
    matchLabels:
      app: vsphere-csi-node
  template:
    metadata:
      labels:
        app: vsphere-csi-node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - operator: In
                key: node.deckhouse.io/type
                values:
                - Cloud
                - Hybrid
      imagePullSecrets:
      - name: deckhouse-registry
      hostNetwork: true
{{- include "helm_lib_priority_class" (tuple . "cluster-critical") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "every-node") | indent 6 }}
      containers:
      - name: node-driver-registerar
        image: {{ .Values.global.modulesImages.registry }}/cloud-provider-vsphere/node-registrar:{{ .Values.global.modulesImages.tags.cloudProviderVsphere.nodeRegistrar }}
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "rm -rf /registration/vsphere.csi.vmware.com /var/lib/kubelet/plugins_registry/vsphere.csi.vmware.com/csi.sock"]
        args:
        - "--v=5"
        - "--csi-address=$(ADDRESS)"
        - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
        env:
        - name: ADDRESS
          value: "/csi/csi.sock"
        - name: DRIVER_REG_SOCK_PATH
          value: "/var/lib/kubelet/csi-plugins/vsphere.csi.vmware.com/csi.sock"
        securityContext:
          privileged: true
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi
        - name: registration-dir
          mountPath: /registration
      - name: vsphere-csi-node
        image: {{ .Values.global.modulesImages.registry }}/cloud-provider-vsphere/vsphere-csi:{{ .Values.global.modulesImages.tags.cloudProviderVsphere.vsphereCsi }}
        env:
        - name: CSI_ENDPOINT
          value: "unix:///csi/csi.sock"
        - name: X_CSI_MODE
          value: "node"
        - name: X_CSI_SPEC_REQ_VALIDATION
          value: "false"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
          allowPrivilegeEscalation: true
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi
        - name: pods-mount-dir
          mountPath: /var/lib/kubelet
          # needed so that any mount setup inside this container are
          # propagated back to the host machine.
          mountPropagation: "Bidirectional"
        - name: device-dir
          mountPath: /dev
      - name: liveness-probe
        image: {{ .Values.global.modulesImages.registry }}/cloud-provider-vsphere/livenessprobe:{{ .Values.global.modulesImages.tags.cloudProviderVsphere.livenessprobe }}
        args:
        - "--csi-address=$(ADDRESS)"
        env:
        - name: ADDRESS
          value: "/csi/csi.sock"
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi
      volumes:
      - name: registration-dir
        hostPath:
          path: /var/lib/kubelet/plugins_registry
          type: DirectoryOrCreate
      - name: plugin-dir
        hostPath:
          path: /var/lib/kubelet/csi-plugins/vsphere.csi.vmware.com
          type: DirectoryOrCreate
      - name: pods-mount-dir
        hostPath:
          path: /var/lib/kubelet
          type: Directory
      - name: device-dir
        hostPath:
          path: /dev
{{- end }}
