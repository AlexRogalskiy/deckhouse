diff --git a/vertical-pod-autoscaler/pkg/admission-controller/logic/server.go b/vertical-pod-autoscaler/pkg/admission-controller/logic/server.go
index 0031bae00..26727d3ba 100644
--- a/vertical-pod-autoscaler/pkg/admission-controller/logic/server.go
+++ b/vertical-pod-autoscaler/pkg/admission-controller/logic/server.go
@@ -92,6 +92,13 @@ func (s *AdmissionServer) getPatchesForPodResourceRequest(raw []byte, namespace
 				Path:  fmt.Sprintf("/spec/containers/%d/resources/requests", i),
 				Value: v1.ResourceList{}})
 		}
+		// Add limit empty map if missing
+		if pod.Spec.Containers[i].Resources.Limits == nil {
+			patches = append(patches, patchRecord{
+				Op:    "add",
+				Path:  fmt.Sprintf("/spec/containers/%d/resources/limits", i),
+				Value: v1.ResourceList{}})
+		}
 
 		annotations, found := annotationsPerContainer[pod.Spec.Containers[i].Name]
 		if !found {
@@ -104,6 +111,13 @@ func (s *AdmissionServer) getPatchesForPodResourceRequest(raw []byte, namespace
 				Path:  fmt.Sprintf("/spec/containers/%d/resources/requests/%s", i, resource),
 				Value: request.String()})
 			annotations = append(annotations, fmt.Sprintf("%s request", resource))
+
+			// Set limit
+			patches = append(patches, patchRecord{
+				Op:    "add",
+				Path:  fmt.Sprintf("/spec/containers/%d/resources/limits/%s", i, resource),
+				Value: request.String()})
+			annotations = append(annotations, fmt.Sprintf("%s limit", resource))
 		}
 
 		updatesAnnotation = append(updatesAnnotation, fmt.Sprintf("container %d: ", i)+strings.Join(annotations, ", "))
