---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: vpa-admission-controller
  namespace: kube-system
{{ include "helm_lib_module_labels" (list . (dict "app" "vpa-admission-controller")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: vpa-admission-controller
  updatePolicy:
    updateMode: "Initial"
  resourcePolicy:
    containerPolicies:
    - containerName: "admission-controller"
      maxAllowed:
        cpu: 100m
        memory: 100Mi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vpa-admission-controller
  namespace: kube-system
{{ include "helm_lib_module_labels" (list . (dict "app" "vpa-admission-controller")) | indent 2 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpa-admission-controller
  namespace: kube-system
{{ include "helm_lib_module_labels" (list . (dict "app" "vpa-admission-controller")) | indent 2 }}
spec:
  replicas: {{ .Values.global.discovery.clusterMasterCount }}
{{- if gt (.Values.global.discovery.clusterMasterCount | int) 1 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  {{- if gt (.Values.global.discovery.clusterMasterCount | int) 2 }}
      maxUnavailable: 2
  {{- else }}
      maxUnavailable: 1
  {{- end }}
{{- end }}
  selector:
    matchLabels:
      app: vpa-admission-controller
  template:
    metadata:
      annotations:
        checksum/extension-apiserver-authentication: {{ .Values.global.discovery.extensionAPIServerAuthenticationChecksum }}
        checksum/certificate: {{ include (print .Template.BasePath "/tls-certs.yaml") . | sha256sum }}
      labels:
        app: vpa-admission-controller
    spec:
{{- include "helm_lib_priority_class" (tuple . "cluster-critical") | indent 6 }}
{{- if gt (.Values.global.discovery.clusterMasterCount | int) 1 }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: vpa-admission-controller
            topologyKey: kubernetes.io/hostname
{{- end }}
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
      - operator: Exists
      serviceAccountName: vpa-admission-controller
      imagePullSecrets:
      - name: deckhouse-registry
      containers:
      - name: admission-controller
        image: {{ $.Values.global.modulesImages.registry }}/vertical-pod-autoscaler/admission-controller:{{ $.Values.global.modulesImages.tags.verticalPodAutoscaler.admissionController }}
        command:
        - /admission-controller
        - --address=:8944
        - --tls-cert-file=/etc/tls-certs/serverCert.pem
        - --tls-private-key=/etc/tls-certs/serverKey.pem
        - --client-ca-file=/etc/tls-certs/caCert.pem
        - --stderrthreshold=0
        - --logtostderr=true
        - --alsologtostderr=true
        - --v=4
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
          - name: tls-certs
            mountPath: "/etc/tls-certs"
            readOnly: true
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
        ports:
        - containerPort: 8000
      volumes:
        - name: tls-certs
          secret:
            secretName: vpa-tls-certs
---
apiVersion: v1
kind: Service
metadata:
  name: vpa-webhook
  namespace: kube-system
{{ include "helm_lib_module_labels" (list . (dict "app" "vpa-admission-controller")) | indent 2 }}
spec:
  ports:
    - port: 443
      targetPort: 8000
  selector:
    app: vpa-admission-controller
