---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: vpa-recommender
  namespace: kube-system
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: vpa-recommender
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: "admission-controller"
      maxAllowed:
        cpu: 100m
        memory: 300Mi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vpa-recommender
  namespace: kube-system
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpa-recommender
  namespace: kube-system
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vpa-recommender
  template:
    metadata:
      labels:
        app: vpa-recommender
    spec:
{{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
      priorityClassName: cluster-medium
{{- end }}
{{- include "helm_lib_node_selector" (tuple . "system") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "system") | indent 6 }}
      serviceAccountName: vpa-recommender
      imagePullSecrets:
      - name: vertical-pod-autoscaler-antiopa-registry
      containers:
      - name: recommender
        image: {{ $.Values.global.modulesImages.registry }}/vertical-pod-autoscaler/recommender:{{ $.Values.global.modulesImages.tags.verticalPodAutoscaler.recommender }}
        command:
        - /recommender
        - --address=:8942
        - --checkpoints-gc-interval=10m0s
        - --checkpoints-timeout=1m0s
        - --kube-api-burst=10
        - --kube-api-qps=5
        - --min-checkpoints=10
        - --pod-recommendation-min-cpu-millicores=5
        - --pod-recommendation-min-memory-mb=25
        - --prometheus-address=http://127.0.0.1:8000/main/
        - --recommendation-margin-fraction=0.15
        - --recommender-interval=1m0s
        - --stderrthreshold=0
        - --storage=prometheus
        - --v=4
        resources:
          requests:
            cpu: 50m
            memory: 200Mi
        ports:
        - containerPort: 8080
      - name: outgoing-nginx
        image: {{ $.Values.global.modulesImages.registry }}/common/nginx:{{ $.Values.global.modulesImages.tags.common.nginx }}
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: vpa-outgoing-nginx-config
          subPath: outgoing-nginx.conf
        - mountPath: /etc/nginx/ssl/
          name: vpa-prometheus-api-client-cert
          readOnly: true
      volumes:
      - name: vpa-outgoing-nginx-config
        configMap:
          name: vpa-outgoing-nginx-config
      - name: vpa-prometheus-api-client-cert
        secret:
          secretName: vpa-prometheus-api-client-cert
