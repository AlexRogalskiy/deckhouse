#!/bin/bash

source /deckhouse/shell_lib_legacy.sh

function __config__() {
  echo '
{
  "afterHelm": 10,
  "afterDeleteHelm": 10
}'
}

function __main__() {
  cluster_version=$(values::get global.discovery.clusterVersion)
  if [[ "$(semver compare $cluster_version 1.11.0)" -ne "-1" ]] ; then
    if kubectl -n kube-system get deploy kube-dns > /dev/null 2> /dev/null; then
      cluster_type=$(values::get --required global.discovery.clusterType)
      # Подам kube-dns необходимо задать максимальный priorityClass, так как без подов kube-dns
      # работа всего кластера может быть нарушена

      # В ACS (acs-engine) кластерах kube-dns создается из манифестов на kube-master
      [[ "$cluster_type" == "ACS" ]] && return 0

      if hook::context_jq -re 'any(.[]; .binding=="afterHelm")' 2>/dev/null 1>&2; then
        # Необходимо проставить наивысший priorityClassName kube-dns
        fltr='. | .spec.template.spec.priorityClassName = "system-cluster-critical"'
       else
        fltr='. | del(.spec.template.spec.priorityClassName)'
      fi
      # Применяем
      kubectl::jq_patch kube-system deploy/kube-dns "$fltr"
    fi
  fi
}

hook::run $@

