#!/bin/bash

source /deckhouse/shell_lib_legacy.sh

function __config__() {
  echo '
{
  "afterHelm": 10,
  "afterDeleteHelm": 10
}'
}

function __main__() {
  cluster_version=$(values::get global.discovery.clusterVersion)
  if [[ "$(semver compare $cluster_version 1.11.0)" -ne "-1" ]] ; then
    cluster_type=$(values::get --required global.discovery.clusterType)
    # dns-controller необходимо задать максимальный priorityClass, так как без dns-controller
    # мы можем получить нерабочий инструмент kubectl

    # В Manual кластерах нет dns-controller
    [[ "$cluster_type" == "Manual" || "$cluster_type" == "ACS" ]] && return 0

    if hook::context_jq -re 'any(.[]; .binding=="afterHelm")' 2>/dev/null 1>&2; then
      # Необходимо поставить наивысший priorityClassName dns-controller
      fltr='. | .spec.template.spec.priorityClassName = "system-cluster-critical"'
    else
      fltr='. | del(.spec.template.spec.priorityClassName)'
    fi
    # Применяем
    kubectl::jq_patch kube-system deploy/dns-controller "$fltr"
  fi
}

hook::run $@

