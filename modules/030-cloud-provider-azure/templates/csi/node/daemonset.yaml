{{- if (include "helm_lib_cluster_has_non_static_nodes" .) }}
  {{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: csi-azuredisk-node
  namespace: d8-cloud-provider-azure
{{ include "helm_lib_module_labels" (list . (dict "app" "csi-azuredisk-node" "workload-resource-policy.deckhouse.io" "every-node")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: csi-azuredisk-node
  updatePolicy:
    updateMode: "Auto"
  {{- end }}
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-azuredisk-node
  namespace: d8-cloud-provider-azure
{{ include "helm_lib_module_labels" (list . (dict "app" "csi-azuredisk-node")) | indent 2 }}
spec:
  selector:
    matchLabels:
      app: csi-azuredisk-node
  template:
    metadata:
      labels:
        app: csi-azuredisk-node
    spec:
      imagePullSecrets:
      - name: deckhouse-registry
{{- include "helm_lib_priority_class" (tuple . "cluster-critical") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "any-node-with-no-csi") | indent 6 }}
      nodeSelector:
        kubernetes.io/os: linux
      hostNetwork: true
      serviceAccountName: csi-node
      containers:
        - name: liveness-probe
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          image: {{ .Values.global.modulesImages.registry }}/cloud-provider-azure/livenessprobe:{{ .Values.global.modulesImages.tags.cloudProviderAzure.livenessprobe }}
          args:
            - --csi-address=/csi/csi.sock
            - --connection-timeout=3s
            - --health-port=29603
            - --v=5
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
        - name: node-driver-registrar
          image: {{ .Values.global.modulesImages.registry }}/cloud-provider-azure/csi-node-driver-registrar:{{ .Values.global.modulesImages.tags.cloudProviderAzure.csiNodeDriverRegistrar }}
          args:
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
            - --v=5
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/disk.csi.azure.com-reg.sock /csi/csi.sock"]
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
        - name: azuredisk
          image: {{ .Values.global.modulesImages.registry }}/cloud-provider-azure/azuredisk-csi:{{ .Values.global.modulesImages.tags.cloudProviderAzure.azurediskCsi }}
          imagePullPolicy: IfNotPresent
          args:
            - "--v=5"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
            - "--metrics-address=0.0.0.0:29605"
          ports:
            - containerPort: 29603
              name: healthz
              protocol: TCP
            - containerPort: 29605
              name: metrics
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 30
          env:
            - name: AZURE_CREDENTIAL_FILE
              value: "/etc/csi-cloud-credentials/cloud-config"
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/lib/kubelet/
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - name: cloud-config
              readOnly: true
              mountPath: "/etc/csi-cloud-credentials"
            - mountPath: /var/lib/waagent/ManagedIdentity-Settings
              readOnly: true
              name: msi
            - mountPath: /dev
              name: device-dir
            - mountPath: /sys/bus/scsi/devices
              name: sys-devices-dir
            - mountPath: /sys/class/scsi_host/
              name: scsi-host-dir
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 10m
              memory: 20Mi
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/disk.csi.azure.com
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /var/lib/waagent/ManagedIdentity-Settings
          name: msi
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - hostPath:
            path: /sys/bus/scsi/devices
            type: Directory
          name: sys-devices-dir
        - hostPath:
            path: /sys/class/scsi_host/
            type: Directory
          name: scsi-host-dir
        - name: cloud-config
          secret:
            secretName: cloud-controller-manager
{{- end }}
