{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: kube-router
  namespace: d8-system
{{ include "helm_lib_module_labels" (list . (dict "app" "kube-router" "workload-resource-policy.deckhouse.io" "any-node")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: kube-router
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-router
  namespace: d8-system
{{ include "helm_lib_module_labels" (list . (dict "app" "kube-router")) | indent 2 }}
spec:
  selector:
    matchLabels:
      app: kube-router
  template:
    metadata:
      labels:
        app: kube-router
    spec:
      imagePullSecrets:
      - name: deckhouse-registry
      serviceAccountName: network-policy-engine
      containers:
      - name: kube-router
        image: {{ .Values.global.modulesImages.registry }}/network-policy-engine/kube-router:{{ .Values.global.modulesImages.tags.networkPolicyEngine.kubeRouter }}
        args:
        - --run-router=false
        - --run-firewall=true
        - --run-service-proxy=false
        - --metrics-path=/metrics
        - --metrics-port=20245
        - --health-port=20244
        securityContext:
          privileged: true
        ports:
        - containerPort: 20245
          name: http-metrics
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        livenessProbe:
          httpGet:
            path: /healthz
            port: 20244
          initialDelaySeconds: 10
          periodSeconds: 3
        volumeMounts:
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
      hostNetwork: true
{{- include "helm_lib_tolerations" (tuple . "wildcard") | indent 6 }}
      volumes:
      - name: lib-modules
        hostPath:
          path: /lib/modules
