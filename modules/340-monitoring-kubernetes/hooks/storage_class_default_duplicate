#!/bin/bash

source /deckhouse/shell_lib.sh

function __config__() {
  cat << EOF
    configVersion: v1
    kubernetes:
    - name: storageclasses
      group: main
      queue: /modules/$(module::name::kebab_case)
      apiVersion: storage.k8s.io/v1
      kind: Storageclass
      keepFullObjectsInMemory: false
      jqFilter: |
        {
          "name": .metadata.name,
          "isDefault": (
            (.metadata.annotations."storageclass.beta.kubernetes.io/is-default-class" == "true") or
            (.metadata.annotations."storageclass.kubernetes.io/is-default-class" == "true")
          )
        }
EOF
}

function __main__() {
  group="/modules/$(module::name::kebab_case)/storage_class_default_duplicate"
  jq -c --arg group "$group" '.group = $group' <<< '{"action":"expire"}' >> $METRICS_PATH
  if context::jq -er '([.snapshots.storageclasses[].filterResult | select(.isDefault == true)] | length) > 1'; then
    context::jq -c --arg group "$group" '
      .snapshots.storageclasses[].filterResult | select(.isDefault == true) |
      {
        "name": "storage_class_default_duplicate",
        "group": "\($group)",
        "set": 1,
        "labels":
        {
          "name": .name
        }
      }
      ' >> $METRICS_PATH
  fi
}

hook::run $@
