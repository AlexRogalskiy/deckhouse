- name: kubernetes.deckhouse.availability
  rules:
  - alert: TargetDown
    expr: up{job="deckhouse"} == 0
    labels:
      severity_level: "4"
      tier: cluster
    annotations:
      plk_protocol_version: "1"
      plk_pending_until_firing_for: "2m"
      plk_grouped_by/deckhouse_availability: "DeckhouseUnavailable,tier=cluster,prometheus=deckhouse"
      summary: Prometheus не может получить метрики deckhouse
      description: |
        Prometheus не может получить метрики deckhouse

  - alert: DeckhouseIsNotReady
    expr: min(kube_pod_status_ready{condition="true", namespace="d8-system", pod=~"deckhouse-.*"}) != 1
    labels:
      severity_level: "4"
      tier: cluster
    annotations:
      plk_protocol_version: "1"
      plk_pending_until_firing_for: "2m"
      plk_grouped_by/deckhouse_availability: "DeckhouseUnavailable,tier=cluster,prometheus=deckhouse"
      summary: Deckhouse не работает
      description: |
        Под deckhouse НЕ находится в состоянии Ready

  - alert: DeckhouseIsNotRunning
    expr: absent(kube_pod_status_phase{namespace="d8-system",phase="Running",pod=~"deckhouse-.*"})
    labels:
      severity_level: "4"
      tier: cluster
    annotations:
      plk_protocol_version: "1"
      plk_pending_until_firing_for: "2m"
      plk_grouped_by/deckhouse_availability: "DeckhouseUnavailable,tier=cluster,prometheus=deckhouse"
      summary: Под deckhouse отсуствует
      description: |
        Под deckhouse отсутствует в кластере

  - alert: DeckhouseIsHung
    expr: max(increase(deckhouse_live_ticks[2m])) < 1
    labels:
      severity_level: "4"
      tier: cluster
    annotations:
      plk_protocol_version: "1"
      plk_grouped_by/deckhouse_availability: "DeckhouseUnavailable,tier=cluster,prometheus=deckhouse"
      summary: Deckhouse не работает
      description: |
        Deckhouse, скорей всего, полностью завис, так как в prometheus более не увеличивается метрика deckhouse_live_ticks (а должна каждые 10 секунд).

  - alert: DeckhouseUnavailable
    expr: count(ALERTS{alertname=~"DeckhouseIsNotRunning|DeckhouseIsNotReady|DeckhouseIsHung"}) or count(ALERTS{alertname="TargetDown", job="deckhouse"})
    labels:
      severity_level: "9"
      tier: cluster
    annotations:
      plk_protocol_version: "1"
      plk_pending_until_firing_for: "24h"
      summary: Deckhouse не работает
      description: |
        Deckhouse не работает. Что именно с ним не так можно узнать в одном из связанных алертов.

- name: kubernetes.deckhouse.malfunctioning
  rules:
  - alert: DeckhouseIsRestartingTooOften
    expr: max(increase(kube_pod_container_status_restarts_total{namespace="d8-system", pod=~"deckhouse-.*"}[1h])) > 3
    labels:
      severity_level: "9"
      tier: cluster
    annotations:
      plk_protocol_version: "1"
      plk_grouped_by/deckhouse_malfunctioning: "DeckhouseMalfunctioning,tier=cluster,prometheus=deckhouse"
      summary: Deckhouse слишком часто перезагружается
      description: |
        Количество перезапусков за последний час: {{ $value }}.

        Частый перезапуск Deckhouse не является нормальной ситуацией — deckhouse должен быть постоянно запущен и работать.

  - alert: DeckhouseHasNoAccessToRegistry
    expr: max(increase(deckhouse_registry_errors[5m])) > 0
    for: 1h
    labels:
      severity_level: "7"
      tier: cluster
    annotations:
      plk_protocol_version: "1"
      plk_pending_until_firing_for: "1h"
      plk_grouped_by/deckhouse_malfunctioning: "DeckhouseMalfunctioning,tier=cluster,prometheus=deckhouse"
      summary: Deckhouse не может подключиться к registry
      description: |
        У deckhouse нет доступа к registry (обычно registry.flant.com), в котором он каждые 15 секунд проверяет наличие нового Docker образа. Пока у deckhouse нет доступа к registry — он не будет автоматически обновляться.

        Обычно этот алерт означает, что у pod'а deckhouse есть какие-то проблемы с доступом в интернет.

  - alert: DeckhouseQueueIsHung
    expr: max by (queue) (min_over_time(deckhouse_tasks_queue_length[2m])) > 10
    labels:
      severity_level: "7"
      tier: cluster
    annotations:
      plk_protocol_version: "1"
      plk_pending_until_firing_for: "10m"
      plk_grouped_by/deckhouse_malfunctioning: "DeckhouseMalfunctioning,tier=cluster,prometheus=deckhouse"
      summary: Deckhouse зависла
      description: |
        Deckhouse не может обработать очередь {{ $labels.queue }}, в которой скопилось {{ $value }} заданий.

  - alert: DeckhouseGlobalHookFailsTooOften
    expr: max(increase({job="deckhouse", __name__=~"deckhouse_global_hook.*_errors"}[5m])) by (hook) > 1
    labels:
      severity_level: "9"
      tier: cluster
    annotations:
      plk_protocol_version: "1"
      plk_pending_until_firing_for: "10m"
      plk_grouped_by/deckhouse_malfunctioning: "DeckhouseMalfunctioning,tier=cluster,prometheus=deckhouse"
      summary: Глобальный хук Deckhouse падает слишком часто
      descritipion: |
        Глобальный хук {{ $labels.hook }} падает каждые 5 минут

  - alert: DeckhouseModuleHookFailsTooOften
    expr: max(increase({job="deckhouse", __name__=~"deckhouse_module_hook.*_errors"}[5m])) by (module, hook) > 1
    labels:
      severity_level: "9"
      tier: cluster
    annotations:
      plk_protocol_version: "1"
      plk_pending_until_firing_for: "10m"
      plk_grouped_by/deckhouse_malfunctioning: "DeckhouseMalfunctioning,tier=cluster,prometheus=deckhouse"
      summary: Модульный хук Deckhouse падает слишком часто
      descritipion: |
        Хук {{ $labels.hook }} модуля {{ $labels.module }} падает каждые 5 минут

  - alert: DeckhouseCouldNotDiscoverModules
    expr: max(increase(deckhouse_modules_discover_errors[2m])) > 1
    labels:
      severity_level: "4"
      tier: cluster
    annotations:
      plk_protocol_version: "1"
      plk_pending_until_firing_for: "3m"
      plk_grouped_by/deckhouse_malfunctioning: "DeckhouseMalfunctioning,tier=cluster,prometheus=deckhouse"

  - alert: DeckhouseCouldNotRunModule
    expr: max(increase(deckhouse_module_run_errors[2m])) by (module) > 1
    labels:
      severity_level: "4"
      tier: cluster
    annotations:
      plk_protocol_version: "1"
      plk_pending_until_firing_for: "3m"
      plk_grouped_by/deckhouse_malfunctioning: "DeckhouseMalfunctioning,tier=cluster,prometheus=deckhouse"

  - alert: DeckhouseCouldNotDeleteModule
    expr: max(increase(deckhouse_module_delete_errors[2m])) by (module) > 1
    labels:
      severity_level: "4"
      tier: cluster
    annotations:
      plk_protocol_version: "1"
      plk_pending_until_firing_for: "3m"
      plk_grouped_by/deckhouse_malfunctioning: "DeckhouseMalfunctioning,tier=cluster,prometheus=deckhouse"

  - alert: DeckhouseCouldNotRunGlobalHook
    expr: max(increase(deckhouse_global_hook_errors[2m])) by (hook) > 1
    labels:
      severity_level: "5"
      tier: cluster
    annotations:
      plk_protocol_version: "1"
      plk_pending_until_firing_for: "3m"
      plk_grouped_by/deckhouse_malfunctioning: "DeckhouseMalfunctioning,tier=cluster,prometheus=deckhouse"

  - alert: DeckhouseCouldNotRunModuleHook
    expr: max(increase(deckhouse_module_hook_errors[2m])) by (module, hook) > 1
    labels:
      severity_level: "7"
      tier: cluster
    annotations:
      plk_protocol_version: "1"
      plk_pending_until_firing_for: "3m"
      plk_grouped_by/deckhouse_malfunctioning: "DeckhouseMalfunctioning,tier=cluster,prometheus=deckhouse"

  - alert: DeckhouseMalfunctioning
    expr: count(ALERTS{alertname=~"DeckhouseCouldNotDiscoverModules|DeckhouseCouldNotRunGlobalHook|DeckhouseCouldNotRunModuleHook|DeckhouseCouldNotRunModule|DeckhouseCouldNotDeleteModule|DeckhouseQueueIsHung|DeckhouseGlobalHookFailsTooOften|DeckhouseModuleHookFailsTooOften"})
    labels:
      severity_level: "9"
      tier: cluster
    annotations:
      plk_protocol_version: "1"
      plk_markup_format: "markdown"
      plk_pending_until_firing_for: "24h"
      summary: Deckhouse работает некорректно
      description: |
        Deckhouse работает некорректно. Что именно с ним не так можно узнать в одном из связанных алертов.
        Необходимо посмотреть логи:
        1. `kubectl -n d8-system logs -f -l app=deckhouse`
