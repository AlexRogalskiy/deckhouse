diff --git a/collector/filesystem_common.go b/collector/filesystem_common.go
index 47ee4bff..aee9c284 100644
--- a/collector/filesystem_common.go
+++ b/collector/filesystem_common.go
@@ -52,6 +52,7 @@ type filesystemCollector struct {
 
 type filesystemLabels struct {
 	device, mountPoint, fsType string
+	hostMountPoint             string // mount point on host (i.e. in docker without rootfs prefix)
 }
 
 type filesystemStats struct {
diff --git a/collector/filesystem_linux.go b/collector/filesystem_linux.go
index c82933bf..7eb83170 100644
--- a/collector/filesystem_linux.go
+++ b/collector/filesystem_linux.go
@@ -48,13 +48,13 @@ func (c *filesystemCollector) GetStats() ([]filesystemStats, error) {
 		}
 
 		buf := new(syscall.Statfs_t)
-		err := syscall.Statfs(labels.mountPoint, buf)
+		err := syscall.Statfs(rootfsFilePath(labels.mountPoint), buf)
 		if err != nil {
 			stats = append(stats, filesystemStats{
 				labels:      labels,
 				deviceError: 1,
 			})
-			log.Errorf("Error on statfs() system call for %q: %s", labels.mountPoint, err)
+			log.Errorf("Error on statfs() system call for %q: %s", rootfsFilePath(labels.mountPoint), err)
 			continue
 		}
 
@@ -87,9 +87,13 @@ func mountPointDetails() ([]filesystemLabels, error) {
 	scanner := bufio.NewScanner(file)
 	for scanner.Scan() {
 		parts := strings.Fields(scanner.Text())
+		// skip non rootfs pathes if rootfsPath defined
+		if !rootfsPathDetect(parts[1]) {
+			continue
+		}
 		filesystems = append(filesystems, filesystemLabels{
 			device:     parts[0],
-			mountPoint: parts[1],
+			mountPoint: rootfsStripPrefix(parts[1]),
 			fsType:     parts[2],
 		})
 	}
diff --git a/collector/paths.go b/collector/paths.go
index f8e6e6e5..92a99edb 100644
--- a/collector/paths.go
+++ b/collector/paths.go
@@ -15,6 +15,7 @@ package collector
 
 import (
 	"path"
+	"strings"
 
 	"github.com/prometheus/procfs"
 	"gopkg.in/alecthomas/kingpin.v2"
@@ -22,8 +23,9 @@ import (
 
 var (
 	// The path of the proc filesystem.
-	procPath = kingpin.Flag("path.procfs", "procfs mountpoint.").Default(procfs.DefaultMountPoint).String()
-	sysPath  = kingpin.Flag("path.sysfs", "sysfs mountpoint.").Default("/sys").String()
+	procPath   = kingpin.Flag("path.procfs", "procfs mountpoint.").Default(procfs.DefaultMountPoint).String()
+	sysPath    = kingpin.Flag("path.sysfs", "sysfs mountpoint.").Default("/sys").String()
+	rootfsPath = kingpin.Flag("path.rootfs", "rootfs mountpoint.").Default("").String()
 )
 
 func procFilePath(name string) string {
@@ -33,3 +35,30 @@ func procFilePath(name string) string {
 func sysFilePath(name string) string {
 	return path.Join(*sysPath, name)
 }
+
+func rootfsFilePath(name string) string {
+	if name == "/" {
+		return *rootfsPath
+	}
+	return path.Join(*rootfsPath, name)
+}
+
+func rootfsStripPrefix(path string) string {
+	if path == *rootfsPath {
+		return "/"
+	}
+	if strings.HasPrefix(path, *rootfsPath) {
+		return strings.TrimPrefix(path, *rootfsPath)
+	}
+	return path
+}
+
+func rootfsPathDetect(path string) bool {
+	if *rootfsPath == "" {
+		return true
+	}
+	if strings.HasPrefix(path, *rootfsPath) {
+		return true
+	}
+	return false
+}
