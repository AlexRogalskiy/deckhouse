#!/bin/bash

source /antiopa/shell_lib.sh

function __config__() {
  jo -p schedule="$(jo -a \
    "$(jo allowFailure=true crontab="* * * * *")"
  )"
}

function __main__() {
  cluster_version=$(values::get global.discovery.clusterVersion)
  # Убедимся, что версия кластера выше 1.11 и мы можем, в теории, ресайзить PVC
  if [ "$(semver compare "$cluster_version" 1.11.0)" -ne "-1" ] ; then
    for pvc in prometheus-main-db-prometheus-main-0 prometheus-longterm-db-prometheus-longterm-0; do
      if [ "$pvc" == "prometheus-main-db-prometheus-main-0" ]; then
        pod_name="prometheus-main-0"
      else
        pod_name="prometheus-longterm-0"
      fi
      # Не имеет смысла все это делать, если у нас нет PVC, а используется emptydir
      if kubectl -n kube-prometheus get pvc "$pvc" > /dev/null 2> /dev/null ; then
        # Проверим, что такой storageclass существует, а значит это не localstorage
        if kubectl get sc $(kubectl -n kube-prometheus get pvc ${pvc} -o json | jq -r '.spec.storageClassName') > /dev/null 2>&1 ; then
          # Проверим, поддерживает ли storage class expansion PVC
          if [ "$(kubectl get sc "$(kubectl -n kube-prometheus get pvc "$pvc" -o json | jq '.spec.storageClassName' -r)" -o json | jq '.allowVolumeExpansion')" = "true" ] ; then
            # Посчитаем, сколько занято диско в prometheus
            prometheus_size=$(kubectl -n kube-prometheus exec $pod_name -c prometheus --  df -h /prometheus/ | grep -v 'Filesystem' | awk '{print $5}' | tr -d '%')
            # Если у нас Kubernetes версии 1.11 и SC поддерживает Expansion и в PVC занято более 90% места
            if [ "$prometheus_size" -gt "90" ] ; then
              # Проверим, что диск уже не отресайзили, проверив статус и если диск не ждет ресайза (удаления пода), то произведем увеличение диска
              if ! kubectl -n kube-prometheus get pvc "$pvc" -o json | jq '.status.conditions[] | select (.type=="FileSystemResizePending" and .status=="True") | .message' > /dev/null 2> /dev/null ; then
                size=$(kubectl -n kube-prometheus get pvc "$pvc" -o json | jq '.status.capacity.storage' -r | kube-resource-unit-converter)
                # Накидываем 3 ГиБ
                new_size=$((size + 3221225472))
                fltr='. | .spec.resources.requests.storage = '"\"${new_size}\""
                echo "!!! $pod_name's storage has been resized from $(( size / 1024 / 1024 / 1024 )) to $(( new_size / 1024 / 1024 / 1024 )) !!!"
                # Пропатчим PVC
                kubectl::jq_patch "kube-prometheus" "pvc/$pvc" "$fltr"
              fi
            fi
          fi
        fi
      fi
    done
  fi
}

hook::run "$@"
