#!/bin/bash

source /deckhouse/shell_lib.sh

function __config__() {
  jo -p schedule="$(jo -a \
    "$(jo allowFailure=true crontab="*/15 * * * *")"
  )"
}

function __main__() {
  cluster_version=$(values::get global.discovery.clusterVersion)
  pvc_list="prometheus-main-db-prometheus-main-0 prometheus-longterm-db-prometheus-longterm-0"
  if module::is_ha_enabled; then
    pvc_list="$pvc_list prometheus-main-db-prometheus-main-1"
  fi

  if [ "$(semver compare "$cluster_version" 1.11.0)" -ne "-1" ] ; then
    for pvc in $pvc_list; do
      pod_name=$(echo $pvc | sed -r 's/^prometheus-(\w+)-.*-([0-9]+)$/prometheus-\1-\2/') # prometheus-main-db-prometheus-main-0 -> prometheus-main-0
      # Если PVC находится в статусе ожидания рестарта пода, то надо пересоздать под и тогда диск расширится
      if kubectl -n d8-monitoring get pvc "$pvc" > /dev/null 2>&1 ; then
        if kubectl -n d8-monitoring get pvc "$pvc" -o json | jq -e '. | select(.status.phase=="Bound")' > /dev/null 2>&1 ; then
          if kubectl -n d8-monitoring get pvc "$pvc" -o json | jq '.status.conditions[] | select (.type=="FileSystemResizePending" and .status=="True") | .message' > /dev/null 2> /dev/null; then
            kubectl -n d8-monitoring delete pod "$pod_name"
          fi
        fi
      fi
    done
  fi
}

hook::run "$@"
