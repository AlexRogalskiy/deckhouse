#!/bin/bash

source /antiopa/shell_lib.sh

MADISON_SELF_SETUP_TOKEN="***REMOVED***"

function __config__() {
  jo -p beforeHelm=0
}

function __main__() {
  local project=$(values::get --required global.project)
  local cluster_name=$(values::get --required global.clusterName)

  local grafana_url="-"
  local prometheus_url="-"
  local cluster_hostname=$(values::get global.clusterHostname)
  local scheme=$([[ "$(values::get global.ingressACME)" == "true" ]] && echo "https" || echo "http")
  if ! values::is_empty $cluster_hostname ; then
    grafana_url="${scheme}://prometheus.${cluster_hostname}/"
    prometheus_url="${scheme}://prometheus.${cluster_hostname}/prometheus/"
  fi

  local madison_auth_key=$(values::get prometheus.madisonAuthKey)
  if values::is_empty $madison_auth_key ; then
    local request=$(jo \
      type=prometheus \
      name=kubernetes-$cluster_name \
      prometheus_url=$prometheus_url \
      grafana_url=$grafana_url \
      extra_data="$(jo \
        labels="$(jo \
          kubernetes=$cluster_name \
        )"
      )"
    )
    local response=$(curl -s -H "Content-Type: application/json" -X POST -d "$request" https://madison.flant.com/api/$project/self_setup/$MADISON_SELF_SETUP_TOKEN)
    local error=$(echo "$response" | jq .error -r)
    madison_auth_key=$(echo "$response" | jq .auth_key -r)

    if ! values::is_empty $error ; then
      >&2 echo "Failed to self register in madison: $error"
      return 1
    fi

    if values::is_empty $madison_auth_key ; then
      >&2 echo "Failed to self register in madison: unknown error"
      return 1
    fi

    values::set --config prometheus.madisonAuthKey $madison_auth_key
  else
    local request=$(jo \
      name=kubernetes-$cluster_name \
      prometheus_url=$prometheus_url \
      grafana_url=$grafana_url \
      extra_data="$(jo \
        labels="$(jo \
          kubernetes=$cluster_name \
        )"
      )"
    )
    local response=$(curl -s -H "Content-Type: application/json" -X PUT -d "$request" https://madison.flant.com/api/$project/self_update/$madison_auth_key)
    local error=$(echo "$response" | jq .error -r)
    madison_auth_key=$(echo "$response" | jq .auth_key -r)

    if ! values::is_empty $error ; then
      >&2 echo "Failed to self update in madison: $error"
      return 1
    fi

    if values::is_empty $madison_auth_key ; then
      >&2 echo "Failed to self update in madison: unknown error"
      return 1
    fi
  fi
}

hook::run $@
