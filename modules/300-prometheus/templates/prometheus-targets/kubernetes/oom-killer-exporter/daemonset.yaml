{{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: oom-killer-exporter
  namespace: kube-prometheus
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
    app: oom-killer-exporter
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: oom-killer-exporter
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - name: oom-killer-exporter
      maxAllowed:
        cpu: 0.1
        memory: 0.1Gi
    - name: prometheus-auth-proxy
      maxAllowed:
        cpu: 0.01
        memory: 0.02Gi
{{- end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: oom-killer-exporter
  namespace: kube-prometheus
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
    app: oom-killer-exporter
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: oom-killer-exporter
  template:
    metadata:
      labels:
        app: oom-killer-exporter
      name: oom-killer-exporter
    spec:
      {{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
      priorityClassName: cluster-medium
      {{- end }}
      imagePullSecrets:
      - name: antiopa-registry
      containers:
      - name: oom-killer-exporter
        image: {{ $.Values.global.modulesImages.registry }}/prometheus/kubernetes-oomkill-exporter:{{ $.Values.global.modulesImages.tags.prometheus.kubernetesOomkillExporter }}
        imagePullPolicy: IfNotPresent
        args:
        - -logtostderr
        - -v=2
        - -listen-address=127.0.0.1:9102
        securityContext:
          privileged: true
        env:
        - name: DOCKER_HOST
          value: "unix:///var/run/docker.sock"
        volumeMounts:
        - name: kmsg
          mountPath: /dev/kmsg
          readOnly: true
        - name: docker
          mountPath: /var/run/docker.sock
      - name: prometheus-auth-proxy
        image: {{ $.Values.global.modulesImages.registry }}/prometheus/kube-prometheus-auth-proxy:{{ $.Values.global.modulesImages.tags.prometheus.kubePrometheusAuthProxy }}
        args:
        - "--listen=9101"
        - "--proxy-pass=http://127.0.0.1:9102/metrics"
        ports:
        - containerPort: 9101
          name: https
      volumes:
      - name: kmsg
        hostPath:
          path: /dev/kmsg
      - name: docker
        hostPath:
          path: /var/run/docker.sock
      tolerations:
      - operator: Exists
