{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: kubelet-eviction-thresholds-exporter
  namespace: kube-prometheus
{{ include "helm_lib_module_labels" (list . (dict "app" "kubelet-eviction-thresholds-exporter")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: kubelet-eviction-thresholds-exporter
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - name: kubelet-eviction-thresholds-exporter
      maxAllowed:
        cpu: 0.1
        memory: 0.1Gi
{{- end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kubelet-eviction-thresholds-exporter
  namespace: kube-prometheus
{{ include "helm_lib_module_labels" (list . (dict "app" "kubelet-eviction-thresholds-exporter")) | indent 2 }}
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: kubelet-eviction-thresholds-exporter
  template:
    metadata:
      labels:
        app: kubelet-eviction-thresholds-exporter
      name: kubelet-eviction-thresholds-exporter
    spec:
      serviceAccountName: kubelet-eviction-thresholds-exporter
      hostNetwork: true
      hostPID: true
      tolerations:
      - operator: Exists
      {{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
      priorityClassName: cluster-medium
      {{- end }}
      containers:
      - image: {{ $.Values.global.modulesImages.registry }}/prometheus/kubelet-eviction-thresholds-exporter:{{ $.Values.global.modulesImages.tags.prometheus.kubeletEvictionThresholdsExporter }}
        name: kubelet-eviction-thresholds-exporter
        env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: root
          readOnly:  true
          mountPath: /host/
        - name: textfile
          mountPath: /var/run/node-exporter-textfile
        - name: dockersock
          mountPath: /var/run/docker.sock
      tolerations:
      - operator: Exists
      volumes:
      - name: textfile
        hostPath:
          path: /var/run/node-exporter-textfile
          type: DirectoryOrCreate
      - name: root
        hostPath:
          path: /
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      imagePullSecrets:
      - name: deckhouse-registry
