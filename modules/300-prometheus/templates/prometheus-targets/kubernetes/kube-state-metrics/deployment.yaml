apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kube-state-metrics
  namespace: kube-prometheus
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
    app: kube-state-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-state-metrics
  template:
    metadata:
      labels:
        app: kube-state-metrics
    spec:
      serviceAccountName: kube-state-metrics
{{- if and (hasKey .Values.prometheus "nodeSelector") (.Values.prometheus.nodeSelector) }}
      nodeSelector:
{{ .Values.prometheus.nodeSelector | toYaml | trim | indent 8 }}
{{- else if and (not (hasKey .Values.prometheus "nodeSelector")) .Values.global.discovery.clusterHasSystemNodes }}
      nodeSelector:
        node-role/system: ""
{{- end }}
{{- if and (hasKey .Values.prometheus "tolerations") (.Values.prometheus.tolerations) }}
      tolerations:
{{ .Values.prometheus.tolerations | toYaml | trim | indent 6 }}
{{- else if and (not (hasKey .Values.prometheus "tolerations")) .Values.global.discovery.clusterHasSystemNodes }}
      tolerations:
      - key: node-role/system
        effect: NoExecute
{{- end }}
      containers:
      - name: prometheus-auth-proxy-main
        image: flant/kube-prometheus-auth-proxy:v0.1.0
        args:
        - "--listen=8443"
        - "--proxy-pass=http://127.0.0.1:8081/metrics"
        ports:
        - containerPort: 8443
          name: https-main
        resources:
          requests:
            memory: 20Mi
            cpu: 10m
          limits:
            memory: 40Mi
            cpu: 20m
      - name: prometheus-auth-proxy-self
        image: flant/kube-prometheus-auth-proxy:v0.1.0
        args:
        - "--listen=9443"
        - "--proxy-pass=http://127.0.0.1:8082/metrics"
        ports:
        - containerPort: 9443
          name: https-self
        resources:
          requests:
            memory: 20Mi
            cpu: 10m
          limits:
            memory: 40Mi
            cpu: 20m
      - name: kube-state-metrics
        image: quay.io/coreos/kube-state-metrics:v1.3.0-rc.0
        args:
        - "--host=127.0.0.1"
        - "--port=8081"
        - "--telemetry-host=127.0.0.1"
        - "--telemetry-port=8082"
      - name: addon-resizer
        image: gcr.io/google_containers/addon-resizer:1.8.1
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 30Mi
        env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        command:
          - /pod_nanny
          - --config-dir=/etc/config
          - --container=kube-state-metrics
          - --cpu=100m
          - --extra-cpu=2m
          - --memory=150Mi
          - --extra-memory=30Mi
          - --threshold=5
          - --deployment=kube-state-metrics
        volumeMounts:
        - name: addon-resizer-config
          mountPath: /etc/config
      volumes:
      - name: addon-resizer-config
        configMap:
          name: kube-state-metrics-addon-resizer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-state-metrics-addon-resizer
  namespace: kube-prometheus
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
    app: kube-state-metrics
data:
  NannyConfiguration: |-
    apiVersion: nannyconfig/v1alpha1
    kind: NannyConfiguration
