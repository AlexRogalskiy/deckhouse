{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: kube-state-metrics
  namespace: kube-prometheus
{{ include "helm_lib_module_labels" (list . (dict "app" "kube-state-metrics")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: kube-state-metrics
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: "kube-state-metrics"
      maxAllowed:
        cpu: {{ .Values.prometheus.vpa.kubeStateMetricsMaxCPU | quote }}
        memory: {{ .Values.prometheus.vpa.kubeStateMetricsMaxMemory | quote }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-state-metrics
  namespace: kube-prometheus
{{ include "helm_lib_module_labels" (list . (dict "app" "kube-state-metrics")) | indent 2 }}
spec:
  replicas: {{ include "helm_lib_is_ha_to_value" (list . 2 1) }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: kube-state-metrics
  template:
    metadata:
      labels:
        app: kube-state-metrics
    spec:
      imagePullSecrets:
      - name: deckhouse-registry
      serviceAccountName: kube-state-metrics
{{- include "helm_lib_node_selector" (tuple . "monitoring") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "monitoring") | indent 6 }}
      {{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
      priorityClassName: cluster-medium
      {{- end }}
      containers:
      - name: ca-auth-proxy-main
        image: {{ $.Values.global.modulesImages.registry }}/common/kube-ca-auth-proxy:{{ $.Values.global.modulesImages.tags.common.kubeCaAuthProxy }}
        args:
        - "--listen=8443"
        - "--proxy-pass=http://127.0.0.1:8081/metrics"
        - "--user=kube-prometheus:scraper"
        ports:
        - containerPort: 8443
          name: https-main
        resources:
          requests:
            memory: 20Mi
            cpu: 10m
      - name: ca-auth-proxy-self
        image: {{ $.Values.global.modulesImages.registry }}/common/kube-ca-auth-proxy:{{ $.Values.global.modulesImages.tags.common.kubeCaAuthProxy }}
        args:
        - "--listen=9443"
        - "--proxy-pass=http://127.0.0.1:8082/metrics"
        - "--user=kube-prometheus:scraper"
        ports:
        - containerPort: 9443
          name: https-self
        resources:
          requests:
            memory: 20Mi
            cpu: 10m
      - name: kube-state-metrics
        image: {{ $.Values.global.modulesImages.registry }}/prometheus/kube-state-metrics:{{ $.Values.global.modulesImages.tags.prometheus.kubeStateMetrics }}
        args:
        - "--host=127.0.0.1"
        - "--port=8081"
        - "--telemetry-host=127.0.0.1"
        - "--telemetry-port=8082"
        resources: {}
