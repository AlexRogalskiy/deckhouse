---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: kube-etcd
  namespace: kube-prometheus
{{ include "helm_lib_module_labels" (list . (dict "prometheus" "main")) | indent 2 }}
spec:
  jobLabel: prometheus-target
  selector:
    matchLabels:
{{- if not (eq .Values.global.discovery.clusterType "ACS") }}
      app: kube-prometheus-kube-master-proxy
{{- else }}
      component: kube-apiserver
      tier: control-plane
{{- end }}
  namespaceSelector:
    matchNames:
    - kube-system
  podMetricsEndpoints:
  - targetPort: etcd
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
      certFile: /etc/prometheus/secrets/prometheus-scraper-tls/tls.crt
      keyFile: /etc/prometheus/secrets/prometheus-scraper-tls/tls.key
    relabelings:
    - regex: endpoint|namespace|pod|container
      action: labeldrop
    # todo: убрать после рефакторинга алертов
    - sourceLabels: ["job"]
      regex: '.*/(.*)'
      replacement: '$1'
      targetLabel: job
    - sourceLabels: [__meta_kubernetes_pod_node_name]
      targetLabel: node
    - targetLabel: component
      replacement: etcd
{{- if or (eq .Values.global.discovery.clusterType "AWS") (eq .Values.global.discovery.clusterType "GCE") }}
  - targetPort: etcd-events
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
      certFile: /etc/prometheus/secrets/prometheus-scraper-tls/tls.crt
      keyFile: /etc/prometheus/secrets/prometheus-scraper-tls/tls.key
    relabelings:
    - regex: endpoint|namespace|pod|service
      action: labeldrop
    # todo: убрать после рефакторинга алертов
    - sourceLabels: ["job"]
      regex: '.*/(.*)'
      replacement: '$1'
      targetLabel: job
    - sourceLabels: [__meta_kubernetes_pod_node_name]
      targetLabel: node
    - targetLabel: component
      replacement: etcd-events
{{- end }}
