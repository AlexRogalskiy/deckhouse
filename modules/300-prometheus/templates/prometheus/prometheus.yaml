apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: main
  namespace: kube-prometheus
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
    app: prometheus
spec:
  replicas: 1
  retention: {{ .Values.prometheus.retentionDays }}d
  version: v2.6.0
  scrapeInterval: 30s
  evaluationInterval: 30s
  serviceAccountName: prometheus
  serviceMonitorSelector:
    matchLabels:
      prometheus: main
  secrets:
  - prometheus-scraper-cert
  ruleSelector:
    matchLabels:
      prometheus: main
      component: rules
{{- if or (hasKey .Values.prometheus "madisonAuthKey") (hasKey .Values.prometheus "additionalAlertmanagers") }}
  alerting:
    alertmanagers:
  {{- if hasKey .Values.prometheus "madisonAuthKey" }}
    - namespace: kube-prometheus
      name: madison-proxy
      port: http
  {{- end }}
  {{- if hasKey .Values.prometheus "additionalAlertmanagers" }}
    {{- range .Values.prometheus.additionalAlertmanagers }}
    - namespace: {{ .namespace }}
      name: {{ .name }}
      port: {{ .port }}
      scheme: http
      pathPrefix: {{ .pathPrefix }}
    {{- end }}
  {{- end }}
{{- end }}
{{- if .Values.global.ingressACME }}
  externalUrl: https://prometheus.{{ .Values.global.clusterHostname }}/prometheus/
{{- else }}
  externalUrl: http://prometheus.{{ .Values.global.clusterHostname }}/prometheus/
{{- end }}
  securityContext:
    fsGroup: 2000
    runAsUser: 1000
  resources:
    requests:
      {{- /* 8Кб × количество метрик */}}
      memory: {{ max (div (mul .Values.prometheus.estimatedNumberOfMetrics 8192) 1048576) 500 }}Mi
    limits:
      {{- /* 16Кб × количество метрик */}}
      memory: {{ max (div (mul .Values.prometheus.estimatedNumberOfMetrics 16384) 1048576) 500 }}Mi
{{- if and (hasKey .Values.prometheus "nodeSelector") (.Values.prometheus.nodeSelector) }}
  nodeSelector:
{{ .Values.prometheus.nodeSelector | toYaml | trim | indent 4 }}
{{- else if and (not (hasKey .Values.prometheus "nodeSelector")) .Values.global.discovery.clusterHasSystemNodes }}
  nodeSelector:
    node-role/system: ""
{{- end }}
{{- if and (hasKey .Values.prometheus "tolerations") (.Values.prometheus.tolerations) }}
  tolerations:
{{ .Values.prometheus.tolerations | toYaml | trim | indent 2 }}
{{- else if and (not (hasKey .Values.prometheus "tolerations")) .Values.global.discovery.clusterHasSystemNodes }}
  tolerations:
  - key: node-role/system
    effect: NoExecute
{{- end }}
{{- $storageClassName := .Values.prometheus.storageClassName | default .Values.global.storageClassName | default .Values.global.discovery.defaultStorageClassName }}
{{- if $storageClassName }}
  storage:
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            {{- /* 2 раза в минуту * 60 минут * 24 часа * 2 байта на метрику + 30% запас = 7488 байт на метрику в сутки */}}
            storage: {{ add (div (mul (mul .Values.prometheus.estimatedNumberOfMetrics 7488) .Values.prometheus.retentionDays) 1073741824) 1 }}G
        storageClassName: {{ $storageClassName }}
{{- end }}
