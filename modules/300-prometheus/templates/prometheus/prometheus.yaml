{{- $certmanager_cluster_issuer_name := include "certmanager_cluster_issuer_name" . }}
{{- $custom_certificate_secret_name := include "custom_certificate_secret_name" . }}

{{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: prometheus
  namespace: kube-prometheus
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
    app: prometheus
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: StatefulSet
    name: prometheus-main
  updatePolicy:
    updateMode: {{ .Values.prometheus.vpa.updateMode | quote }}
  resourcePolicy:
    containerPolicies:
    - containerName: "prometheus"
      maxAllowed:
        cpu: {{ .Values.prometheus.vpa.maxCPU | quote }}
        memory: {{ .Values.prometheus.vpa.maxMemory | quote }}
{{- end }}
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: main
  namespace: kube-prometheus
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
    app: prometheus
spec:
  replicas: {{ include "helm_lib_is_ha_to_value" (list . 2 1) }}
  retention: {{ .Values.prometheus.retentionDays }}d
  retentionSize: {{ .Values.prometheus.retentionGigabytes }}GB
  version: v2.7.0
  scrapeInterval: 30s
  evaluationInterval: 30s
  serviceAccountName: prometheus
  podMetadata:
    annotations:
      threshold.extended-monitoring.flant.com/disk-bytes-warning: "97"
      threshold.extended-monitoring.flant.com/disk-bytes-critical: "99"
  serviceMonitorSelector:
    matchLabels:
      prometheus: main
  secrets:
  - prometheus-scraper-cert
  rules:
    alert:
      resendDelay: 29s
  ruleSelector:
    matchLabels:
      prometheus: main
      component: rules
{{- if or (hasKey .Values.prometheus "madisonAuthKey") (hasKey .Values.prometheus "additionalAlertmanagers") }}
  alerting:
    alertmanagers:
  {{- if hasKey .Values.prometheus "madisonAuthKey" }}
    - namespace: kube-prometheus
      name: madison-proxy
      port: http
  {{- end }}
  {{- if hasKey .Values.prometheus "additionalAlertmanagers" }}
    {{- range .Values.prometheus.additionalAlertmanagers }}
    - namespace: {{ .namespace }}
      name: {{ .name }}
      port: {{ .port }}
      scheme: http
      pathPrefix: {{ .pathPrefix }}
    {{- end }}
  {{- end }}
{{- end }}
{{- if and (or ($certmanager_cluster_issuer_name) ($custom_certificate_secret_name)) (.Values.global.enabledModules | has "cert-manager") }}
  externalUrl: https://prometheus.{{ .Values.global.clusterHostname }}/prometheus/
{{- else }}
  externalUrl: http://prometheus.{{ .Values.global.clusterHostname }}/prometheus/
{{- end }}
  securityContext:
    fsGroup: 2000
    runAsUser: 1000
{{- include "helm_lib_node_selector" (tuple . "monitoring") | indent 2 }}
{{- include "helm_lib_tolerations" (tuple . "monitoring") | indent 2 }}
{{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
  priorityClassName: cluster-medium
{{- end }}
{{- $storageClassName := .Values.prometheus.storageClassName | default .Values.global.storageClassName | default .Values.global.discovery.defaultStorageClassName }}
{{- if $storageClassName }}
  storage:
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.prometheus.diskSize }}G
        storageClassName: {{ $storageClassName }}
{{- end }}
