{{- if .Values.prometheus.longtermRetentionDays }}
{{- $certmanager_cluster_issuer_name := include "certmanager_cluster_issuer_name" . }}
{{- $custom_certificate_secret_name := include "custom_certificate_secret_name" . }}

{{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: longterm
  namespace: kube-prometheus
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
    app: prometheus
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: StatefulSet
    name: prometheus-longterm
  updatePolicy:
    updateMode: {{ .Values.prometheus.vpa.updateMode | quote }}
  resourcePolicy:
    containerPolicies:
    - containerName: "prometheus"
      maxAllowed:
        cpu: {{ .Values.prometheus.vpa.maxCPU | quote }}
        memory: {{ .Values.prometheus.vpa.maxMemory | quote }}
{{- end }}
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: longterm
  namespace: kube-prometheus
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
    app: prometheus
spec:
  replicas: 1
  retention: {{ .Values.prometheus.longtermRetentionDays }}d
  retentionSize: {{ .Values.prometheus.longtermRetentionGigabytes }}GB
  version: v2.7.0
  scrapeInterval: 5m
  evaluationInterval: 5m
  {{- if and (or ($certmanager_cluster_issuer_name) ($custom_certificate_secret_name)) (.Values.global.enabledModules | has "cert-manager") }}
  externalUrl: https://prometheus.{{ .Values.global.clusterHostname }}/prometheus/longterm/
  {{- else }}
  externalUrl: http://prometheus.{{ .Values.global.clusterHostname }}/prometheus/longterm/
  {{- end }}
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: prometheus
  podMetadata:
    annotations:
      threshold.extended-monitoring.flant.com/disk-bytes-warning: "97"
      threshold.extended-monitoring.flant.com/disk-bytes-critical: "99"
  {{- if and (hasKey .Values.prometheus "nodeSelector") (.Values.prometheus.nodeSelector) }}
  nodeSelector:
{{ .Values.prometheus.nodeSelector | toYaml | trim | indent 4 }}
  {{- else if and (not (hasKey .Values.prometheus "nodeSelector")) .Values.global.discovery.clusterHasSystemNodes }}
  nodeSelector:
    node-role/system: ""
  {{- end }}
  {{- if and (hasKey .Values.prometheus "tolerations") (.Values.prometheus.tolerations) }}
  tolerations:
{{ .Values.prometheus.tolerations | toYaml | trim | indent 2 }}
  {{- else if and (not (hasKey .Values.prometheus "tolerations")) .Values.global.discovery.clusterHasSystemNodes }}
  tolerations:
  - key: node-role/system
    effect: NoExecute
  {{- end }}
  {{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
  priorityClassName: cluster-low
  {{- end }}
  {{- $storageClassName := .Values.prometheus.longtermStorageClassName | default .Values.prometheus.storageClassName | default .Values.global.storageClassName | default .Values.global.discovery.defaultStorageClassName }}
  {{- if $storageClassName }}
  storage:
    # TODO: Remove the following 3 lines with empty values after prometheus-operator update
    class: ""
    selector: {}
    resources: {}
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.prometheus.longtermDiskSize }}G
        storageClassName: {{ $storageClassName }}
  {{- end }}
{{- end }}
