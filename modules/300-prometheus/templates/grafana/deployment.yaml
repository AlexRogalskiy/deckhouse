{{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: grafana
  namespace: kube-prometheus
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
    app: grafana
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: grafana
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: kube-prometheus
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
    app: grafana
spec:
  replicas: {{ include "helm_lib_is_ha_to_value" (list . 2 1) }}
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
      annotations:
        checksum/dashboards: {{ include (print $.Template.BasePath "/grafana/dashboards.yaml") . | sha256sum }}
        checksum/datasources: {{ include (print $.Template.BasePath "/grafana/datasources.yaml") . | sha256sum }}
        threshold.extended-monitoring.flant.com/container-throttling-warning: "40"
    spec:
{{- include "helm_lib_node_selector" (tuple . "monitoring") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "monitoring") | indent 6 }}
      {{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
      priorityClassName: cluster-medium
      {{- end }}
      containers:
      - name: grafana
        image: {{ $.Values.global.modulesImages.registry }}/prometheus/grafana:{{ $.Values.global.modulesImages.tags.prometheus.grafana }}
        env:
        - name: GF_AUTH_BASIC_ENABLED
          value: "true"
        - name: GF_AUTH_PROXY_ENABLED
          value: "true"
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_USERS_DEFAULT_THEME
          value: "light"
        - name: GF_PATHS_PROVISIONING
          value: /grafana/conf/provisioning
        - name: GF_PATHS_DATA
          value: /var/lib/grafana-storage
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana-storage
        - name: grafana-datasources
          mountPath: /grafana/conf/provisioning/datasources
        - name: grafana-dashboards
          mountPath: /grafana/conf/provisioning/dashboards
{{- define "dashboard_definition_volume_mount" }}
{{- $folder := index . 1 }}
        - name: grafana-dashboard-definitions-{{ $folder | replace "/" "-" }}
          mountPath: /grafana-dashboard-definitions/{{ $folder }}
{{- end }}
{{- tuple . "dashboard_definition_volume_mount" | include "for_each_dashboard_folder" }}
        - name: grafana-dashboard-definitions-custom
          mountPath: /grafana-dashboard-definitions/custom
        ports:
        - name: web
          containerPort: 3000
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards
{{- define "dashboard_definition_volume" }}
{{- $folder := index . 1 }}
      - name: grafana-dashboard-definitions-{{ $folder | replace "/" "-" }}
        configMap:
          name: grafana-dashboard-definitions-{{ $folder | replace "/" "-" }}
{{- end }}
{{- tuple . "dashboard_definition_volume" | include "for_each_dashboard_folder" }}
      - name: grafana-dashboard-definitions-custom
        configMap:
          name: grafana-dashboard-definitions-custom
          optional: true
      imagePullSecrets:
      - name: antiopa-registry
