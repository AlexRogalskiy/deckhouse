{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: trickster
  namespace: d8-monitoring
{{ include "helm_lib_module_labels" (list . (dict "app" "trickster")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: trickster
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trickster
  namespace: d8-monitoring
{{ include "helm_lib_module_labels" (list . (dict "app" "trickster")) | indent 2 }}
spec:
  replicas: {{ include "helm_lib_is_ha_to_value" (list . 2 1) }}
  {{- if (include "helm_lib_ha_enabled" .) }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  {{- end }}
  selector:
    matchLabels:
      app: trickster
  template:
    metadata:
      labels:
        app: trickster
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/trickster/configmap.yaml") . | sha256sum }}
    spec:
{{- include "helm_lib_node_selector" (tuple . "monitoring") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "monitoring") | indent 6 }}
{{- include "helm_lib_priority_class" (tuple . "cluster-medium") | indent 6 }}
    {{- if (include "helm_lib_ha_enabled" .) }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: trickster
            topologyKey: kubernetes.io/hostname
    {{- end }}
      containers:
      - name: trickster
        image: {{ $.Values.global.modulesImages.registry }}/prometheus/trickster:{{ $.Values.global.modulesImages.tags.prometheus.trickster }}
        volumeMounts:
        - mountPath: /etc/trickster/trickster.conf
          name: trickster-config
          subPath: trickster.conf
        livenessProbe:
          httpGet:
            path: /
            port: 3500
        readinessProbe:
          httpGet:
            path: /
            port: 3501
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: ca-auth-proxy
        image: {{ $.Values.global.modulesImages.registry }}/common/kube-ca-auth-proxy:{{ $.Values.global.modulesImages.tags.common.kubeCaAuthProxy }}
        args:
        - "--listen=443"
        - "--location=/"
        - "--proxy-pass=http://127.0.0.1:8000"
        - "--user=nginx-ingress:.*|.*:prometheus-api-client"
        - "--probe-proxy-pass=http://127.0.0.1:8000/ping"
        - "--probe-listen=3500"
        ports:
        - containerPort: 443
          name: https
        livenessProbe:
          tcpSocket:
            port: 443
        readinessProbe:
          tcpSocket:
            port: 443
      - name: ca-auth-proxy-metrics
        image: {{ $.Values.global.modulesImages.registry }}/common/kube-ca-auth-proxy:{{ $.Values.global.modulesImages.tags.common.kubeCaAuthProxy }}
        args:
        - "--listen=8443"
        - "--location=/metrics"
        - "--proxy-pass=http://127.0.0.1:8001/metrics"
        - "--user=d8-monitoring:scraper"
        - "--probe-proxy-pass=http://127.0.0.1:8000/main/health"
        - "--probe-listen=3501"
        ports:
        - containerPort: 8443
          name: https-metrics
        livenessProbe:
          tcpSocket:
            port: 8443
        readinessProbe:
          tcpSocket:
            port: 8443
      - name: outgoing-nginx
        image: {{ $.Values.global.modulesImages.registry }}/common/nginx:{{ $.Values.global.modulesImages.tags.common.nginx }}
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: trickster-config
          subPath: outgoing-nginx.conf
        - mountPath: /etc/nginx/ssl/
          name: prometheus-api-client-tls
          readOnly: true
      volumes:
      - name: trickster-config
        configMap:
          name: trickster-config
      - name: prometheus-api-client-tls
        secret:
          secretName: prometheus-api-client-tls
      imagePullSecrets:
      - name: deckhouse-registry
