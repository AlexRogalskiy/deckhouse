- name: d8.grafana.availability
  rules:
  - alert: D8GrafanaPodIsNotReady
    expr: min by (pod) (kube_pod_status_ready{condition="true", namespace="d8-monitoring", pod=~"grafana-.*"}) != 1
    labels:
      severity_level: "6"
      tier: cluster
      d8_module: prometheus
      d8_component: grafana
    annotations:
      plk_protocol_version: "1"
      plk_markup_format: "markdown"
      plk_pending_until_firing_for: "5m"
      plk_grouped_by__d8_grafana_unavailable: "D8GrafanaUnavailable,tier=cluster,prometheus=deckhouse"
      plk_labels_as_annotations: "pod"
      summary: Grafana под находится в состоянии НЕ Ready

  - alert: D8GrafanaPodIsNotRunning
    expr: max by (namespace, pod, phase) (kube_pod_status_phase{namespace="d8-monitoring",phase!="Running",pod=~"grafana-.*"} > 0)
    labels:
      severity_level: "6"
      tier: cluster
      d8_module: prometheus
      d8_component: grafana
    annotations:
      plk_protocol_version: "1"
      plk_markup_format: "markdown"
      plk_pending_until_firing_for: "5m"
      plk_grouped_by__d8_grafana_unavailable: "D8GrafanaUnavailable,tier=cluster,prometheus=deckhouse"
      plk_labels_as_annotations: "phase"
      summary: Под grafana находится в состоянии НЕ Running
      description: |-
        Под {{$labels.pod}} находится в состоянии {{$labels.phase}}. Для проверки статуса пода необходимо выполнить:
        1. `kubectl -n d8-monitoring get pods {{$labels.pod}} -o json | jq .status`

  - alert: D8GrafanaTargetDown
    expr: max by (job) (up{job="grafana", namespace="d8-monitoring"} == 0)
    labels:
      severity_level: "6"
      tier: cluster
      d8_module: deckhouse
      d8_component: grafana
    annotations:
      plk_protocol_version: "1"
      plk_markup_format: "markdown"
      plk_pending_until_firing_for: "5m"
      plk_grouped_by__d8_grafana_unavailable: "D8GrafanaUnavailable,tier=cluster,prometheus=deckhouse"
      plk_labels_as_annotations: "instance,pod"
      plk_ignore_labels: "job"
      summary: Prometheus не может получить метрики grafana

  - alert: D8GrafanaTargetAbsent
    expr: absent(up{job="grafana", namespace="d8-monitoring"} == 1)
    labels:
      severity_level: "6"
      tier: cluster
      d8_module: prometheus
      d8_component: grafana
    annotations:
      plk_markup_format: "markdown"
      plk_protocol_version: "1"
      plk_pending_until_firing_for: "5m"
      plk_grouped_by__d8_grafana_unavailable: "D8GrafanaUnavailable,tier=cluster,prometheus=deckhouse"
      summary: >
        В таргетах prometheus нет grafana
      description: |-
        Grafana используется для просмотра графиков по метрикам, собираемым в prometheus. Недоступность grafana
        является критичной, либо если клиенты активно используют её в своей работе, либо если необходимо посмотреть
        состояние приложений и самого кластера.

        Необходимо выполнить следующие действия:
        1. Проверить наличие и состояние подов grafana `kubectl -n d8-monitoring get pods -l app=grafana`
        2. Проверить наличие statefulset grafana `kubectl -n d8-monitoring get sts grafana`
        3. Посмотреть состояние statefulset grafana `kubectl -n d8-monitoring describe sts grafana`

  - alert: D8GrafanaUnavailable
    expr: |
      count(ALERTS{alertname=~"D8GrafanaPodIsNotReady|D8GrafanaPodIsNotRunning|D8GrafanaTargetAbsent|D8GrafanaTargetDown"}
      or
      ALERTS{alertname=~"KubernetesStatefulSetReplicasUnavailable", namespace="d8-monitoring", statefulset="grafana"}
      or
      ALERTS{alertname=~"KubernetesStatefulSetStuck", namespace="d8-monitoring", statefulset="grafana"})
    labels:
      tier: cluster
      d8_module: prometheus
      d8_component: grafana
    annotations:
      plk_protocol_version: "1"
      plk_markup_format: "markdown"
      plk_alert_type: "group"
      plk_group_for__grafana_replicas_unavailable: "KubernetesStatefulSetReplicasUnavailable,namespace=d8-monitoring,prometheus=deckhouse,statefulset=grafana"
      plk_group_for__grafana_stuck: "KubernetesStatefulSetStuck,namespace=d8-monitoring,prometheus=deckhouse,statefulset=grafana"
      plk_grouped_by__d8_grafana_malfunctioning: "D8GrafanaMalfunctioning,tier=cluster,prometheus=deckhouse"
      summary: Grafana не работает
      description: |
        Grafana не работает. Что именно с ней не так можно узнать в одном из связанных алертов.

- name: d8.grafana.malfunctioning
  rules:
  - alert: D8GrafanaPodIsRestartingTooOften
    expr: max by (pod) (increase(kube_pod_container_status_restarts_total{namespace="d8-monitoring", pod=~"grafana-.*"}[1h]) and kube_pod_container_status_restarts_total{namespace="d8-monitoring", pod=~"grafana-.*"}) > 5
    labels:
      severity_level: "9"
      tier: cluster
      d8_module: prometheus
      d8_component: grafana
    annotations:
      plk_protocol_version: "1"
      plk_markup_format: "markdown"
      plk_grouped_by__d8_grafana_malfunctioning: "D8GrafanaMalfunctioning,tier=cluster,prometheus=deckhouse"
      plk_labels_as_annotations: "pod"
      summary: Grafana слишком часто перезагружается
      description: |
        Количество перезапусков за последний час: {{ $value }}.

        Частый перезапуск Grafana не является нормальной ситуацией — grafana должна быть постоянно запущена и работать.
        Необходимо посмотреть логи:
        1. `kubectl -n d8-monitoring logs -f -l app=grafana -c grafana`

  - alert: D8GrafanaMalfunctioning
    expr: |
      count(ALERTS{alertname=~"D8GrafanaPodIsRestartingTooOften"}
      or
      ALERTS{alertname=~"IngressResponses5xx", namespace="d8-monitoring", service="grafana"})
    labels:
      tier: cluster
      d8_module: prometheus
      d8_component: grafana
    annotations:
      plk_protocol_version: "1"
      plk_markup_format: "markdown"
      plk_alert_type: "group"
      plk_group_for__grafana_responses_5xx: "IngressResponses5xx,namespace=d8-monitoring,prometheus=deckhouse,service=grafana"
      summary: Grafana работает некорректно
      description: |
        Grafana работает некорректно. Что именно с ней не так можно узнать в одном из связанных алертов.

  - alert: D8GrafanaDeprecatedCustomDashboardDefinition
    expr: |
      max(kube_configmap_created{namespace="d8-monitoring",configmap="grafana-dashboard-definitions-custom"}) > 0
    labels:
      severity_level: "9"
      tier: application
      d8_module: prometheus
      d8_component: grafana
    annotations:
      plk_protocol_version: "1"
      plk_markup_format: "markdown"
      summary: Обнаружен устаревший метод регистрации кастомных дашборд в Grafana
      description: |-
        В namespace `d8-monitoring` обнаружен CM `grafana-dashboard-definitions-custom`. Это означает, что используется устаревший метод регистрации кастомных дашборд в Графане.
        Рекомендация — использовать кастомный [ресурс GrafanaDashboardDefinition](https://github.com/deckhouse/deckhouse/blob/master/modules/300-prometheus/docs/GRAFANA_DASHBOARD_DEVELOPMENT.md#%D1%80%D0%B5%D1%81%D1%83%D1%80%D1%81-grafanadashboarddefinition).
