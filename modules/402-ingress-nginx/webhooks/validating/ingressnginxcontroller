#!/usr/bin/env bash

# Copyright 2021 Flant JSC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

source /shell_lib.sh

function __config__(){
  cat <<EOF
configVersion: v1
kubernetesValidating:
- name: ingressnginxcontrollers-policy.deckhouse.io
  group: main
  rules:
  - apiGroups:   ["deckhouse.io"]
    apiVersions: ["v1"]
    operations:  ["CREATE", "UPDATE"]
    resources:   ["ingressnginxcontrollers"]
    scope:       "Cluster"
EOF
}

function __main__() {
  # Inlet on-flight change prohibited
  if context::jq -e -r '.review.request.operation == "UPDATE"' >/dev/null 2>&1; then
    oldInlet=$(context::jq -r '.review.request.oldObject.spec.inlet')
    if context::jq -e -r --arg oldInlet "$oldInlet" '.review.request.object.spec.inlet != $oldInlet' >/dev/null 2>&1; then
      cat <<EOF > $VALIDATING_RESPONSE_PATH
{"allowed":false, "message":".spec.inlet change prohibited"}
EOF
      exit 0;
    fi
  fi


  if context::jq -e -r '.review.request.name | endswith("-failover")' >/dev/null 2>&1; then
    # -failover suffix is reserved for HostWithFailover inlet
    # To avoid collisions, we should forbid saving controllers with such name.
    cat <<EOF > $VALIDATING_RESPONSE_PATH
{"allowed":false, "message":"it is forbidden to create IngressNginxController with '-failover' suffix"}
EOF
    exit 0;
  fi


  # allowed response
  cat <<EOF > $VALIDATING_RESPONSE_PATH
{"allowed":true}
EOF
}

hook::run $@
