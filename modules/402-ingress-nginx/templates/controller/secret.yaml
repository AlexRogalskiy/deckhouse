{{- $context := . }}
{{- range $crd := $context.Values.ingressNginx.internal.ingressControllers }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $crd.name }}-ingress-nginx-auth-tls
  namespace: d8-ingress-nginx
{{ include "helm_lib_module_labels" (list $context ) | indent 2 }}
type: kubernetes.io/tls
data:
  tls.crt: {{ index $context.Values.ingressNginx.internal (printf "nginxAuthTLS%s" $crd.name) | pluck "certificate" | first | b64enc }}
  tls.key: {{ index $context.Values.ingressNginx.internal (printf "nginxAuthTLS%s" $crd.name) | pluck "key" | first | b64enc }}

{{- /* By deploying and deleting this ingress we trigger "nginx reload". It is required to update client certififcates. */ -}}
  {{ if (index $context.Values.ingressNginx.internal (printf "nginxAuthTLS%s" $crd.name) | pluck "certificate_updated" | first ) }}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: fakeingress-{{ $crd.name }}
  namespace: d8-ingress-nginx
{{ include "helm_lib_module_labels" (list $context ) | indent 2 }}
  annotations:
    kubernetes.io/ingress.class: {{ $crd.spec.ingressClass }}
spec:
  rules:
  - host: reload.deckhouse.io
    http:
      paths:
        - path: /fake-path-to-trigger-ingress-controller-config-reload
          backend:
            serviceName: fakeservice
            servicePort: https
  {{- end }}
{{- end }}
