{{- $context := . }}
{{- range $crd := $context.Values.ingressNginx.internal.ingressControllers }}
  {{- if eq $crd.spec.inlet "HostWithFailover" }}
    {{- if ($context.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: proxy-{{ $crd.name }}-failover
  namespace: d8-ingress-nginx
{{ include "helm_lib_module_labels" (list $context (dict "app" "proxy-failover" "name" $crd.name )) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: proxy-{{ $crd.name }}-failover
  updatePolicy:
    updateMode: "Off"
    {{- end }}
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: proxy-{{ $crd.name }}-failover
  namespace: d8-ingress-nginx
{{ include "helm_lib_module_labels" (list $context (dict "app" "proxy-failover" "name" $crd.name )) | indent 2 }}
spec:
{{ include "helm_lib_pdb_daemonset" $context | indent 2}}
  selector:
    matchLabels:
      app: proxy-failover
      name: {{ $crd.name }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: proxy-{{ $crd.name }}-failover
  namespace: d8-ingress-nginx
{{ include "helm_lib_module_labels" (list $context (dict "app" "proxy-failover" "name" $crd.name "ingress-nginx-safe-update" "" )) | indent 2 }}
spec:
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app: proxy-failover
      name: {{ $crd.name }}
  template:
    metadata:
      labels:
        app: proxy-failover
        name: {{ $crd.name }}
    spec:
  {{- if $crd.spec.nodeSelector }}
      nodeSelector:
{{ $crd.spec.nodeSelector | toYaml | indent 8 }}
  {{- else }}
{{- include "helm_lib_node_selector" (tuple $context "frontend") | indent 6 }}
  {{- end }}
  {{- if $crd.spec.tolerations }}
      tolerations:
{{ $crd.spec.tolerations | toYaml | indent 6 }}
  {{- else }}
{{- include "helm_lib_tolerations" (tuple $context "frontend") | indent 6 }}
  {{- end }}
{{- include "helm_lib_priority_class" (tuple $context "system-cluster-critical") | indent 6 }}
      serviceAccountName: ingress-nginx
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      terminationGracePeriodSeconds: 300
      containers:
      - image: {{ $.Values.global.modulesImages.registry }}/ingress-nginx/proxy-failover:{{ $.Values.global.modulesImages.tags.ingressNginx.proxyFailover }}
        name: nginx
        env:
        - name: CONTROLLER_NAME
          value: {{ $crd.name }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10253
            host: 127.0.0.1
          initialDelaySeconds: 3
        lifecycle:
          preStop:
            exec:
              command: ["/usr/sbin/nginx","-s","quit"]
        resources:
          requests:
          {{- include "helm_lib_module_ephemeral_storage_only_logs" . | indent 12 }}
      - image: {{ $.Values.global.modulesImages.registry }}/ingress-nginx/proxy-failover-iptables:{{ $.Values.global.modulesImages.tags.ingressNginx.proxyFailoverIptables }}
        name: iptables-loop
        securityContext:
          capabilities:
            add:
            - NET_RAW
            - NET_ADMIN
      - name: nginx-exporter
        image: {{ $.Values.global.modulesImages.registry }}/ingress-nginx/nginx-exporter:{{ $.Values.global.modulesImages.tags.ingressNginx.nginxExporter }}
        args:
        - "-web.listen-address=127.0.0.1:10354"
        - "-nginx.scrape-uri=http://127.0.0.1:10253/nginx_status"
        - "-nginx.ssl-verify=false"
        - "-nginx.retries=10"
        - "-nginx.retry-interval=6s"
        livenessProbe:
          httpGet:
            path: /metrics
            port: 10354
            host: 127.0.0.1
        resources:
          requests:
{{- include "helm_lib_module_ephemeral_storage_only_logs" . | indent 12 }}
      - name: kube-rbac-proxy
        image: {{ $context.Values.global.modulesImages.registry }}/common/kube-rbac-proxy:{{ $context.Values.global.modulesImages.tags.common.kubeRbacProxy }}
        args:
        - "--secure-listen-address=$(KUBE_RBAC_PROXY_LISTEN_ADDRESS):10355"
        - "--client-ca-file=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
        - "--v=2"
        - "--logtostderr=true"
        - "--stale-cache-interval=1h30m"
        env:
        - name: KUBE_RBAC_PROXY_LISTEN_ADDRESS
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KUBE_RBAC_PROXY_CONFIG
          value: |
            upstreams:
            - upstream: http://127.0.0.1:10354/metrics
              path: /metrics
              authorization:
                resourceAttributes:
                  namespace: d8-ingress-nginx
                  apiGroup: apps
                  apiVersion: v1
                  resource: daemonsets
                  subresource: prometheus-metrics
                  name: proxy-failover
        ports:
        - containerPort: 10355
          name: https-metrics
        resources:
          requests:
{{- include "helm_lib_module_ephemeral_storage_only_logs" . | indent 12 }}
      imagePullSecrets:
      - name: deckhouse-registry
  {{- end }}
{{- end }}
