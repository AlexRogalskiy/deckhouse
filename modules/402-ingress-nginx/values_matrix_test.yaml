global:
  highAvailability:
    __ConstantChoices__: [true, false]
  enabledModules:
    __ConstantChoices__:
      - ["cert-manager", "vertical-pod-autoscaler-crd", "priority-class"]
      - ["cert-manager"]
  modulesImages:
    registry: registry.flant.com
    registryDockercfg: registry.example.com
    tags:
      common:
        kubeRbacProxy: tagstring
      ingressNginx:
        controller025: tagstring
        controller026: tagstring
        nginxExporter: tagstring
        protobufExporter: tagstring
        proxyFailover: tagstring
        proxyFailoverIptables: tagstring
  discovery:
    clusterControlPlaneIsHighlyAvailable:
      __ConstantChoices__: [true, false]
    d8SpecificNodeCountByRole:
      system: 2
    kubernetesVersion:
      __ConstantChoices__:
      - 1.16.15
      - 1.19.5
  modules:
    publicDomainTemplate: "%s.example.com"
    placement:
      __ConstantChoices__:
        - {}
        - customTolerationKeys:
            - "test-1"
            - "test-2/master"
ingressNginx:
  internal:
    webhookCertificates:
      ca: testca
      key: testkey
      crt: testcrt
    nginxAuthTLStest:
      certificate: test
      key: test
    ingressControllers:
      __ConstantChoices__:
        - __EmptyItem__
        -
          - name: test
            spec:
              config: {}
              resourcesRequests:
                __ConstantChoices__:
                - mode: VPA
                  static: {}
                  vpa:
                    cpu:
                      max: 200m
                    memory:
                      min: 100Mi
                - mode: Static
                  static:
                    cpu: 100m
                  vpa:
                    cpu: {}
                    memory: {}
              ingressClass: nginx
              controllerVersion: "0.26"
              inlet: LoadBalancer
              loadBalancer: {}
              loadBalancerWithProxyProtocol: {}
        -
          - name: test
            spec:
              config: {}
              resourcesRequests:
                mode: VPA
                static: {}
                vpa:
                  cpu:
                    max: 200m
                  memory:
                    min: 100Mi
              ingressClass: nginx
              controllerVersion: "0.26"
              inlet: HostWithFailover
              hostWithFailover: {}
