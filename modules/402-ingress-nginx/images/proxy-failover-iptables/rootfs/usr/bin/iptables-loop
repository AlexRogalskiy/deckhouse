#!/bin/bash

set -e

CHAIN_NAME="ingress-failover"
JUMP_RULE="-p tcp -m multiport --dports 80,443 -m addrtype --dst-type LOCAL -j $CHAIN_NAME"
SOCKET_EXISTS_RULE="-m socket --nowildcard -m mark --mark 0 -j RETURN"
MARK_HTTP_RULE="-p tcp --dport 80 -j MARK --set-mark 1"
MARK_HTTPS_RULE="-p tcp --dport 443 -j MARK --set-mark 1"
SAVE_MARK_RULE="-j CONNMARK --save-mark"
RESTORE_MARK_RULE="-j CONNMARK --restore-mark"
DNAT_HTTP_RULE="-p tcp --dport 80 -j DNAT --to-destination 127.0.0.1:81"
DNAT_HTTPS_RULE="-p tcp --dport 443 -j DNAT --to-destination 127.0.0.1:444"
INPUT_ACCEPT_RULE="-p tcp -m multiport --dport 81,444 -d 127.0.0.1 -m comment --comment ingress-failover -j ACCEPT"

# Initialization

# during the failover rollout remove failover-jump-rule setting all traffic to primary
iptables -w -t nat -C PREROUTING $JUMP_RULE >/dev/null 2>&1 && iptables -w -t nat -D PREROUTING $JUMP_RULE >/dev/null 2>&1

# check chain exists and 81/444 ports accepted
iptables -w -t nat -n --list "$CHAIN_NAME" >/dev/null 2>&1 || iptables -w -t nat -N "$CHAIN_NAME"
iptables -w -C INPUT $INPUT_ACCEPT_RULE >/dev/null 2>&1 || iptables -w -I INPUT 1 $INPUT_ACCEPT_RULE

# flush and fill ingress-failover chain
iptables -w -t nat -F "$CHAIN_NAME"
iptables -w -t nat -I "$CHAIN_NAME" 1 $RESTORE_MARK_RULE
iptables -w -t nat -I "$CHAIN_NAME" 2 $SOCKET_EXISTS_RULE
iptables -w -t nat -I "$CHAIN_NAME" 3 $MARK_HTTP_RULE
iptables -w -t nat -I "$CHAIN_NAME" 4 $MARK_HTTPS_RULE
iptables -w -t nat -I "$CHAIN_NAME" 5 $SAVE_MARK_RULE
iptables -w -t nat -I "$CHAIN_NAME" 6 $DNAT_HTTP_RULE
iptables -w -t nat -I "$CHAIN_NAME" 7 $DNAT_HTTPS_RULE

# restore jump-rule
iptables -w -t nat -C PREROUTING $JUMP_RULE >/dev/null 2>&1 || iptables -w -t nat -I PREROUTING 1 $JUMP_RULE

echo "Initialization complete"
echo "Starting check loop"

# check primary controller, if health check failed - remove RETURN rule
while true; do
  code=$(wget --server-response http://127.0.0.1:10254/healthz 2>&1 | awk '/^  HTTP/{print $2}')

  if [ -n "$code" ] && [ "$code" -eq 200 ]; then
    iptables -w -t nat -C "$CHAIN_NAME" $SOCKET_EXISTS_RULE >/dev/null 2>&1 || iptables -w -t nat -I "$CHAIN_NAME" 2 $SOCKET_EXISTS_RULE
  else
    iptables -w -t nat -C "$CHAIN_NAME" $SOCKET_EXISTS_RULE >/dev/null 2>&1 && iptables -w -t nat -D "$CHAIN_NAME" 2
  fi

  sleep 15
done
