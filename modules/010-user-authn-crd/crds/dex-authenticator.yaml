apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: dexauthenticators.deckhouse.io
  labels:
    heritage: deckhouse
    module: user-authn
spec:
  group: deckhouse.io
  scope: Namespaced
  names:
    plural: dexauthenticators
    singular: dexauthenticator
    kind: DexAuthenticator
    shortNames:
    - dex-auth
  version: v1alpha1
  additionalPrinterColumns:
  - JSONPath: .spec.applicationDomain
    name: Domain
    type: string
  validation:
    openAPIV3Schema:
      type: object
      required:
      - spec
      properties:
        spec:
          type: object
          required:
          - applicationDomain
          - applicationIngressCertificateSecretName
          - applicationIngressClassName
          properties:
            applicationDomain:
              type: string
              description: 'Public domain that points to your application. Must be specified without HTTP scheme.'
              example: 'my-app.domain.com'
              pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
            sendAuthorizationHeader:
              type: boolean
              description: 'Request to application will be sent with "Authorization: Bearer" header when the option is switched to true.'
            applicationIngressCertificateSecretName:
              type: string
              description: 'Name of TLS-certificate secret specified in your application Ingress object to add to dex authenticator Ingress object for HTTPS access. Secret must be located in the same namespace with DexAuthenticator object.'
              example: 'ingress-tls'
            applicationIngressClassName:
              type: string
              description: 'Ingress class that serves your application ingress resource.'
              example: 'nginx'
            keepUsersLoggedInFor:
              type: string
              description: 'User session will be kept for specified amount of time even if user will not log in.'
              example: '24h'
            allowedGroups:
              type: array
              description: 'Groups that the user should be in to authenticate successfully. Additionally, this parameter limits the list of groups that will be put into OIDC token (there will be an intersection of the specified groups and the actual groups of the user).'
              items:
                type: string
            nodeSelector:
              additionalProperties:
                type: string
              description: 'Define which Nodes the Pods are scheduled on.'
              type: object
            tolerations:
              description: 'If specified, the pods tolerations.'
              items:
                description: 'The pod this Toleration is attached to tolerates any
                  taint that matches the triple <key,value,effect> using the matching
                  operator <operator>.'
                properties:
                  effect:
                    description: 'Effect indicates the taint effect to match. Empty
                      means match all taint effects. When specified, allowed values
                      are NoSchedule, PreferNoSchedule and NoExecute.'
                    type: string
                  key:
                    description: 'Key is the taint key that the toleration applies
                      to. Empty means match all taint keys. If the key is empty, operator
                      must be Exists; this combination means to match all values and
                      all keys.'
                    type: string
                  operator:
                    description: 'Operator represents a keys relationship to the value.
                      Valid operators are Exists and Equal. Defaults to Equal. Exists
                      is equivalent to wildcard for value, so that a pod can tolerate
                      all taints of a particular category.'
                    type: string
                  tolerationSeconds:
                    description: 'TolerationSeconds represents the period of time the
                      toleration (which must be of effect NoExecute, otherwise this
                      field is ignored) tolerates the taint. By default, it is not
                      set, which means tolerate the taint forever (do not evict).
                      Zero and negative values will be treated as 0 (evict immediately)
                      by the system.'
                    format: int64
                    type: integer
                  value:
                    description: 'Value is the taint value the toleration matches to.
                      If the operator is Exists, the value should be empty, otherwise
                      just a regular string.'
                    type: string
                type: object
              type: array
