{{- if eq .Values.dashboard.version "2" -}}
{{- if .Values.global.modules.publicDomainTemplate }}

{{- if (include "helm_lib_module_https_ingress_tls_enabled" .) }}
{{- if eq (include "helm_lib_module_https_mode" .) "CertManager" }}
{{- if eq (include "helm_lib_module_https_cert_manager_cluster_issuer_name" .) "letsencrypt" }}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: {{ include "helm_lib_module_ingress_class" . | quote }}
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
{{- if and (ne (include "helm_lib_module_https_mode" .) "Disabled") .Values.dashboard.auth.externalAuthentication }}
    nginx.ingress.kubernetes.io/auth-signin: {{ .Values.dashboard.auth.externalAuthentication.authSignInURL | quote }}
    nginx.ingress.kubernetes.io/auth-url: "https://dashboard-tmp-dex-authenticator.d8-dashboard.svc.{{ .Values.global.discovery.clusterDomain }}/dex-authenticator/auth"
 {{- if .Values.dashboard.auth.externalAuthentication.useBearerTokens }}
    nginx.ingress.kubernetes.io/auth-response-headers: "authorization"
 {{- end }}
    nginx.ingress.kubernetes.io/proxy-buffer-size: 32k
{{- else }}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_ssl_certificate /etc/nginx/ssl/client.crt;
      proxy_ssl_certificate_key /etc/nginx/ssl/client.key;
      proxy_ssl_protocols TLSv1.2;
      proxy_ssl_session_reuse on;
{{- end }}
{{- if .Values.dashboard.auth.whitelistSourceRanges }}
    nginx.ingress.kubernetes.io/whitelist-source-range: {{ .Values.dashboard.auth.whitelistSourceRanges | join "," }}
{{- end }}
  name: dashboard-tmp
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" "dashboard")) | indent 2 }}
spec:
  rules:
  - host: {{ include "helm_lib_module_public_domain" (list . "dashboard-tmp") }}
    http:
      paths:
      - backend:
          serviceName: dashboard
          servicePort: https
        path: /
  {{- if (include "helm_lib_module_https_ingress_tls_enabled" .) }}
  tls:
  - hosts:
      - {{ include "helm_lib_module_public_domain" (list . "dashboard-tmp") }}
    secretName: ingress-tls-tmp
  {{- end }}
  {{- if eq (include "helm_lib_module_https_mode" .) "CertManager" }}
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: dashboard-tmp
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" "dashboard")) | indent 2 }}
spec:
  secretName: ingress-tls-tmp
  dnsNames:
  - {{ include "helm_lib_module_public_domain" (list . "dashboard-tmp") }}
  acme:
    config:
    - http01:
        ingressClass: {{ include "helm_lib_module_ingress_class" . | quote }}
      domains:
      - {{ include "helm_lib_module_public_domain" (list . "dashboard-tmp") }}
  issuerRef:
    name: {{ include "helm_lib_module_https_cert_manager_cluster_issuer_name" . }}
    kind: ClusterIssuer
  {{- end }}

{{- end }}
{{- end }}
{{- end }}

{{- end }}
{{- end }}
