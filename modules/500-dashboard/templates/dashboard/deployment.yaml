{{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: dashboard
  namespace: kube-system
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
    app: dashboard
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: dashboard
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: dashboard
  namespace: kube-system
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
    app: dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      module: {{ $.Chart.Name }}
      app: dashboard
  template:
    metadata:
      labels:
        module: {{ $.Chart.Name }}
        app: dashboard
    spec:
{{- include "helm_lib_node_selector" (tuple . "system") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "system") | indent 6 }}
      {{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
      priorityClassName: cluster-low
      {{- end }}
      containers:
      - name: dashboard
        image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.10.1
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
        ports:
        - containerPort: 9090
          protocol: TCP
        args:
        livenessProbe:
          httpGet:
            path: /
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
      - name: tmp-volume
        emptyDir: {}
      serviceAccountName: dashboard
