{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: metrics-scraper
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" "metrics-scraper")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: metrics-scraper
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: metrics-scraper
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" "metrics-scraper")) | indent 2 }}
spec:
{{- include "helm_lib_deployment_strategy_and_replicas_for_ha" . | indent 2 }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: metrics-scraper
  template:
    metadata:
      labels:
        app: metrics-scraper
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'runtime/default'
    spec:
{{- include "helm_lib_node_selector" (tuple . "system") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "system") | indent 6 }}
{{- include "helm_lib_priority_class" (tuple . "cluster-low") | indent 6 }}
{{- include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app" "metrics-scraper")) | indent 6 }}
      imagePullSecrets:
      - name: deckhouse-registry
      containers:
      - name: metrics-scraper
        image: {{ $.Values.global.modulesImages.registry }}/dashboard/metrics-scraper:{{ $.Values.global.modulesImages.tags.dashboard.metricsScraper }}
        ports:
        - containerPort: 8000
          protocol: TCP
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: 8000
          initialDelaySeconds: 30
          timeoutSeconds: 30
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 1001
          runAsGroup: 2001
      serviceAccountName: dashboard
      volumes:
        - name: tmp-volume
          emptyDir: {}
