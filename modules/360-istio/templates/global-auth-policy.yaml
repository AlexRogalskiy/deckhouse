apiVersion: "authentication.istio.io/v1alpha1"
kind: "MeshPolicy"
metadata:
  name: "default"
  labels:
    heritage: antiopa
    module: {{ .Chart.Name }}
    app: citadel
spec:
  peers:
{{- if eq .Values.istio.tlsMode "Mutual" }}
  - mtls:
      mode: STRICT
{{- else }}
  - mtls:
      mode: PERMISSIVE
{{- end }}

{{- if has .Values.istio.tlsMode (list "Mutual" "MutualPermissive") }}
---
# Corresponding destination rule to configure client side to use mutual TLS when talking to
# any service (host) in the mesh.
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: "default"
  namespace: kube-{{ .Chart.Name }}
  labels:
    heritage: antiopa
    module: {{ .Chart.Name }}
    app: citadel
spec:
  host: "*.{{ .Values.global.discovery.clusterDomain }}"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---
# Destination rule to disable (m)TLS when talking to API server, as API server doesn't have sidecar.
# Customer should add similar destination rules for other services that don't have sidecar.
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: "api-server"
  namespace: kube-{{ .Chart.Name }}
  labels:
    heritage: antiopa
    module: {{ .Chart.Name }}
    app: citadel
spec:
  host: "kubernetes.default.svc.{{ .Values.global.discovery.clusterDomain }}"
  trafficPolicy:
    tls:
      mode: DISABLE
{{- end }} {{- /* if has .Values.istio.tlsMode (list "Mutual" "MutualPermissive") */ -}}
