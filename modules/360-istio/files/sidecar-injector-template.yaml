rewriteAppHTTPProbe: {{ .Values.global.rewriteAppHTTPProbe }}
{{- if or (not .Values.istio_cni.enabled) .Values.global.proxy.enableCoreDump }}
initContainers:
{{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
- name: istio-init
  image: "docker.io/istio/proxy_init:1.2.2"
  args:
  - "-p"
  - "15001"
  - "-u"
  - 1337
  - "-m"
  - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
  - "-i"
  - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
  - "-x"
  - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
  - "-b"
  - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` (includeInboundPorts .Spec.Containers) }}"
  - "-d"
  - "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
  {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") -}}
  - "-o"
  - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
  {{ end -}}
  {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
  - "-k"
  - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
  {{ end -}}
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 10m
      memory: 10Mi
  securityContext:
    runAsUser: 0
    runAsNonRoot: false
    capabilities:
      add:
      - NET_ADMIN
    privileged: false
  restartPolicy: Always
  env:
  {{- if contains "*" (annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` "") }}
  - name: INBOUND_CAPTURE_PORT
    value: 15006
  {{- end }}
{{- end }}
{{- end }}
containers:
- name: istio-proxy
  image: "docker.io/istio/proxyv2:1.2.2"
  ports:
  - containerPort: 15090
    protocol: TCP
    name: http-envoy-prom
  args:
  - proxy
  - sidecar
  - --domain
  - $(POD_NAMESPACE).svc.{{ .Values.global.clusterDomain }}
  - --configPath
  - "{{ .ProxyConfig.ConfigPath }}"
  - --binaryPath
  - "{{ .ProxyConfig.BinaryPath }}"
  - --serviceCluster
  {{ if ne "" (index .ObjectMeta.Labels "app") -}}
  - "{{ index .ObjectMeta.Labels `app` }}.$(POD_NAMESPACE)"
  {{ else -}}
  - "{{ valueOrDefault .DeploymentMeta.Name `istio-proxy` }}.{{ valueOrDefault .DeploymentMeta.Namespace `default` }}"
  {{ end -}}
  - --drainDuration
  - "{{ formatDuration .ProxyConfig.DrainDuration }}"
  - --parentShutdownDuration
  - "{{ formatDuration .ProxyConfig.ParentShutdownDuration }}"
  - --discoveryAddress
  - "{{ annotation .ObjectMeta `sidecar.istio.io/discoveryAddress` .ProxyConfig.DiscoveryAddress }}"
{{- if .Values.global.proxy.zipkinAddress }}
  - --zipkinAddress
  - "{{ .ProxyConfig.GetTracing.GetZipkin.GetAddress }}"
{{- end }}
  - --proxyLogLevel=default:info
  - --dnsRefreshRate
  - 5s
  - --connectTimeout
  - "{{ formatDuration .ProxyConfig.ConnectTimeout }}"
  - --proxyAdminPort
  - "{{ .ProxyConfig.ProxyAdminPort }}"
  {{ if gt .ProxyConfig.Concurrency 0 -}}
  - --concurrency
  - "{{ .ProxyConfig.Concurrency }}"
  {{ end -}}
  - --controlPlaneAuthPolicy
  - "{{ annotation .ObjectMeta `sidecar.istio.io/controlPlaneAuthPolicy` .ProxyConfig.ControlPlaneAuthPolicy }}"
{{- if (ne (annotation .ObjectMeta "status.sidecar.istio.io/port" .Values.global.proxy.statusPort) "0") }}
  - --statusPort
  - "{{ annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort }}"
  - --applicationPorts
  - "{{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/applicationPorts` (applicationPorts .Spec.Containers) }}"
{{- end }}
  env:
  - name: POD_NAME
    valueFrom:
      fieldRef:
        fieldPath: metadata.name
  - name: POD_NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace
  - name: INSTANCE_IP
    valueFrom:
      fieldRef:
        fieldPath: status.podIP
  - name: ISTIO_META_POD_NAME
    valueFrom:
      fieldRef:
        fieldPath: metadata.name
  - name: ISTIO_META_CONFIG_NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace
  - name: ISTIO_META_INTERCEPTION_MODE
    value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
  - name: ISTIO_META_INCLUDE_INBOUND_PORTS
    value: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` (applicationPorts .Spec.Containers) }}"
  {{ if .ObjectMeta.Annotations }}
  - name: ISTIO_METAJSON_ANNOTATIONS
    value: |
           {{ toJSON .ObjectMeta.Annotations }}
  {{ end }}
  {{ if .ObjectMeta.Labels }}
  - name: ISTIO_METAJSON_LABELS
    value: |
           {{ toJSON .ObjectMeta.Labels }}
  {{ end }}
  {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
  - name: ISTIO_BOOTSTRAP_OVERRIDE
    value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
  {{- end }}
  {{- if .Values.global.sds.customTokenDirectory }}
  - name: ISTIO_META_SDS_TOKEN_PATH
    value: "{{ .Values.global.sds.customTokenDirectory -}}/sdstoken"
  {{- end }}
  imagePullPolicy: IfNotPresent
  {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
  readinessProbe:
    httpGet:
      path: /healthz/ready
      port: {{ annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort }}
    initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` 1 }}
    periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` 2 }}
    failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` 30 }}
  {{ end -}}
  securityContext:
    readOnlyRootFilesystem: true
    {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
    capabilities:
      add:
      - NET_ADMIN
    runAsGroup: 1337
    {{ else -}}
    {{ if and .Values.global.sds.enabled .Values.global.sds.useTrustworthyJwt }}
    runAsGroup: 1337
    {{- end }}
    runAsUser: 1337
    {{- end }}
  resources:
    {{ if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
    requests:
      {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
      cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
      {{ end}}
      {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
      memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
      {{ end }}
  {{ else -}}
    requests:
      cpu: 100m
      memory: 128Mi
  {{  end -}}
  volumeMounts:
  {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
  - mountPath: /etc/istio/custom-bootstrap
    name: custom-bootstrap-volume
  {{- end }}
  - mountPath: /etc/istio/proxy
    name: istio-envoy
  {{- if .Values.global.sds.enabled }}
  - mountPath: /var/run/sds
    name: sds-uds-path
    readOnly: true
  {{- if .Values.global.sds.useTrustworthyJwt }}
  - mountPath: /var/run/secrets/tokens
    name: istio-token
  {{- end }}
  {{- if .Values.global.sds.customTokenDirectory }}
  - mountPath: "{{ .Values.global.sds.customTokenDirectory -}}"
    name: custom-sds-token
    readOnly: true
  {{- end }}
  {{- else }}
  - mountPath: /etc/certs/
    name: istio-certs
    readOnly: true
  {{- end }}
    {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
    {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
  - name: "{{  $index }}"
    {{ toYaml $value | indent 4 }}
    {{ end }}
    {{- end }}
volumes:
{{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
- name: custom-bootstrap-volume
  configMap:
    name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
{{- end }}
- emptyDir:
    medium: Memory
  name: istio-envoy
{{- if .Values.global.sds.enabled }}
- name: sds-uds-path
  hostPath:
    path: /var/run/sds
{{- if .Values.global.sds.customTokenDirectory }}
- name: custom-sds-token
  secret:
    secretName: sdstokensecret
{{- end }}
{{- if .Values.global.sds.useTrustworthyJwt }}
- name: istio-token
  projected:
    sources:
    - serviceAccountToken:
        path: istio-token
        expirationSeconds: 43200
        audience: {{ .Values.global.trustDomain }}
{{- end }}
{{- else }}
- name: istio-certs
  secret:
    optional: true
    {{ if eq .Spec.ServiceAccountName "" }}
    secretName: istio.default
    {{ else -}}
    secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
    {{  end -}}
  {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
  {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
- name: "{{ $index }}"
  {{ toYaml $value | indent 2 }}
  {{ end }}
  {{ end }}
{{- end }}
