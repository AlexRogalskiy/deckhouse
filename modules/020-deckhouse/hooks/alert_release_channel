#!/bin/bash

source /deckhouse/shell_lib.sh

function __config__() {
  cat << EOF
    configVersion: v1
    kubernetes:
    - name: deckhouse_deployment
      includeSnapshotsFrom: ["deckhouse_deployment"]
      waitForSynchronization: false
      apiVersion: apps/v1
      kind: Deployment
      namespace:
        nameSelector:
          matchNames: ["d8-system"]
      nameSelector:
        matchNames: ["deckhouse"]
      jqFilter: ".spec.template.spec.containers[0].image"
EOF
}

function __main__() {
  deckhouse_tags=("alpha" "beta" "early-access" "stable" "rock-solid")
  repo="$(values::get global.modulesImages.registry)"
  if context::has snapshots.deckhouse_deployment.0.filterResult ; then
    full_image="$(context::jq -r '.snapshots.deckhouse_deployment[0].filterResult')"
    actual_image=$(echo $full_image | grep -oP "^$repo[:,/]\K.*")
    if [[ " ${deckhouse_tags[@]} " =~ " ${actual_image} " ]] ; then
      echo '{"name":"d8_deckhouse_is_not_on_release_channel", "set": 0}' >> $METRICS_PATH
    else
      echo '{"name":"d8_deckhouse_is_not_on_release_channel", "set": 1}' >> $METRICS_PATH
    fi
  fi
}

hook::run $@
