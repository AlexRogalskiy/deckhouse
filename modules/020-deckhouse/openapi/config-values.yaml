type: object
properties:
  logLevel:
    type: string
    enum: ["Debug", "Info", "Error"]
    description: |
      Deckhouse logging level.
    default: "Info"
  bundle:
    type: string
    enum: ["Default", "Minimal", "Managed"]
    description: |
      The Deckhouse bundle defines a set of modules enabled by default.
      - `Default` — the recommended set of modules for cluster operation: monitoring, authorization control, networking and other needs (the current list is available [here](https://github.com/deckhouse/deckhouse/blob/main/modules/values-default.yaml)).
      - `Minimal` — the minimum possible bundle option (includes a single module - this one).
      - `Managed` — the bundle aimed at clusters managed by cloud providers (e.g., Google Kubernetes Engine).
    default: "Default"
  releaseChannel:
    type: string
    enum: ["Alpha", "Beta", "EarlyAccess", "Stable", "RockSolid"]
    description: |
      Deckhouse release channel.

      The order in which the stability of the update channel increases (from **less** stable to **more** stable): `Alpha`, `Beta`, `EarlyAccess`, `Stable`, `RockSolid`.
  update:
    type: object
    description: 'Deckhouse update configuration'
    properties:
      windows:
        type: array
        description: |
          Time windows for upgrading deckhouse. Used for downloading and starting a new deckhouse image
          with the same tag if it exists.
        items:
          type: object
          required:
            - from
            - to
          properties:
            from:
              type: string
              pattern: '^(?:\d|[01]\d|2[0-3]):[0-5]\d$'
              example: '13:00'
              desription: 'Start time of upgrade window.'
            to:
              type: string
              pattern: '^(?:\d|[01]\d|2[0-3]):[0-5]\d$'
              example: '18:30'
              description: 'End time of update window.'
            days:
              type: array
              description: 'Days of the week when deckhouse could be upgraded.'
              items:
                type: string
                enum:
                  - Mon
                  - Tue
                  - Wed
                  - Thu
                  - Fri
                  - Sat
                  - Sun
  nodeSelector:
    type: object
    additionalProperties:
      type: string
    description: |
      The same as in the pods' `spec.nodeSelector` parameter in Kubernetes.

      If the parameter is omitted of `false`, it will be determined [automatically](https://deckhouse.io/en/documentation/v1/#advanced-scheduling).
  tolerations:
    type: array
    description: |
      The same as in the pods' `spec.tolerations` parameter in Kubernetes;

      If the parameter is omitted of `false`, it will be determined [automatically](https://deckhouse.io/en/documentation/v1/#advanced-scheduling).
    items:
      type: object
      properties:
        effect:
          type: string
        key:
          type: string
        operator:
          type: string
        tolerationSeconds:
          type: integer
          format: int64
        value:
          type: string
