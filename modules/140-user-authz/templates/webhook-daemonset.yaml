{{- if .Values.userAuthz.enableMultiTenancy }}
  {{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: user-authz-webhook
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list .) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: user-authz-webhook
  updatePolicy:
    updateMode: "Auto"
  {{- end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: user-authz-webhook
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" "user-authz-webhook")) | indent 2 }}
spec:
  selector:
    matchLabels:
      app: user-authz-webhook
  template:
    metadata:
      annotations:
      labels:
        app: user-authz-webhook
    spec:
{{- include "helm_lib_priority_class" (tuple . "cluster-critical") | indent 6 }}
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
      - operator: Exists
      imagePullSecrets:
      - name: deckhouse-registry
      hostNetwork: true
      containers:
      - name: webhook
        image: {{ $.Values.global.modulesImages.registry }}/user-authz/webhook:{{ $.Values.global.modulesImages.tags.userAuthz.webhook }}
        volumeMounts:
        - mountPath: /etc/user-authz-webhook/
          name: user-authz-webhook-config
          readOnly: true
        - mountPath: /etc/ssl/user-authz-webhook
          name: user-authz-webhook-secret
        - mountPath: /etc/ssl/apiserver-authentication-requestheader-client-ca
          name: apiserver-authentication-requestheader-client-ca
        livenessProbe:
          exec:
            command:
            - curl
            - -ksS
            - --cert
            - /etc/ssl/user-authz-webhook/webhook-server.crt
            - --key
            - /etc/ssl/user-authz-webhook/webhook-server.key
            - https://127.0.0.1:40443/healthz
      volumes:
      - name: user-authz-webhook-secret
        secret:
          secretName: user-authz-webhook
      - name: apiserver-authentication-requestheader-client-ca
        configMap:
          name: apiserver-authentication-requestheader-client-ca
      - name: user-authz-webhook-config
        configMap:
          name: user-authz-webhook
{{- end }}
