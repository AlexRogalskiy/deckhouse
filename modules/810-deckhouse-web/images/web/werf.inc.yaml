image: {{ .ModuleName }}/{{ .ImageName }}
from: nginx:1.17.2
ansible:
  setup:
  - name: "Copy nginx.conf"
    copy:
      content: |
{{ .Files.Get "modules/810-deckhouse-web/images/web/nginx.conf" | indent 8 }}
      dest: /etc/nginx/nginx.conf
import:
- artifact: {{ .ModuleName }}/{{ .ImageName }}/static
  add: /srv/jekyll-data/_site/
  to: /usr/share/nginx/html
  before: setup
---
artifact: {{ .ModuleName }}/{{ .ImageName }}/static
from: jekyll/jekyll:3.8
mount:
  - from: build_dir
    to: /usr/local/bundle
ansible:
  install:
    - name: "Install Dependencies"
      shell: bundle install
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data
  setup:
    - name: "Add permalinks"
      shell: |
        for i in $(find . -regex '.*.md' -print); do
          grep -q "^---" $i
          if [ $? -gt 0 ]; then continue; fi
          cat $i | tr -d '\n' | grep -lv "^---.*permalink: .*---" &> /dev/null
          if [ $? -eq 0 ]; then
            # permalink not present, add it
            PERMALINK="/$(echo $i | sed 's#docs/##g'| tr '[:upper:]' '[:lower:]' | sed 's#\.md$#.html#' | sed 's#^\.\/##'  | sed 's#readme\.html$#index.html#' )"
            sed -i "1apermalink: $PERMALINK" $i
          fi
        done
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data
    - name: "Generate module configuration schemas"
      shell: |
        for schema_path in $(find modules -regex '^.*/openapi/config-values.yaml$' -print); do
          module_path=$(echo $schema_path | cut -d\/ -f-2 )
          module_name=$(echo $schema_path | cut -d\/ -f2 | cut -d- -f2-)
          mkdir -p _data/schemas/${module_name}
          cp -f $schema_path _data/schemas/${module_name}/
          grep -q '<!-- SCHEMA -->' ${module_path}/docs/CONFIGURATION.md
          if [ $? -eq 0 ]; then
            # Apply schema
            echo "Generating schema ${schema_path} for ${module_path}/docs/CONFIGURATION.md"
            sed -i "s#<!-- SCHEMA -->#\{\% include jsonschema_object.md object=site.data.schemas.${module_name}.config-values \%\}#" ${module_path}/docs/CONFIGURATION.md
          else
            echo "WARNING: Schema ${schema_path} found but there is no '<!-- SCHEMA -->' placeholder in the ${module_path}/docs/CONFIGURATION.md"
          fi
        done
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data
    - name: "Generate CR schemas"
      shell: |
        for schema_path in $(find modules -regex '^.*/crds/.*.yaml$' -print | sort); do
          module_path=$(echo $schema_path | cut -d\/ -f-2 )
          module_name=$(echo $schema_path | cut -d\/ -f2 | cut -d- -f2-)
          schema_path_relative=$(echo $schema_path | cut -d\/ -f3- | sed "s#\.yaml##; s#\/#\.#")
          mkdir -p _data/schemas/${module_name}/crds
          cp -f $schema_path _data/schemas/${module_name}/crds/
          grep -q '<!-- SCHEMA -->' ${module_path}/docs/CR.md &> /dev/null
          if [ $? -eq 0 ]; then
            # Apply schema
            echo "OK: Generating schema ${schema_path} for ${module_path}/docs/CR.md"
            sed -i "/<!-- SCHEMA -->/i\{\{ site.data.schemas.${module_name}.${schema_path_relative} \| format_crd \}\}" ${module_path}/docs/CR.md
          else
            echo "WARNING: Schema ${schema_path} found but there is no '<!-- SCHEMA -->' placeholder in the ${module_path}/docs/CR.md"
          fi
        done
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data
    - name: "Generate sidebars"
      shell: /bin/bash modules_make_data > /srv/jekyll-data/_data/sidebars/modules.yml2 &&  sed '1,+4d' _data/sidebars/modules.yml >> /srv/jekyll-data/_data/sidebars/modules.yml2  && mv -f /srv/jekyll-data/_data/sidebars/modules.yml2 /srv/jekyll-data/_data/sidebars/modules.yml
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data
    - name: "Build static files"
      shell: jekyll build
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data
    - name: "Link checking"
      shell: |
        (bundle exec htmlproofer \
          --allow-hash-href \
          --empty-alt-ignore \
          --check_html \
          --url_ignore "/localhost/,/https\:\/\/t.me/,/gitlab.com\/profile/,/.slack.com/,/habr.com/,/flant.ru/,/candi\/bashible\/bashbooster/,/\.yml$/,/\.yaml$/,/\.tmpl$/,/\.tpl$/" \
          ./_site/ &> /srv/jekyll-data/_site/link_test_report.txt ) || true
        cat /srv/jekyll-data/_site/link_test_report.txt
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data
git:
- add: /web
  to: /srv/jekyll-data
  owner: jekyll
  group: jekyll
  stageDependencies:
    install: ['Gemfile','Gemfile.lock']
    setup: ['**/*']
  excludePaths: ['docs']
- add: /
  to: /srv/jekyll-data
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
  includePaths: ['docs']
  excludePaths: ['_not_actual/']
- add: /modules
  to: /srv/jekyll-data/modules
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
  includePaths: ['**/docs/','**/openapi/','**/crds/']
- add: /modules/010-user-authn-crd/crds
  to: /srv/jekyll-data/modules/150-user-authn/crds
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
- add: /candi/cloud-providers/aws/openapi/
  to: /srv/jekyll-data/modules/030-cloud-provider-aws/crds/
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
- add: /candi/cloud-providers/azure/openapi/
  to: /srv/jekyll-data/modules/030-cloud-provider-azure/crds/
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
- add: /candi/cloud-providers/gcp/openapi/
  to: /srv/jekyll-data/modules/030-cloud-provider-gcp/crds/
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
- add: /candi/cloud-providers/openstack/openapi/
  to: /srv/jekyll-data/modules/030-cloud-provider-openstack/crds/
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
- add: /candi/cloud-providers/vsphere/openapi/
  to: /srv/jekyll-data/modules/030-cloud-provider-vsphere/crds/
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
- add: /candi/cloud-providers/yandex/openapi/
  to: /srv/jekyll-data/modules/030-cloud-provider-yandex/crds/
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
- add: /candi/openapi/node_group.yaml
  to: /srv/jekyll-data/modules/040-node-manager/crds/node_group.yaml
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']