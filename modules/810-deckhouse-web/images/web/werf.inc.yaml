image: {{ .ModuleName }}/{{ .ImageName }}
from: {{ env "BASE_NGINX_ALPINE" }}
ansible:
  setup:
  - name: "Copy nginx.conf"
    copy:
      content: |
{{ .Files.Get "modules/810-deckhouse-web/images/web/nginx.conf" | indent 8 }}
      dest: /etc/nginx/nginx.conf
import:
- artifact: {{ .ModuleName }}/{{ .ImageName }}/static
  add: /app/_site
  to: /usr/share/nginx/html
  before: setup
---
artifact: {{ .ModuleName }}/{{ .ImageName }}/static
from: jekyll/jekyll:3.8
mount:
  - from: build_dir
    to: /usr/local/bundle
ansible:
  install:
    - shell: |
        apk add rsync
        gem update bundler
    - name: "Install Dependencies"
      shell: bundle install
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation/
  setup:
    - name: "Preparing modules structure"
      shell: |
        export MODULES_SRC_DIR=/src/modules
        export MODULES_DST_EN=/srv/jekyll-data/documentation/modules_en
        export MODULES_DST_RU=/srv/jekyll-data/documentation/modules_ru
        bash ./modules_prepare.sh
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation/
    - name: "Add permalinks"
      shell: |
        for i in $(find . -regex '.*.md' -print); do
          grep -q "^---" $i
          if [ $? -gt 0 ]; then continue; fi
          cat $i | tr -d '\n' | grep -lv "^---.*permalink: .*---" &> /dev/null
          if [ $? -eq 0 ]; then
            # permalink is absent, add permalink
            # PERMALINK="/$(echo $i | sed -E 's#(modules_)(en|ru)/#\2/modules/#' | sed 's#docs/##g'| tr '[:upper:]' '[:lower:]' | sed 's#\.md$#.html#' | sed 's#^\.\/##' | sed 's#readme\.html$#index.html#' )"
            PERMALINK="/$(echo $i | sed -E 's#(modules_)(en|ru)/#\2/modules/#' | sed 's#docs/##g'| tr '[:upper:]' '[:lower:]' | sed 's#\.md$#.html#' | sed 's#^\.\/##' | sed 's#readme\.html$##' )"
            sed -i "1apermalink: $PERMALINK" $i
          fi
        done
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation/
    - name: "Generate module configuration schemas"
      shell: |
        export MODULES_DIR=modules_en
        bash ./modules_generate_configuration.sh
        export MODULES_DIR=modules_ru MODULES_LANG=ru
        bash ./modules_generate_configuration.sh
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation
    - name: "Generate CR schemas"
      shell: |
        export MODULES_DIR=modules_en
        bash ./modules_generate_cr.sh
        export MODULES_DIR=modules_ru
        bash ./modules_generate_cr.sh
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation
    - name: "Generate sidebars"
      shell: |
        export MODULES_DIR=modules_ru
        /bin/bash ./modules_make_data > _data/sidebars/modules.yml2 &&  sed '1,+4d' _data/sidebars/modules.yml >> _data/sidebars/modules.yml2  && mv -f _data/sidebars/modules.yml2 _data/sidebars/modules.yml
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation/
    - copy:
        content: |
{{ .Files.Get "modules/810-deckhouse-web/images/web/_config.yml" | indent 10 }}
        dest: /tmp/_config_additional.yml
    - copy:
        content: |
{{ .Files.Get "modules/810-deckhouse-web/images/web/site/_data/topnav.yml" | indent 10 }}
        dest: /srv/jekyll-data/site/_data/topnav.yml
    - copy:
        content: |
{{ .Files.Get "modules/810-deckhouse-web/images/web/site/_includes/footer.html" | indent 10 }}
        dest: /srv/jekyll-data/site/_includes/footer.html
    - name: "Generate documentation static"
      shell: |
        mkdir -m 777 -p /app/_site/
        JEKYLL_ENV=production jekyll build -d /app/_site/documentation/ --config _config.yml,/tmp/_config_additional.yml
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation/
        warn: false
    - name: "Generate main static"
      shell: |
        JEKYLL_ENV=production jekyll build -d /app/_site/site/ --config _config.yml,/tmp/_config_additional.yml
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/site/
    - shell: |
        cp -Rf /app/_site/site/assets /app/_site/documentation/
        cp -Rf /app/_site/site/images /app/_site/documentation/
        cp -Rf /app/_site/site/includes /app/_site/documentation/
        cp -Rf /app/_site/site/ru/includes /app/_site/documentation/ru
        cp -Rf /app/_site/site/en/includes /app/_site/documentation/en
        cp -Rf /app/_site/site/ru /app/_site/documentation/
        cp -Rf /app/_site/site/en /app/_site/documentation/
        rm -rf /app/_site/documentation/compare/
    - name: "Link checking"
      shell: |
        exit 0 || (bundle exec htmlproofer \
          --allow-hash-href \
          --empty-alt-ignore \
          --check_html \
          --url_ignore "/localhost/,/https\:\/\/t.me/,/gitlab.com\/profile/,/.slack.com/,/habr.com/,/flant.ru/,/candi\/bashible\/bashbooster/,/\.yml$/,/\.yaml$/,/\.tmpl$/,/\.tpl$/" \
          ./_site/ &> /app/_site/link_test_report.txt ) || true
        cat /app/_site/link_test_report.txt
      args:
        executable: /bin/bash
        chdir: /srv/jekyll-data/documentation/
git:
- add: /docs
  to: /srv/jekyll-data
  owner: jekyll
  group: jekyll
  includePaths:
    - documentation
    - site
  excludePaths:
    - '**/werf*.yaml'
    - '**/docker-compose.yml'
    - '**/.werf'
    - '**/.helm'
    - site/pages/*.html
    - site/_includes/footer.html
  stageDependencies:
    install: ['site/Gemfile','site/Gemfile.lock']
    setup: '**/*'
- add: /modules
  to: /src/modules
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
  includePaths: ['**/docs/','**/openapi/','**/crds/']
# CRDs
- add: /modules/010-user-authn-crd/crds
  to: /src/modules/150-user-authn/crds
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
- add: /candi/openapi/node_group.yaml
  to: /src/modules/040-node-manager/crds/node_group.yaml
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
- add: /candi/cloud-providers/aws/openapi/
  to: /src/modules/030-cloud-provider-aws/crds/
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
- add: /candi/cloud-providers/azure/openapi/
  to: /src/modules/030-cloud-provider-azure/crds/
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
- add: /candi/cloud-providers/gcp/openapi/
  to: /src/modules/030-cloud-provider-gcp/crds/
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
- add: /candi/cloud-providers/openstack/openapi/
  to: /src/modules/030-cloud-provider-openstack/crds/
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
- add: /candi/cloud-providers/vsphere/openapi/
  to: /src/modules/030-cloud-provider-vsphere/crds/
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
- add: /candi/cloud-providers/yandex/openapi/
  to: /src/modules/030-cloud-provider-yandex/crds/
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
- add: /modules/010-prometheus-crd/crds/grafanadashboarddefinition.yaml
  to: /src/modules/300-prometheus/crds/grafanadashboarddefinition.yaml
  owner: jekyll
  group: jekyll
  stageDependencies:
    setup: ['**/*']
