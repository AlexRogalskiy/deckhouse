#!/bin/bash

# Copyright 2021 Flant JSC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


source /deckhouse/shell_lib.sh

function __config__() {
  cat <<EOF
    configVersion: v1
    kubernetes:
    - name: d8_deployment
      keepFullObjectsInMemory: false
      apiVersion: apps/v1
      kind: Deployment
      group: main
      executeHookOnEvent: ["Added", "Modified"]
      namespace:
        nameSelector:
          matchNames: ["d8-system"]
      nameSelector:
        matchNames: ["deckhouse"]
      allowFailure: true
      jqFilter: |
          {
            "tag": (.spec.template.spec.containers[0].image | split(":")[1]),
            "version": (.metadata.annotations."core.deckhouse.io/version" // "unknown"),
            "edition": (.metadata.annotations."core.deckhouse.io/edition" // "unknown")
          }
EOF
}

function __main__() {

  if context::has snapshots.d8_deployment.0; then
    if [[ "$(values::get deckhouseWeb.deckhouseTag)" != "$(context::get snapshots.d8_deployment.0.filterResult.tag)" ]]; then
      values::set deckhouseWeb.deckhouseTag "$(context::get snapshots.d8_deployment.0.filterResult.tag)"
    fi
    if [[ "$(values::get deckhouseWeb.deckhouseVersion)" != "$(context::get snapshots.d8_deployment.0.filterResult.version)" ]]; then
      values::set deckhouseWeb.deckhouseVersion "\"$(context::get snapshots.d8_deployment.0.filterResult.version)\""
    fi
    if [[ "$(values::get deckhouseWeb.deckhouseEdition)" != "$(context::get snapshots.d8_deployment.0.filterResult.edition)" ]]; then
      values::set deckhouseWeb.deckhouseEdition "\"$(context::get snapshots.d8_deployment.0.filterResult.edition)\""
    fi
  fi

}

hook::run $@
