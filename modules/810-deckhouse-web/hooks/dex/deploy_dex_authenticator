#!/bin/bash

# Copyright 2021 Flant CJSC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

source /deckhouse/shell_lib.sh

function __config__() {
  cat << EOF
    configVersion: v1
    afterHelm: 10
EOF
}

function __main__() {
  if values::has deckhouseWeb.internal.deployDexAuthenticator && values::is_true global.clusterIsBootstrapped ; then
    allowedGroups=""
    if values::has deckhouseWeb.auth.allowedUserGroups ; then
      allowedGroups="allowedGroups: $(values::get deckhouseWeb.auth.allowedUserGroups)"
    fi
    cat <<EOF | kubectl apply -f -
apiVersion: deckhouse.io/v1alpha1
kind: DexAuthenticator
metadata:
 name: deckhouse-web
 namespace: d8-system
 labels:
   heritage: deckhouse
   module: deckhouse-web
   app: dex-authenticator
spec:
  applicationDomain: "$(module::public_domain deckhouse)"
  applicationIngressCertificateSecretName: "$(module::https_secret_name "ingress-tls")"
  applicationIngressClassName: "$(module::ingress_class)"
  $allowedGroups
EOF
  else
    if kubectl -n d8-system get dexauthenticator deckhouse-web >/dev/null 2>/dev/null ; then
      kubectl -n d8-system delete dexauthenticator deckhouse-web >/dev/null 2>/dev/null
    fi
  fi
}

hook::run "$@"
