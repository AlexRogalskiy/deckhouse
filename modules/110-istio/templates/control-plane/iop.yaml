{{- range $revision := .Values.istio.internal.revisionsToInstall }}
  {{- if ($.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: istiod-{{ $revision }}
  namespace: d8-{{ $.Chart.Name }}
{{ include "helm_lib_module_labels" (list $ (dict "app" "istiod" "istio.io/rev" $revision "workload-resource-policy.deckhouse.io" "master")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: istiod-{{ $revision }}
  updatePolicy:
    updateMode: "Auto"
  {{- end }}

---
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: {{ $revision }}
  namespace: d8-{{ $.Chart.Name }}
{{ include "helm_lib_module_labels" (list $ (dict "app" "istiod" "istio.io/rev" $revision)) | indent 2 }}
spec:
  revision: {{ $revision }}

  components:
    base:
      enabled: true

    pilot:
      enabled: true
      k8s:
        env:
          - name: PILOT_SKIP_VALIDATE_TRUST_DOMAIN
            value: "true"

    ingressGateways:
    - name: istio-ingressgateway
      enabled: false

    egressGateways:
    - name: istio-egressgateway
      enabled: false

    cni:
      enabled: false

    istiodRemote:
      enabled: false

  addonComponents:
    istiocoredns:
      enabled: false

  meshConfig:
    rootNamespace: d8-{{ $.Chart.Name }}
    trustDomain: {{ $.Values.global.discovery.clusterDomain | quote }}
    defaultConfig:
      proxyMetadata:
        ISTIO_META_DNS_CAPTURE: "true"
  {{- if $.Values.istio.federation.enabled }}
    caCertificates:
    {{- range $federation := $.Values.istio.internal.federations }}
    - spiffeBundleUrl: {{ $federation.spiffeEndpoint | quote }}
    {{- end }}
  {{- end }}

  values:
    global:
      istioNamespace: d8-{{ $.Chart.Name }}
      meshID: d8-istio-mesh
      network: network-{{ $.Values.global.clusterName }}
      multiCluster:
        clusterName: {{ $.Values.global.clusterName }}
      externalIstiod: true

      logging:
        level: "default:info"
      logAsJson: false
      imagePullPolicy: IfNotPresent
      imagePullSecrets:
      - deckhouse-registry
      proxy:
        image: {{ $.Values.global.modulesImages.registry }}/istio/proxyv2-{{ $revision }}:{{ index $.Values.global.modulesImages.tags.istio (printf "proxyv2%s" ($revision | title)) }}
        clusterDomain: {{ $.Values.global.discovery.clusterDomain | quote }}
        resources: {}
        logLevel: warning
        componentLogLevel: "misc:error"
  {{- $include_ip_ranges := list }}
  {{- $include_ip_ranges = append $include_ip_ranges "169.254.40.20/32" }}
  {{- $include_ip_ranges = append $include_ip_ranges $.Values.global.discovery.podSubnet }}
  {{- $include_ip_ranges = append $include_ip_ranges $.Values.global.discovery.serviceSubnet }}
  {{- $include_ip_ranges = append $include_ip_ranges $.Values.istio.sidecar.includeOutboundIPRanges }}
  {{- range $ip := $.Values.global.discovery.nodeInternalIPs }}
    {{- $include_ip_ranges = append $include_ip_ranges (printf "%s/32" $ip) }}
  {{- end }}
        includeIPRanges:      "{{ $include_ip_ranges | join "," }}"
        excludeIPRanges:      "{{ $.Values.istio.sidecar.excludeOutboundIPRanges | default list | join "," }}"
        excludeOutboundPorts: "{{ $.Values.istio.sidecar.excludeOutboundPorts    | default list | join "," }}"
        excludeInboundPorts:  "{{ $.Values.istio.sidecar.excludeInboundPorts     | default list | join "," }}"

      proxy_init:
        image: {{ $.Values.global.modulesImages.registry }}/istio/proxyv2-{{ $revision }}:{{ index $.Values.global.modulesImages.tags.istio (printf "proxyv2%s" ($revision | title)) }}
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 10m
            memory: 10Mi

{{- include "helm_lib_priority_class" (tuple $ "system-cluster-critical") | indent 6 }}

    pilot:
      autoscaleEnabled: false
      replicaCount: {{ include "helm_lib_is_ha_to_value" (list $ 2 1) }}
      image: {{ $.Values.global.modulesImages.registry }}/istio/pilot-{{ $revision }}:{{ index $.Values.global.modulesImages.tags.istio (printf "pilot%s" ($revision | title)) }}
      configNamespace: d8-{{ $.Chart.Name }}
#TODO: affinity by revision
{{- include "helm_lib_node_selector" (tuple $ "master") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple $ "master") | indent 6 }}
    telemetry:
      enabled: true
      v2:
        enabled: true
{{- end }}
