#!/bin/bash -e

function sigterm() {
  exit $?
}
trap sigterm SIGTERM

while true; do
  podcidr="$(curl --max-time 5 -s -S -f --resolve "kubernetes.default:443:$KUBERNETES_SERVICE_HOST" -s "https://kubernetes.default/api/v1/nodes/$NODE_NAME" --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" | jq .spec.podCIDR -r)"

  if echo "$podcidr" | grep -P '^\d+.\d+.\d+.\d+/\d+$' > /dev/null ; then
    echo "$podcidr is assigned to $NODE_NAME"

    if ! iptables -w 600 -t nat -C POSTROUTING -s $podcidr ! -d $POD_SUBNET -j MASQUERADE 2> /dev/null ; then
      iptables -w 600 -t nat -A POSTROUTING -s $podcidr ! -d $POD_SUBNET -j MASQUERADE
    fi

    if ! iptables -w 600 -C FORWARD -s $POD_SUBNET -j ACCEPT 2> /dev/null ; then
      iptables -w 600 -A FORWARD -s $POD_SUBNET -j ACCEPT
    fi
    if ! iptables -w 600 -C FORWARD -d $POD_SUBNET -j ACCEPT 2> /dev/null ; then
      iptables -w 600 -A FORWARD -d $POD_SUBNET -j ACCEPT
    fi

    rm -f /etc/cni/net.d/simple-bridge.conf
    tee /etc/cni/net.d/simple-bridge.conflist <<END
{
  "name": "cbr0",
  "cniVersion": "0.3.1",
  "plugins": [
    {
      "type": "bridge",
      "bridge": "cni0",
      "isDefaultGateway": true,
      "hairpinMode": true,
      "forceAddress": false,
      "ipam": {
        "type": "host-local",
        "subnet": "$podcidr"
      }
    },
    {
      "type": "portmap",
      "capabilities": {
        "portMappings": true
      }
    }
  ]
}
END
    sleep 3600
  else
    echo "Waiting for .spec.podCIDR to be assigned to $NODE_NAME"
    sleep 10
  fi
done
