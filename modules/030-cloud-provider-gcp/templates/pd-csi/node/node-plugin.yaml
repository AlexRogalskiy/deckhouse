{{- if (include "helm_lib_cluster_has_non_static_nodes" .) }}
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: pd-csi-node
  namespace: d8-cloud-provider-gcp
{{ include "helm_lib_module_labels" (list . (dict "app" "pd-csi-node")) | indent 2 }}
spec:
  selector:
    matchLabels:
      app: csi-pd-node
  template:
    metadata:
      labels:
        app: csi-pd-node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - operator: In
                key: node.deckhouse.io/type
                values:
                - Cloud
                - Hybrid
      imagePullSecrets:
      - name: deckhouse-registry
{{- include "helm_lib_priority_class" (tuple . "cluster-critical") | indent 6 }}
      serviceAccountName: pd-csi-node
      hostNetwork: true
      tolerations:
      - operator: Exists
      containers:
      - name: csi-node-driver-registrar
        image: {{ .Values.global.modulesImages.registry }}/cloud-provider-gcp/csi-node-driver-registrar:{{ .Values.global.modulesImages.tags.cloudProviderGcp.csiNodeDriverRegistrar }}
        args:
        - "--v=5"
        - "--csi-address=/csi/csi.sock"
        - "--kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock"
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "rm -rf /registration/pd.csi.storage.gke.io /registration/pd.csi.storage.gke.io-reg.sock"]
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi
        - name: registration-dir
          mountPath: /registration
      - name: gce-pd-driver
        securityContext:
          privileged: true
        image: {{ .Values.global.modulesImages.registry }}/cloud-provider-gcp/pd-csi-plugin:{{ .Values.global.modulesImages.tags.cloudProviderGcp.pdCsiPlugin }}
        args:
        - "--v=5"
        - "--endpoint=unix:/csi/csi.sock"
        volumeMounts:
        - name: kubelet-dir
          mountPath: /var/lib/kubelet
          mountPropagation: "Bidirectional"
        - name: plugin-dir
          mountPath: /csi
        - name: device-dir
          mountPath: /dev
        # The following mounts are required to trigger host udevadm from container
        - name: udev-rules-etc
          mountPath: /etc/udev
        - name: udev-rules-lib
          mountPath: /lib/udev
        - name: udev-socket
          mountPath: /run/udev
        - name: sys
          mountPath: /sys
      volumes:
      - name: registration-dir
        hostPath:
          path: /var/lib/kubelet/plugins_registry/
          type: Directory
      - name: kubelet-dir
        hostPath:
          path: /var/lib/kubelet
          type: Directory
      - name: plugin-dir
        hostPath:
          path: /var/lib/kubelet/plugins/pd.csi.storage.gke.io/
          type: DirectoryOrCreate
      - name: device-dir
        hostPath:
          path: /dev
          type: Directory
      # The following mounts are required to trigger host udevadm from container
      - name: udev-rules-etc
        hostPath:
          path: /etc/udev
          type: Directory
      - name: udev-rules-lib
        hostPath:
          path: /lib/udev
          type: Directory
      - name: udev-socket
        hostPath:
          path: /run/udev
          type: Directory
      - name: sys
        hostPath:
          path: /sys
          type: Directory
{{- end }}
