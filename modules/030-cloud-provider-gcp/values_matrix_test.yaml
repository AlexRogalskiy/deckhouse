global:
  clusterConfiguration:
    cloud:
      prefix: prefix
    clusterType: "Cloud"
  enabledModules: ["vertical-pod-autoscaler-crd"]
  modulesImages:
    registry: registry.deckhouse.io
    registryDockercfg: cfg
    tags:
      common:
        csiExternalProvisioner116: imagehash
        csiExternalAttacher116: imagehash
        csiExternalProvisioner119: imagehash
        csiExternalAttacher119: imagehash
        csiExternalResizer: imagehash
        csiNodeDriverRegistrar: imagehash
      cloudProviderGcp:
        simpleBridge: imagehash
        cloudControllerManager116: imagehash
        cloudControllerManager119: imagehash
        pdCsiPlugin: imagehash
  discovery:
    d8SpecificNodeCountByRole:
      worker: 1
      master:
        __ConstantChoices__: ["1", "3"]
    nodeCountByType:
      cloud: 1
    podSubnet: 10.0.1.0/16
    kubernetesVersion:
      __ConstantChoices__: [1.16.10, 1.17.8, 1.19.10]
  modules:
    placement:
      __ConstantChoices__:
      - {}
      - customTolerationKeys:
          - "test-1"
          - "test-2/master"

cloudProviderGcp:
  internal:
    disableExternalIP:
      __ConstantChoices__:
      - __EmptyItem__
      - true
      - false
    providerClusterConfiguration:
        sshKey: publickey
        subnetworkCIDR: 10.0.0.0/24
        labels:
          kube: test
        layout: Standard
        masterNodeGroup:
          instanceClass:
            additionalLabels:
                kube-node: test
            additionalNetworkTags:
              __ConstantChoices__:
              - __EmptyItem__
              - ["tag1","tag2"]
            disableExternalIP: false
            diskSizeGb: 20
            image: image
            machineType: n1-standard-4
          replicas: 1
          zones: ["zonea", "zoneb"]
        peeredVPCs:
        - default
        provider:
          region: europe-west4
          serviceAccountJSON: |-
            {
              "type": "service_account",
              "project_id": "project_id",
              "private_key_id": "private_key_id",
              "private_key": "private_key",
              "client_email": "client_email",
              "client_id": "client_id",
              "auth_uri": "auth_uri",
              "token_uri": "token_uri",
              "auth_provider_x509_cert_url": "auth_provider_x509_cert_url",
              "client_x509_cert_url": "client_x509_cert_url"
            }
    providerDiscoveryData:
      disableExternalIP: true
      instances:
        diskSizeGb: 50
        diskType: disk-type
        image: image
        networkTags:
        - ["tag1", "tag2"]
        labels:
          test: test
      kind: GCPCloudDiscoveryData
      networkName:
        __ConstantChoices__:
        - __EmptyItem__
        - mynetname
      subnetworkName: example
      zones:
      - example
