{{- define "monitoring_kubernetes_control_plane_is_kube_scheduler_face_slapper_enabled" -}}
  {{- if eq .Values.monitoringKubernetesControlPlane.internal.kubeScheduler.accessType "Pod" -}}
    {{- if eq .Values.monitoringKubernetesControlPlane.internal.kubeScheduler.pod.authenticationMethod "PrometheusCertificate" -}}
      not empty string
    {{- end -}}
  {{- end -}}
{{- end }}

{{- if include "monitoring_kubernetes_control_plane_is_kube_scheduler_face_slapper_enabled" . }}
  {{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: kube-scheduler-face-slapper
  namespace: d8-monitoring
{{ include "helm_lib_module_labels" (list . (dict "app" "kube-scheduler-face-slapper" "workload-resource-policy.deckhouse.io" "master")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: kube-scheduler-face-slapper
  updatePolicy:
    updateMode: "Auto"
  {{- end }}
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: kube-scheduler-face-slapper
  namespace: d8-monitoring
{{ include "helm_lib_module_labels" (list . (dict "app" "kube-scheduler-face-slapper")) | indent 2 }}
spec:
{{- /* TODO: change to "maxUnavailable: 10%" when PDB percentage will support daemonsets */}}
  minAvailable: 0
  selector:
    matchLabels:
      app: kube-scheduler-face-slapper
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-scheduler-face-slapper
  namespace: d8-monitoring
{{ include "helm_lib_module_labels" (list . (dict "app" "kube-scheduler-face-slapper")) | indent 2 }}
spec:
  selector:
    matchLabels:
      app: kube-scheduler-face-slapper
  template:
    metadata:
      labels:
        app: kube-scheduler-face-slapper
    spec:
      hostPID: true
      hostNetwork: true
      imagePullSecrets:
      - name: deckhouse-registry
{{- include "helm_lib_priority_class" (tuple . "cluster-low") | indent 6 }}
{{- include "helm_lib_node_selector" (tuple . "master") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "master") | indent 6 }}
{{- include "helm_lib_module_pod_security_context_run_as_user_root" . | indent 6 }}
      containers:
      - name: face-slapper
{{- include "helm_lib_module_container_security_context_read_only_root_filesystem_capabilities_drop_all_and_add"  (list . (list "KILL" "SYS_PTRACE")) | indent 8 }}
        image: {{ .Values.global.modulesImages.registry }}/monitoring-kubernetes-control-plane/kube-scheduler-face-slapper:{{ .Values.global.modulesImages.tags.monitoringKubernetesControlPlane.kubeSchedulerFaceSlapper }}
        env:
        - name: KUBE_SCHEDULER_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KUBE_SCHEDULER_PORT
          value: {{ .Values.monitoringKubernetesControlPlane.internal.kubeScheduler.pod.port | quote }}
        volumeMounts:
        - name: prometheus-scraper-tls
          mountPath: "/etc/ssl/private/"
        resources:
          requests:
{{- include "helm_lib_module_ephemeral_storage_only_logs" . | indent 12 }}
      volumes:
      - name: prometheus-scraper-tls
        secret:
          secretName: prometheus-scraper-tls
{{- end }}
