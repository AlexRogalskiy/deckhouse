---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}-a
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" .Chart.Name)) | indent 2 }}
spec:
  replicas: 1
  serviceName: {{ .Chart.Name }}-a
  selector:
    matchLabels:
      {{ .Chart.Name }}: a
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        {{ .Chart.Name }}: a
    spec:
      imagePullSecrets:
      - name: deckhouse-registry
      terminationGracePeriodSeconds: 1
      serviceAccountName: {{ .Chart.Name }}
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.smokeMini.internal.nodeSelector.a }}
      tolerations:
      - operator: Exists
{{- include "helm_lib_priority_class" (tuple . "cluster-low") | indent 6 }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ $.Values.global.modulesImages.registry }}/smoke-mini/smoke-mini:{{ $.Values.global.modulesImages.tags.smokeMini.smokeMini }}
        command: [ '/smoke-mini' ]
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        volumeMounts:
          - name: disk
            mountPath: /disk
{{- $storageClass := .Values.smokeMini.internal.effectiveStorageClass }}
{{- if $storageClass }}
  volumeClaimTemplates:
  - metadata:
      name: disk
      labels:
        app: {{ .Chart.Name }}
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: {{ $storageClass }}
      resources:
        requests:
          storage: 256Mi
{{- else }}
      volumes:
      - name: disk
        emptyDir: {}
{{- end }}
