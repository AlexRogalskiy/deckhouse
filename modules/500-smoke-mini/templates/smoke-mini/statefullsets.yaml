{{- $context := . }}
{{- range $k, $v := .Values.smokeMini.internal.sts }}
  {{- $sts := pluck $k $.Values.smokeMini.internal.sts | first }}
  {{- if and (hasKey $sts "node") (hasKey $sts "zone") }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $.Chart.Name }}-{{ $k }}
  namespace: d8-{{ $.Chart.Name }}
{{ include "helm_lib_module_labels" (list $context (dict "app" $.Chart.Name)) | indent 2 }}
  annotations:
    node: {{ $sts.node }}
    {{- if ne $sts.zone "NONE" }}
    zone: {{ $sts.zone }}
    {{- end }}
spec:
  replicas: 1
  serviceName: {{ $.Chart.Name }}-{{ $k }}
  selector:
    matchLabels:
      {{ $.Chart.Name }}: {{ $k }}
  template:
    metadata:
      labels:
        app: {{ $.Chart.Name }}
        {{ $.Chart.Name }}: {{ $k }}
    spec:
      imagePullSecrets:
      - name: deckhouse-registry
      terminationGracePeriodSeconds: 1
      serviceAccountName: {{ $.Chart.Name }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - {{ $sts.node }}
      tolerations:
      - operator: Exists
{{- include "helm_lib_priority_class" (tuple $context "cluster-low") | indent 6 }}
      containers:
      - name: {{ $.Chart.Name }}
        image: {{ $sts.image }}
        command: [ '/smoke-mini' ]
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        env:
        - name: SMOKE_MINI_STS_LIST
          value: {{ join " " (keys $context.Values.smokeMini.internal.sts | sortAlpha) }}
        volumeMounts:
          - name: disk
            mountPath: /disk
    {{- $storageClass := $.Values.smokeMini.internal.effectiveStorageClass }}
    {{- if $storageClass }}
  volumeClaimTemplates:
  - metadata:
      name: disk
      labels:
        app: {{ $.Chart.Name }}
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: {{ $storageClass }}
      resources:
        requests:
          storage: 256Mi
    {{- else }}
      volumes:
      - name: disk
        emptyDir: {}
    {{- end }}
  {{- end }}
{{- end }}
