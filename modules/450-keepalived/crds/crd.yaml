apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: keepalivedinstances.deckhouse.io
  labels:
    heritage: antiopa
    module: keepalived
spec:
  group: deckhouse.io
  scope: Cluster
  names:
    plural: keepalivedinstances
    singular: keepalivedinstance
    kind: KeepalivedInstance
  version: v1alpha1
  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      description: 'KeepalivedInstance is handy interface for installing keepalived clusters. Single KeepalivedInstance object = single keepalived cluster.'
      required:
      - spec
      properties:
        spec:
          type: object
          required:
          - nodeSelector
          - vrrpInstances
          properties:
            nodeSelector:
              type: object
              description: 'Standard nodeSelector for StatefulSet with keepalived daemon.'
            vrrpInstances:
              type: array
              description: 'List of virtual IP groups in keepalived cluster.'
              items:
                type: object
                required:
                - id
                - interface
                - virtualIPAddresses
                properties:
                  id:
                    type: integer
                    description: 'Entire-cluster UNIQUE ID for VRRP instance.'
                    maximum: 255
                    minimum: 1
                  interface:
                    type: object
                    properties:
                      detectionStrategy:
                        type: string
                        description: 'How to detect interface for VRRP traffic. "Name" — use field interface.name as is. "NetworkAddress" — discover interface in network from field interface.networkAddress. "DefaultRoute" — discover interface with default route.'
                      name:
                        type: string
                        description: 'Exact interface name for VRRP traffic. All nodes in nodeSelector-wide must have this interface.'
                        minLength: 1
                      networkAddress:
                        type: string
                        description: 'Interface in this network will be used for VRRP traffic. All nodes in nodeSelector-wide must have interface in this network.'
                        pattern: '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$'
                        example: '192.168.42.0/24'
                    oneOf:
                    - properties:
                        detectionStrategy:
                          enum: [Name]
                      required: [detectionStrategy, name]
                    - properties:
                        detectionStrategy:
                          enum: [NetworkAddress]
                      required: [detectionStrategy, networkAddress]
                    - properties:
                        detectionStrategy:
                          enum: [DefaultRoute]
                      required: [detectionStrategy]
                  preempt:
                    type: boolean
                    description: 'What to do when higher-priority node comes up. Keep serve IP on lower-priority (preempt: false) or transfer to higher-priority (preempt: true).'
                  virtualIPAddresses:
                    type: array
                    description: 'List of IP addresses which must work together on single node.'
                    items:
                      type: object
                      required:
                      - address
                      properties:
                        address:
                          type: string
                          description: 'One of IP addresses in group. Format: IP/Prefix.'
                          example: '192.168.42.15/32'
                          pattern: '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$'
                        interface:
                          type: object
                          properties:
                            detectionStrategy:
                              type: string
                              description: 'How to detect interface for virtual IP. "Name" — use field interface.name as is. "NetworkAddress" — use node interface having IP-addresses from network specified in interface.networkAddress. "DefaultRoute" — use node interface with default route.'
                            name:
                              type: string
                              description: 'Exact interface name for virtual IP. All nodes in nodeSelector-wide must have this interface.'
                              minLength: 1
                            networkAddress:
                              type: string
                              description: 'Interface in this network will be used for virtual IP. All nodes in nodeSelector-wide must have interface in this network.'
                              pattern: '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$'
                              example: '192.168.42.0/24'

                          oneOf:
                          - properties:
                              detectionStrategy:
                                enum: [Name]
                            required: [detectionStrategy, name]
                          - properties:
                              detectionStrategy:
                                enum: [NetworkAddress]
                            required: [detectionStrategy, networkAddress]
                          - properties:
                              detectionStrategy:
                                enum: [DefaultRoute]
                            required: [detectionStrategy]
