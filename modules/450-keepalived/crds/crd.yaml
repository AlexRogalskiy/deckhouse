apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: keepalivedinstances.deckhouse.io
  labels:
    heritage: deckhouse
    module: keepalived
spec:
  group: deckhouse.io
  scope: Cluster
  names:
    plural: keepalivedinstances
    singular: keepalivedinstance
    kind: KeepalivedInstance
  version: v1alpha1
  validation:
    openAPIV3Schema:
      type: object
      description: 'KeepalivedInstance is handy interface for installing keepalived clusters. Single KeepalivedInstance object = single keepalived cluster.'
      required:
      - spec
      properties:
        spec:
          type: object
          required:
          - nodeSelector
          - vrrpInstances
          properties:
            nodeSelector:
              type: object
              description: 'Standard nodeSelector for StatefulSet with keepalived daemon.'
            tolerations:
              description: If specified, the pod's tolerations.
              items:
                description: The pod this Toleration is attached to tolerates any
                  taint that matches the triple <key,value,effect> using the matching
                  operator <operator>.
                properties:
                  effect:
                    description: Effect indicates the taint effect to match. Empty
                      means match all taint effects. When specified, allowed values
                      are NoSchedule, PreferNoSchedule and NoExecute.
                    type: string
                  key:
                    description: Key is the taint key that the toleration applies
                      to. Empty means match all taint keys. If the key is empty, operator
                      must be Exists; this combination means to match all values and
                      all keys.
                    type: string
                  operator:
                    description: Operator represents a key's relationship to the value.
                      Valid operators are Exists and Equal. Defaults to Equal. Exists
                      is equivalent to wildcard for value, so that a pod can tolerate
                      all taints of a particular category.
                    type: string
                  tolerationSeconds:
                    description: TolerationSeconds represents the period of time the
                      toleration (which must be of effect NoExecute, otherwise this
                      field is ignored) tolerates the taint. By default, it is not
                      set, which means tolerate the taint forever (do not evict).
                      Zero and negative values will be treated as 0 (evict immediately)
                      by the system.
                    format: int64
                    type: integer
                  value:
                    description: Value is the taint value the toleration matches to.
                      If the operator is Exists, the value should be empty, otherwise
                      just a regular string.
                    type: string
                type: object
              type: array
            vrrpInstances:
              type: array
              description: 'List of virtual IP groups in keepalived cluster.'
              items:
                type: object
                required:
                - id
                - interface
                - virtualIPAddresses
                properties:
                  id:
                    type: integer
                    description: 'Entire-cluster UNIQUE ID for VRRP instance.'
                    maximum: 255
                    minimum: 1
                  interface:
                    type: object
                    properties:
                      detectionStrategy:
                        type: string
                        description: 'How to detect interface for VRRP traffic. "Name" — use field interface.name as is. "NetworkAddress" — discover interface in network from field interface.networkAddress. "DefaultRoute" — discover interface with default route.'
                      name:
                        type: string
                        description: 'Exact interface name for VRRP traffic. All nodes in nodeSelector-wide must have this interface.'
                        minLength: 1
                      networkAddress:
                        type: string
                        description: 'Interface in this network will be used for VRRP traffic. All nodes in nodeSelector-wide must have interface in this network.'
                        pattern: '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$'
                        example: '192.168.42.0/24'
                    oneOf:
                    - properties:
                        detectionStrategy:
                          enum: [Name]
                      required: [detectionStrategy, name]
                    - properties:
                        detectionStrategy:
                          enum: [NetworkAddress]
                      required: [detectionStrategy, networkAddress]
                    - properties:
                        detectionStrategy:
                          enum: [DefaultRoute]
                      required: [detectionStrategy]
                  preempt:
                    type: boolean
                    description: 'What to do when higher-priority node comes up. Keep serve IP on lower-priority (preempt: false) or transfer to higher-priority (preempt: true).'
                  virtualIPAddresses:
                    type: array
                    description: 'List of IP addresses which must work together on single node.'
                    items:
                      type: object
                      required:
                      - address
                      properties:
                        address:
                          type: string
                          description: 'One of IP addresses in group. Format: IP/Prefix.'
                          example: '192.168.42.15/32'
                          pattern: '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$'
                        interface:
                          type: object
                          properties:
                            detectionStrategy:
                              type: string
                              description: 'How to detect interface for virtual IP. "Name" — use field interface.name as is. "NetworkAddress" — use node interface having IP-addresses from network specified in interface.networkAddress. "DefaultRoute" — use node interface with default route.'
                            name:
                              type: string
                              description: 'Exact interface name for virtual IP. All nodes in nodeSelector-wide must have this interface.'
                              minLength: 1
                            networkAddress:
                              type: string
                              description: 'Interface in this network will be used for virtual IP. All nodes in nodeSelector-wide must have interface in this network.'
                              pattern: '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$'
                              example: '192.168.42.0/24'

                          oneOf:
                          - properties:
                              detectionStrategy:
                                enum: [Name]
                            required: [detectionStrategy, name]
                          - properties:
                              detectionStrategy:
                                enum: [NetworkAddress]
                            required: [detectionStrategy, networkAddress]
                          - properties:
                              detectionStrategy:
                                enum: [DefaultRoute]
                            required: [detectionStrategy]
