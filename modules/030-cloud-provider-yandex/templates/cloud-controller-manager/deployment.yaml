{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: cloud-controller-manager
  namespace: d8-cloud-provider-yandex
{{ include "helm_lib_module_labels" (list . (dict "app" "cloud-controller-manager")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: cloud-controller-manager
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-controller-manager
  namespace: d8-cloud-provider-yandex
{{ include "helm_lib_module_labels" (list . (dict "app" "cloud-controller-manager")) | indent 2 }}
spec:
{{- include "helm_lib_deployment_on_master_strategy_and_replicas_for_ha" . | indent 2 }}
  selector:
    matchLabels:
      app: cloud-controller-manager
  template:
    metadata:
      labels:
        app: cloud-controller-manager
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/cloud-controller-manager/secret.yaml") . | sha256sum }}
    spec:
      imagePullSecrets:
      - name: deckhouse-registry
{{- include "helm_lib_priority_class" (tuple . "cluster-critical") | indent 6 }}
{{- include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app" "cloud-controller-manager")) | indent 6 }}
{{- include "helm_lib_node_selector" (tuple . "master") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "wildcard") | indent 6 }}
      hostNetwork: true
      securityContext:
        runAsUser: 1001
      serviceAccountName: cloud-controller-manager
      containers:
        - name: yandex-cloud-controller-manager
          image: {{ .Values.global.modulesImages.registry }}/cloud-provider-yandex/cloud-controller-manager:{{ .Values.global.modulesImages.tags.cloudProviderYandex.cloudControllerManager }}
          command:
            - /bin/yandex-cloud-controller-manager
            - --cloud-provider=yandex
            - --cluster-name={{ .Values.global.discovery.clusterUUID | sha256sum | trunc 24 }}
            - --allocate-node-cidrs=true
            - --cluster-cidr={{ .Values.global.discovery.podSubnet }}
            - --v=4
          ports:
          - name: ccm
            containerPort: 10258
          livenessProbe:
            httpGet:
              path: /healthz
              port: ccm
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /healthz
              port: ccm
              scheme: HTTPS
          resources:
            requests:
              cpu: 200m
          env:
            - name: YANDEX_CLUSTER_NAME
              value: a{{ .Values.global.discovery.clusterUUID | sha256sum | trunc 24 }}
            - name: YANDEX_CLOUD_SERVICE_ACCOUNT_JSON
              valueFrom:
                secretKeyRef:
                  name: cloud-controller-manager
                  key: service-acount-json
            - name: YANDEX_CLOUD_DEFAULT_LB_LISTENER_SUBNET_ID
              value: {{ .Values.cloudProviderYandex.internal.defaultLbListenerSubnetId | quote }}
            - name: YANDEX_CLOUD_DEFAULT_LB_TARGET_GROUP_NETWORK_ID
              value: {{ .Values.cloudProviderYandex.internal.providerDiscoveryData.defaultLbTargetGroupNetworkId | quote }}
            - name: YANDEX_CLOUD_INTERNAL_NETWORK_IDS
              value: {{ join "," .Values.cloudProviderYandex.internal.providerDiscoveryData.internalNetworkIDs | quote }}
            - name: YANDEX_CLOUD_EXTERNAL_NETWORK_IDS
              value: {{ join "," .Values.cloudProviderYandex.additionalExternalNetworkIDs | quote }}
            - name: YANDEX_CLOUD_ROUTE_TABLE_ID
              value: {{ .Values.cloudProviderYandex.internal.providerDiscoveryData.routeTableID | required ".Values.cloudProviderYandex.internal.providerDiscoveryData.routeTableID is required" | quote }}
