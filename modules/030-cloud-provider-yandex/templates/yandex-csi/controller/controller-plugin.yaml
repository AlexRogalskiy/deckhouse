{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: csi-controller
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" "csi-controller" "workload-resource-policy.deckhouse.io" "master")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: StatefulSet
    name: csi-controller
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: csi-controller
  namespace: d8-{{ .Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" "csi-driver")) | indent 2 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: csi-controller
  serviceName: ""
  template:
    metadata:
      labels:
        app: csi-controller
    spec:
      imagePullSecrets:
      - name: deckhouse-registry
{{- include "helm_lib_priority_class" (tuple . "cluster-critical") | indent 6 }}
{{- include "helm_lib_node_selector" (tuple . "master") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "master") | indent 6 }}
      serviceAccountName: yandex-csi-controller
      containers:
      - name: csi-provisioner
        image: {{ .Values.global.modulesImages.registry }}/cloud-provider-yandex/csi-provisioner:{{ .Values.global.modulesImages.tags.cloudProviderYandex.csiProvisioner }}
        args:
        - "--v=5"
        - "--csi-address=/csi/csi.sock"
        - "--feature-gates=Topology=true"
        - "--strict-topology"
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
      - name: csi-attacher
        image: {{ .Values.global.modulesImages.registry }}/cloud-provider-yandex/csi-attacher:{{ .Values.global.modulesImages.tags.cloudProviderYandex.csiAttacher }}
        args:
        - "--v=5"
        - "--csi-address=/csi/csi.sock"
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
      - name: csi-resizer
        image: {{ .Values.global.modulesImages.registry }}/cloud-provider-yandex/csi-resizer:{{ .Values.global.modulesImages.tags.cloudProviderYandex.csiResizer }}
        args:
        - "--v=5"
        - "--csi-address=/csi/csi.sock"
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
      - name: csi-snapshotter
        image: {{ .Values.global.modulesImages.registry }}/cloud-provider-yandex/csi-snapshotter:{{ .Values.global.modulesImages.tags.cloudProviderYandex.csiSnapshotter }}
        args:
        - "--v=5"
        - "--csi-address=/csi/csi.sock"
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
      - name: csi-controller
        image: {{ .Values.global.modulesImages.registry }}/cloud-provider-yandex/yandex-csi-plugin:{{ .Values.global.modulesImages.tags.cloudProviderYandex.yandexCsiPlugin }}
        args:
        - "--address=$(MY_POD_IP):12302"
        - "--endpoint=unix:/csi/csi.sock"
        - "--folder-id={{ .Values.cloudProviderYandex.internal.providerClusterConfiguration.provider.folderID }}"
        ports:
          - name: healthz
            containerPort: 12302
            protocol: TCP
        env:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: YANDEX_AUTH_KEYS
          valueFrom:
            secretKeyRef:
              name: csi-credentials
              key: serviceAccountJSON
        readinessProbe:
          httpGet:
            path: /health
            port: 12302
          initialDelaySeconds: 10
          periodSeconds: 15
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
      - name: liveness-probe
        image: {{ .Values.global.modulesImages.registry }}/cloud-provider-yandex/csi-liveness-probe:{{ .Values.global.modulesImages.tags.cloudProviderYandex.csiLivenessProbe }}
        args:
          - --csi-address=/csi/csi.sock
        volumeMounts:
          - name: socket-dir
            mountPath: /csi
      volumes:
        - name: socket-dir
          emptyDir: {}
