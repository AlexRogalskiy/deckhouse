#!/bin/bash -e

function sigterm() {
  exit $?
}
trap sigterm SIGTERM

while true; do
  node_object="$(curl --max-time 5 -s -S -f --resolve "kubernetes.default:443:$KUBERNETES_SERVICE_HOST" -s "https://kubernetes.default/api/v1/nodes/$NODE_NAME" --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)")"

  if ! echo "$node_object" | jq -e '[.status.conditions[] | select(.type == "NetworkUnavailable")][0] | .status == "False"' >/dev/null 2>&1; then
    echo '"NetworkUnavailable" status is not "False" yet, retrying...'
    sleep 5
    continue
  fi

  if ip link show internal >/dev/null 2>&1; then
    internal_ip=$(ip -j a show | jq -er '.[] | select(.ifname == "internal") | .addr_info | map(select(.family == "inet")) | first | "\(.local)/\(.prefixlen)"')
    if [[ -e "$internal_ip" ]]; then
      echo "Cannot determine CIDR of an internal network"
      exit 1
    fi

    gw=$(python3 -c 'import ipaddress, itertools, sys; net = ipaddress.IPv4Network(sys.argv[1], strict=False); print(next(net.hosts()))' "$internal_ip")
    ip route replace "$POD_SUBNET" via "$gw"
  fi

  podcidr="$(echo "$node_object" | jq .spec.podCIDR -r)"

  if echo "$podcidr" | grep -P '^\d+.\d+.\d+.\d+/\d+$' > /dev/null ; then
    echo "$podcidr is assigned to $NODE_NAME"

    if ! iptables -w 600 -t nat -C POSTROUTING -s $podcidr ! -d $POD_SUBNET -j MASQUERADE 2> /dev/null ; then
      iptables -w 600 -t nat -A POSTROUTING -s $podcidr ! -d $POD_SUBNET -j MASQUERADE
    fi

    if ! iptables -w 600 -C FORWARD -s $POD_SUBNET -j ACCEPT 2> /dev/null ; then
      iptables -w 600 -A FORWARD -s $POD_SUBNET -j ACCEPT
    fi
    if ! iptables -w 600 -C FORWARD -d $POD_SUBNET -j ACCEPT 2> /dev/null ; then
      iptables -w 600 -A FORWARD -d $POD_SUBNET -j ACCEPT
    fi

    tee /etc/cni/net.d/simple-bridge.conf <<END
{
    "cniVersion": "0.3.1",
    "name": "cni0",
    "type": "bridge",
    "bridge": "cni0",
    "isDefaultGateway": true,
    "hairpinMode": true,
    "forceAddress": false,
    "ipam": {
        "type": "host-local",
        "subnet": "$podcidr"
    }
}
END

    rm -f /etc/cni/net.d/10-flannel.conflist
    ip link delete flannel.1 || true

    sleep 3600
  else
    echo "Waiting for .spec.podCIDR to be assigned to $NODE_NAME"
    sleep 10
  fi
done
