#!/bin/bash

source /deckhouse/shell_lib.sh

function __config__() {
  cat << EOF
    configVersion: v1
    beforeHelm: 1
    kubernetes:
    - name: pvc
      group: main
      apiVersion: v1
      kind: PersistentVolumeClaim
      namespace:
        nameSelector:
          matchNames: ["kube-openvpn"]
      labelSelector:
        matchLabels:
          app: openvpn
    - name: default_sc
      group: main
      apiVersion: storage.k8s.io/v1
      kind: Storageclass
      jqFilter: |
        (.metadata.annotations."storageclass.beta.kubernetes.io/is-default-class" == "true") or
        (.metadata.annotations."storageclass.kubernetes.io/is-default-class" == "true")
    - name: openvpn_pod
      group: main
      apiVersion: v1
      kind: Pod
      namespace:
        nameSelector:
          matchNames: ["kube-openvpn"]
      labelSelector:
        matchLabels:
          app: openvpn
      jqFilter: .metadata.name
      executeHookOnEvent: []
      executeHookOnSynchronization: false
EOF
}

function __main__ {
  effective_storage_class="false"

  if context::jq -er '.snapshots.default_sc[] | select(.filterResult == true)' >/dev/null; then
    effective_storage_class="$(context::jq -r '[.snapshots.default_sc[] | select(.filterResult == true)] | first | .object.metadata.name')"
  fi

  if values::has --config global.storageClass; then
    effective_storage_class="$(values::get --config global.storageClass)"
  fi

  if context::has snapshots.pvc.0 ; then
    effective_storage_class="$(context::get snapshots.pvc.0.object.spec.storageClassName)"
  fi
  current_storage_class="$effective_storage_class"

  if values::has --config openvpn.storageClass; then
    effective_storage_class="$(values::get --config openvpn.storageClass)"
  fi

  values::set openvpn.internal.effectiveStorageClass "$effective_storage_class"

  if context::jq -er '.snapshots.pvc[0].object.metadata | has("deletionTimestamp")' >/dev/null; then
    pod_name="$(context::get snapshots.openvpn_pod.0.object.metadata.name)"
    kubernetes::delete_if_exists::non_blocking "kube-openvpn" "pod/$pod_name"
    echo "!!! NOTICE: deleting pod/$pod_name because persistentvolumeclaim/openvpn was deleted !!!"
  fi

  if [ "$current_storage_class" != "$effective_storage_class" ] && [ "$effective_storage_class" != "false" ]; then
    if context::has snapshots.pvc.0 ; then
      kubernetes::delete_if_exists::non_blocking "kube-openvpn" "persistentvolumeclaim/openvpn"
      echo "!!! NOTICE: storage class changed, deleting persistentvolumeclaim/openvpn !!!"
    fi
  fi
}

hook::run $@
