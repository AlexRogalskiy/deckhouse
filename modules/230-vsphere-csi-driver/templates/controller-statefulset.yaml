{{- if not .Values.vsphereCsiDriver.disableCSI }}
{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: vsphere-csi-driver-controller
  namespace: kube-system
{{ include "helm_lib_module_labels" (list . (dict "app" "controller")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: StatefulSet
    name: vsphere-csi-driver-controller
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: vsphere-csi-driver-controller
  namespace: kube-system
{{ include "helm_lib_module_labels" (list . (dict "app" "controller")) | indent 2 }}
spec:
  serviceName: controller
  replicas: 1
  selector:
    matchLabels:
      app: vsphere-csi-controller
  template:
    metadata:
      labels:
        app: vsphere-csi-controller
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/vsphere-config.yaml") . | sha256sum }}
    spec:
{{- include "helm_lib_node_selector" (tuple . "system") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "system") | indent 6 }}
{{- include "helm_lib_priority_class" (tuple . "cluster-critical") | indent 6 }}
      imagePullSecrets:
      - name: deckhouse-registry
      serviceAccountName: vsphere-csi-controller
      containers:
      - name: controller
        image: {{ .Values.global.modulesImages.registry }}/vsphere-csi-driver/vsphere-csi:{{ .Values.global.modulesImages.tags.vsphereCsiDriver.vsphereCsi }}
        env:
        - name: CSI_ENDPOINT
          value: "unix:///var/lib/csi/sockets/pluginproxy/csi.sock"
        - name: X_CSI_MODE
          value: "controller"
        - name: X_CSI_SPEC_REQ_VALIDATION
          value: "false"
        volumeMounts:
        - mountPath: /etc/cloud
          name: vsphere-config-volume
          readOnly: true
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - name: liveness-probe
        image: {{ .Values.global.modulesImages.registry }}/vsphere-csi-driver/livenessprobe:{{ .Values.global.modulesImages.tags.vsphereCsiDriver.livenessprobe }}
        args:
        - "--csi-address=$(ADDRESS)"
        env:
        - name: ADDRESS
          value: "/var/lib/csi/sockets/pluginproxy/csi.sock"
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      volumes:
      - name: vsphere-config-volume
        secret:
          secretName: vsphere-csi-config
      - name: socket-dir
        hostPath:
          path: /var/lib/csi/sockets/pluginproxy/vsphere.csi.vmware.com
          type: DirectoryOrCreate
{{- end }}
