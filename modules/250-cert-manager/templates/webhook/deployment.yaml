{{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: cert-manager-webhook
  namespace: kube-cert-manager
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
    app: webhook
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: webhook
  updatePolicy:
    updateMode: "Off"
{{- end }}
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: webhook
  namespace: kube-cert-manager
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
    app: webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhook
  template:
    metadata:
      labels:
        app: webhook
    spec:
      serviceAccountName: cert-manager-webhook
{{- if and (hasKey .Values.certManager "nodeSelector") (.Values.certManager.nodeSelector) }}
      nodeSelector:
{{ .Values.certManager.nodeSelector | toYaml | trim | indent 8 }}
{{- else if and (not (hasKey .Values.certManager "nodeSelector")) .Values.global.discovery.clusterHasSystemNodes }}
      nodeSelector:
        node-role/system: ""
{{- end }}
{{- if and (hasKey .Values.certManager "tolerations") (.Values.certManager.tolerations) }}
      tolerations:
{{ .Values.certManager.tolerations | toYaml | trim | indent 6 }}
{{- else if and (not (hasKey .Values.certManager "tolerations")) .Values.global.discovery.clusterHasSystemNodes }}
      tolerations:
      - key: node-role/system
        effect: NoExecute
{{- end }}
      {{- if semverCompare ">=1.11" .Values.global.discovery.clusterVersion }}
      priorityClassName: cluster-low
      {{- end }}
      containers:
      - name: webhook
        image: "quay.io/jetstack/cert-manager-webhook:v0.7.0"
        imagePullPolicy: IfNotPresent
        args:
        - --v=4
        - --secure-port=6443
        - --tls-cert-file=/certs/tls.crt
        - --tls-private-key-file=/certs/tls.key
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
        volumeMounts:
        - name: certs
          mountPath: /certs
      volumes:
      - name: certs
        secret:
          secretName: cert-manager-webhook-tls
