{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: prometheus-metrics-adapter
  namespace: d8-monitoring
{{ include "helm_lib_module_labels" (list . (dict "app" "prometheus-metrics-adapter")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: prometheus-metrics-adapter
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-metrics-adapter
  namespace: d8-monitoring
{{ include "helm_lib_module_labels" (list . (dict "app" "prometheus-metrics-adapter")) | indent 2 }}
spec:
  replicas: {{ .Values.global.discovery.clusterMasterCount }}
{{- if gt (.Values.global.discovery.clusterMasterCount | int) 1 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  {{- if gt (.Values.global.discovery.clusterMasterCount | int) 2 }}
      maxUnavailable: 2
  {{- else }}
      maxUnavailable: 1
  {{- end }}
{{- end }}
  selector:
    matchLabels:
      app: prometheus-metrics-adapter
  template:
    metadata:
      annotations:
        checksum/config: {{ index (include (print $.Template.BasePath "/config-map.yaml") . | fromYaml) "data" "config.yaml" | sha256sum}}
        checksum/cert: {{ include (print $.Template.BasePath "/prometheus-metrics-adapter-cert.yaml") . | sha256sum}}
        checksum/extension-apiserver-authentication: {{ .Values.global.discovery.extensionAPIServerAuthenticationRequestheaderClientCA | sha256sum }}
      labels:
        app: prometheus-metrics-adapter
      name: prometheus-metrics-adapter
    spec:
{{- include "helm_lib_priority_class" (tuple . "cluster-high") | indent 6 }}
{{- if gt (.Values.global.discovery.clusterMasterCount | int) 1 }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: prometheus-metrics-adapter
            topologyKey: kubernetes.io/hostname
{{- end }}
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
      - operator: Exists
      serviceAccountName: prometheus-metrics-adapter
      imagePullSecrets:
      - name: deckhouse-registry
      containers:
      - name: prometheus-metrics-adapter
        image: {{ $.Values.global.modulesImages.registry }}/prometheus-metrics-adapter/k8s-prometheus-adapter:{{ $.Values.global.modulesImages.tags.prometheusMetricsAdapter.k8sPrometheusAdapter }}
        args:
        - --secure-port=6443
        - --tls-cert-file=/var/run/adapter-cert/tls.crt
        - --tls-private-key-file=/var/run/adapter-cert/tls.key
        - --logtostderr=true
        - --prometheus-url=http://127.0.0.1:8000/trickster/main/
        - --metrics-relist-interval=30s
        - --config=/etc/adapter/config.yaml
        - --client-ca-file=/var/run/apiserver-proxy-client/ca.crt
        ports:
        - containerPort: 6443
        volumeMounts:
        - mountPath: /etc/adapter
          name: prometheus-metrics-adapter-config
        - mountPath: /var/run/adapter-cert
          name: adapter-cert
          readOnly: true
        - mountPath: /var/run/apiserver-proxy-client/
          name: apiserver-proxy-client-ca
      - name: prometheus-reverse-proxy
        image: {{ $.Values.global.modulesImages.registry }}/prometheus-metrics-adapter/prometheus-reverse-proxy:{{ $.Values.global.modulesImages.tags.prometheusMetricsAdapter.prometheusReverseProxy }}
        env:
        - name: PROMETHEUS_URL
          value: "https://trickster.d8-monitoring.svc.{{ .Values.global.discovery.clusterDomain }}"
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8000
        volumeMounts:
        - mountPath: /etc/prometheus-reverse-proxy/
          name: prometheus-metrics-adapter-config
          readOnly: true
        - mountPath: /etc/ssl/prometheus-api-client-tls/
          name: prometheus-metrics-adapter-prometheus-api-client-tls
          readOnly: true
      volumes:
      - name: adapter-cert
        secret:
          secretName: prometheus-metrics-adapter-cert
      - name: prometheus-metrics-adapter-config
        configMap:
          name: prometheus-metrics-adapter-config
      - name: apiserver-proxy-client-ca
        configMap:
          name: prometheus-metrics-adapter-apiserver-proxy-client-ca
      - name: prometheus-metrics-adapter-prometheus-api-client-tls
        secret:
          secretName: prometheus-metrics-adapter-prometheus-api-client-tls
