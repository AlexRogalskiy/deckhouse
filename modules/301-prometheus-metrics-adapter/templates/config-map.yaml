---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-metrics-adapter-config
  namespace: kube-prometheus
  labels:
    heritage: antiopa
    module: {{ $.Chart.Name }}
data:
  config.yaml: |
    resourceRules:
      cpu:
        containerQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>, container!="POD"}[1m])) by (<<.GroupBy>>)
        nodeQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)
        resources:
          overrides:
            node:
              resource: node
            namespace:
              resource: namespace
            pod:
              resource: pod
        containerLabel: container
      memory:
        containerQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>, container!="POD"}) by (<<.GroupBy>>)
        nodeQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>}) by (<<.GroupBy>>)
        resources:
          overrides:
            node:
              resource: node
            namespace:
              resource: namespace
            pod:
              resource: pod
        containerLabel: container
      window: 30s
    rules:
{{ range list "1m" "5m" "15m" }}
    - seriesQuery: 'ingress_nginx_detail_requests_total{namespace!="",ingress!=""}'
      resources:
        overrides:
          namespace: {resource: namespace}
          ingress: {resource: ingress}
      name:
        matches: ".*"
        as: "rps_{{ . }}"
      metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[{{ . }}])) by (<<.GroupBy>>)'
    - seriesQuery: 'container_cpu_usage_seconds_total{namespace!="",pod!="",container!="POD"}'
      resources:
        overrides:
          namespace: {resource: namespace}
          pod: {resource: pod}
      name:
        matches: ".*"
        as: "cpu_{{ . }}"
      metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>, container!="POD"}[{{ . }}])) by (<<.GroupBy>>)'
    - seriesQuery: 'container_memory_working_set_bytes{namespace!="",pod!="",container!="POD"}'
      resources:
        overrides:
          namespace: {resource: namespace}
          pod: {resource: pod}
      name:
        matches: ".*"
        as: "memory_{{ . }}"
      metricsQuery: 'sum(avg_over_time(<<.Series>>{<<.LabelMatchers>>, container!="POD"}[{{ . }}])) by (<<.GroupBy>>)'
{{ end }}
  outgoing-nginx.conf: |
    user nginx;
    worker_processes 1;
    error_log /dev/stderr;

    events {
      worker_connections 100;
    }

    http {
      access_log off;
      resolver {{ .Values.global.discovery.clusterDNSAddress }};

      server {
        server_name 127.0.0.1;
        listen 127.0.0.1:8000;

        location / {
          set                           $backend "https://trickster.kube-prometheus.svc.{{ .Values.global.discovery.clusterDomain }}";
          proxy_pass                    $backend;
          proxy_ssl_certificate         /etc/nginx/ssl/tls.crt;
          proxy_ssl_certificate_key     /etc/nginx/ssl/tls.key;
          proxy_ssl_protocols           TLSv1.2;
          proxy_ssl_session_reuse       on;
        }
      }
    }
