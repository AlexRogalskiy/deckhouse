#!/bin/bash

# Copyright 2021 Flant CJSC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


source /deckhouse/shell_lib.sh

function __config__() {
  cat << EOF
    configVersion: v1
    beforeHelm: 5
EOF
}

function __main__() {
  if ! kubectl -n d8-monitoring get secret prometheus-metrics-adapter-cert > /dev/null 2> /dev/null ; then
    ca=$(jo CN=prometheus-metrics-adapter key="$(jo algo=ecdsa size=256)" ca="$(jo expiry=87600h)" | cfssl gencert -initca -)
    ca_cert=$(echo "$ca" | jq .cert -r)

    # Create config for cfssl gencert
    config='{"signing":{"default":{"expiry":"87600h","usages":["signing","key encipherment","requestheader-client"]}}}'

    cert=$(jo CN=prometheus-metrics-adapter hosts="$(jo -a prometheus-metrics-adapter.d8-monitoring prometheus-metrics-adapter.d8-monitoring.svc)" key="$(jo algo=ecdsa size=256)" | cfssl gencert -ca=<(echo "$ca" | jq .cert -r) -ca-key=<(echo "$ca" | jq .key -r) -config=<(echo "$config") -)
    cert_pem=$(echo "$cert" | jq .cert -r)
    cert_key=$(echo "$cert" | jq .key -r)
  else
    cert=$(kubectl -n d8-monitoring get secret prometheus-metrics-adapter-cert -o json)
    ca_cert=$(echo "$cert" | jq -r '.data."adapter-ca.crt"' | base64 -d)
    cert_pem=$(echo "$cert" | jq -r '.data."tls.crt"' | base64 -d)
    cert_key=$(echo "$cert" | jq -r '.data."tls.key"' | base64 -d)
  fi

  values::set prometheusMetricsAdapter.internal.adapterCA "$ca_cert"
  values::set prometheusMetricsAdapter.internal.adapterPem "$cert_pem"
  values::set prometheusMetricsAdapter.internal.adapterKey "$cert_key"
}

hook::run $@
