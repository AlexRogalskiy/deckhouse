diff --git a/pkg/apis/monitoring/v1/types.go b/pkg/apis/monitoring/v1/types.go
index 57663591e..0b1993e73 100644
--- a/pkg/apis/monitoring/v1/types.go
+++ b/pkg/apis/monitoring/v1/types.go
@@ -112,6 +112,9 @@ type PrometheusSpec struct {
 	// Time duration Prometheus shall retain data for. Default is '24h',
 	// and must match the regular expression `[0-9]+(ms|s|m|h|d|w|y)` (milliseconds seconds minutes hours days weeks years).
 	Retention string `json:"retention,omitempty"`
+	// [EXPERIMENTAL] Maximum number of bytes that can be stored for blocks.
+	// Units supported: KB, MB, GB, TB, PB.
+	RetentionSize string `json:"retentionSize,omitempty"`
 	// Log level for Prometheus to be configured with.
 	LogLevel string `json:"logLevel,omitempty"`
 	// Log format for Prometheus to be configured with.
diff --git a/pkg/prometheus/statefulset.go b/pkg/prometheus/statefulset.go
index 1dedb328c..5edf4a21a 100644
--- a/pkg/prometheus/statefulset.go
+++ b/pkg/prometheus/statefulset.go
@@ -356,6 +356,12 @@ func makeStatefulSetSpec(p monitoringv1.Prometheus, c *Config, ruleConfigMapName
 				promArgs = append(promArgs, "-rules.alert.resend-delay="+p.Spec.Rules.Alert.ResendDelay)
 			}
 		}
+
+		if version.Minor >= 7 {
+			if p.Spec.RetentionSize != "" {
+				promArgs = append(promArgs, "-storage.tsdb.retention.size="+p.Spec.RetentionSize)
+			}
+		}
 	default:
 		return nil, errors.Errorf("unsupported Prometheus major version %s", version)
 	}
