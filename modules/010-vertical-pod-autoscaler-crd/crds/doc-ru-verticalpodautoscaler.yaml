spec:
  version: v1beta1
  versions:
  - name: v1beta1
    served: false
    storage: false
  - name: v1beta2
    served: true
    storage: true
  - name: v1
    served: true
    storage: false
  validation:
    # openAPIV3Schema is the schema for validating custom objects.
    openAPIV3Schema:
      properties:
        spec:
          properties:
            targetRef:
              description: |
                Указывает на некий контроллер-объект Kubernetes, отвечающий за управление pod'ами.

                Поддерживаются все распространенные типы контроллеров: `Deployment`, `StatefulSet`, `DaemonSet`, `CronJobs` а также любые кастомные типы, реализующие подресурс scale.
              properties:
                apiVersion:
                  description: API-версия объекта.
                kind:
                  description: Тип объекта.
                name:
                  description: Имя объекта.
            updatePolicy:
              properties:
                updateMode:
                  description: |
                    Режим работы VPA-контроллера
                    - `Auto` — В данный момент Auto и Recreate режимы работы делают одно и то же. Однако, когда в Kubernetes появится [pod inplace resource update](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/autoscaling/vertical-pod-autoscaler.md#in-place-updates), данный режим будет делать именно его.
                    - `Recreate` — Разрешает VPA изменять ресурсы у запущенных Pod'ов, т.е. рестартить их при работе. В случае работы одного Pod'а (replicas: 1) — это приведет к недоступности сервиса, на время рестарта. В данном режиме VPA не пересоздает Pod'ы, которые были созданы без контроллера.
                    - `Initial` — Разрешает VPA изменять ресурсы Pod'ов, но только при их создании (не во время работы).
                    - `Off` — Запрещает VPA автоматическое изменение ресурсов. Autoscaler подсчитывает рекомендации и хранит их в поле status объекта VPA. Посмотреть, какие ресурсы рекомендует поставить VPA можно с помощью `kubectl describe vpa <vpa-name>`.
            resourcePolicy:
              properties:
                containerPolicies:
                  description: 'Политики VPA для конкретных контейнеров.'
                  items:
                    properties:
                      containerName:
                        description: 'Имя контейнера.'
                      mode:
                        description: 'Включает или отключает работу автоскейлинга.'
                      minAllowed:
                        description: 'Минимальная граница `cpu` и `memory`.'
                      maxAllowed:
                        description: 'Максимальная граница `cpu` и `memory`.'
