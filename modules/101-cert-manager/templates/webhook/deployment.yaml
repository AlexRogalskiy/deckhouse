{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: webhook
  namespace: d8-cert-manager
{{ include "helm_lib_module_labels" (list . (dict "app" "webhook")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: webhook
  updatePolicy:
    updateMode: "Initial"
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook
  namespace: d8-cert-manager
{{ include "helm_lib_module_labels" (list . (dict "app" "webhook")) | indent 2 }}
spec:
  replicas: {{ .Values.global.discovery.clusterMasterCount }}
{{- if gt (.Values.global.discovery.clusterMasterCount | int) 1 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  {{- if gt (.Values.global.discovery.clusterMasterCount | int) 2 }}
      maxUnavailable: 2
  {{- else }}
      maxUnavailable: 1
  {{- end }}
{{- end }}
  selector:
    matchLabels:
      app: webhook
  template:
    metadata:
      labels:
        app: webhook
    spec:
      serviceAccountName: webhook
{{- include "helm_lib_priority_class" (tuple . "cluster-high") | indent 6 }}
{{- if gt (.Values.global.discovery.clusterMasterCount | int) 1 }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: webhook
            topologyKey: kubernetes.io/hostname
{{- end }}
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
      - operator: Exists
      imagePullSecrets:
      - name: deckhouse-registry
      containers:
      - name: webhook
        image: {{ $.Values.global.modulesImages.registry }}/cert-manager/cert-manager-webhook:{{ $.Values.global.modulesImages.tags.certManager.certManagerWebhook }}
        args:
        - --v=3
        - --secure-port=6443
        - --tls-cert-file=/certs/tls.crt
        - --tls-private-key-file=/certs/tls.key
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
        volumeMounts:
        - name: certs
          mountPath: /certs
      volumes:
      - name: certs
        secret:
          secretName: cert-manager-webhook-tls
