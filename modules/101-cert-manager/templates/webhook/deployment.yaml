{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: webhook
  namespace: d8-cert-manager
{{ include "helm_lib_module_labels" (list . (dict "app" "webhook" "workload-resource-policy.deckhouse.io" "master")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: webhook
  updatePolicy:
    updateMode: "Initial"
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook
  namespace: d8-cert-manager
{{ include "helm_lib_module_labels" (list . (dict "app" "webhook")) | indent 2 }}
spec:
{{- include "helm_lib_deployment_on_master_strategy_and_replicas_for_ha" . | indent 2 }}
  selector:
    matchLabels:
      app: webhook
  template:
    metadata:
      labels:
        app: webhook
    spec:
      serviceAccountName: webhook
{{- include "helm_lib_priority_class" (tuple . "cluster-high") | indent 6 }}
{{- include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app" "webhook")) | indent 6 }}
{{- include "helm_lib_node_selector" (tuple . "master") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "any-node") | indent 6 }}
      imagePullSecrets:
      - name: deckhouse-registry
      containers:
      - name: webhook
        image: {{ $.Values.global.modulesImages.registry }}/cert-manager/cert-manager-webhook:{{ $.Values.global.modulesImages.tags.certManager.certManagerWebhook }}
        args:
        - --v=3
        - --secure-port=6443
        - --tls-cert-file=/certs/tls.crt
        - --tls-private-key-file=/certs/tls.key
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: certs
          mountPath: /certs
      volumes:
      - name: certs
        secret:
          secretName: cert-manager-webhook-tls
