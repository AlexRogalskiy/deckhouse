{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: cert-manager
  namespace: d8-cert-manager
{{ include "helm_lib_module_labels" (list . (dict "app" "cert-manager")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: cert-manager
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager
  namespace: d8-cert-manager
{{ include "helm_lib_module_labels" (list . (dict "app" "cert-manager")) | indent 2 }}
spec:
  replicas: {{ include "helm_lib_is_ha_to_value" (list . 2 1) }}
  {{- if (include "helm_lib_ha_enabled" .) }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  {{- end }}
  selector:
    matchLabels:
      app: cert-manager
  template:
    metadata:
      labels:
        app: cert-manager
    spec:
      strategy:
        type: Recreate
{{- include "helm_lib_node_selector" (tuple . "system") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "system") | indent 6 }}
{{- include "helm_lib_priority_class" (tuple . "cluster-low") | indent 6 }}
      serviceAccountName: cert-manager
      {{- if (include "helm_lib_ha_enabled" .) }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: cert-manager
            topologyKey: kubernetes.io/hostname
      {{- end }}
      imagePullSecrets:
      - name: deckhouse-registry
      containers:
        - name: cert-manager
          image: {{ $.Values.global.modulesImages.registry }}/cert-manager/cert-manager-controller:{{ $.Values.global.modulesImages.tags.certManager.certManagerController }}
          args:
          - --v=1
          - --cluster-resource-namespace=$(POD_NAMESPACE)
          - --leader-election-namespace=$(POD_NAMESPACE)
          - --webhook-namespace=$(POD_NAMESPACE)
          - --webhook-ca-secret=cert-manager-webhook-ca
          - --webhook-serving-secret=cert-manager-webhook-tls
          - --webhook-dns-names=cert-manager-webhook,cert-manager-webhook.$(POD_NAMESPACE),cert-manager-webhook.$(POD_NAMESPACE).svc
          - --acme-http01-solver-resource-limits-cpu=0
          - --acme-http01-solver-resource-request-cpu=0
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        - name: kube-rbac-proxy
          image: {{ $.Values.global.modulesImages.registry }}/common/kube-rbac-proxy:{{ $.Values.global.modulesImages.tags.common.kubeRbacProxy }}
          args:
          - "--secure-listen-address=0.0.0.0:9403"
          - "--client-ca-file=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
          - "--v=2"
          - "--logtostderr=true"
          - "--stale-cache-interval=1h30m"
          env:
          - name: KUBE_RBAC_PROXY_CONFIG
            value: |
              upstreams:
              - upstream: http://127.0.0.1:9402/metrics
                path: /metrics
                authorization:
                  resourceAttributes:
                    namespace: d8-cert-manager
                    apiGroup: apps
                    apiVersion: v1
                    resource: deployments
                    subresource: prometheus-metrics
                    name: cert-manager
          ports:
          - containerPort: 9403
            name: https-metrics
