apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: openstackinstanceclasses.deckhouse.io
  labels:
    heritage: deckhouse
    module: cloud-provider-openstack
spec:
  group: deckhouse.io
  preserveUnknownFields: false
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema: &schema
        openAPIV3Schema:
          type: object
          description: |
            Параметры группы OpenStack servers, которые будeт использовать `machine-controller-manager` (модуль [node-manager](https://deckhouse.io/ru/documentation/v1/modules/040-node-manager/)).

            На этот ресурс ссылается ресурс `CloudInstanceClass` модуля `node-manager`.
          required:
            - spec
          properties:
            spec:
              type: object
              required:
                - flavorName
              properties:
                flavorName:
                  description: |
                    Тип заказываемых виртуальных машин.

                    Получить список всех доступных flavor: `openstack flavor list`.
                  example: m1.medium
                  type: string
                imageName:
                  description: |
                    Имя образа виртуальной машины, который будет использоваться для инстанса.

                    Получить список всех доступных образов: `openstack image list`.

                    **Внимание!** Сейчас поддерживается и тестируется только `Ubuntu 18.04`, `Ubuntu 20.04`, `Centos 7`.

                    **По умолчанию:** значение либо из `OpenStackCloudDiscoveryData`, либо из настроек `instances.imageName`.
                rootDiskSize:
                  description: |
                    Размер root-диска. Значение указывается в гигабайтах.

                    Если параметр не указан, то для инстанса используется локальный диск с размером указанным в flavor.
                    Если параметр присутствует, то инстанс будет использовать заказанный OpenStack Cinder volume (с указанным размером и стандартным для кластера типом) как root-диск.

                    > Если в cloud-провайдере существует несколько типов дисков, то для выбора конкретного типа диска виртуальной машины у используемого образа можно установить тип диска по умолчанию. Для этого необходимо в метаданных образа указать имя определённого типа диска.
                    > Может понадобиться создать свой собственный image в OpenStack, как это сделать описано в разделе ["Загрузка image в OpenStack"](https://deckhouse.io/ru/documentation/v1/modules/030-cloud-provider-openstack/faq.html#как-загрузить-image-в-openstack)
                    >
                    > ```shell
                    > openstack volume type list
                    > openstack image set ubuntu-18-04-cloud-amd64 --property cinder_img_volume_type=VOLUME_NAME
                    > ```
                mainNetwork:
                  description: |
                    Путь до сети, которая будет подключена к виртуальной машине, как основная (шлюз по умолчанию).

                    **По умолчанию:** значение из `OpenStackCloudDiscoveryData`.
                additionalNetworks:
                  description: |
                    Список сетей, которые будут подключены к инстансу.

                    **По умолчанию:** значение из `OpenStackCloudDiscoveryData`.
                additionalSecurityGroups:
                  description: |
                    Дополнительный список security groups, которые будут добавлены на заказанные инстансы соответствующего `OpenStackInstanceClass` в дополнение к указанным в конфигурации cloud провайдера.
                    Используется для задания правил firewall по отношению к заказываемым инстансам.

                    `SecurityGroups` могут не поддерживаться облачным провайдером.
                additionalTags:
                  description: |
                    Дополнительные теги, которые будут присвоены созданным инстансам в дополнение к указанным в конфигурации cloud-провайдера.

                    Пример:
                    ```yaml
                    project: cms-production
                    severity: critical
                    ```
    - name: v1
      served: true
      storage: false
      schema: *schema
