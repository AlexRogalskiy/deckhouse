{{- define "vsphere_cloud_config" }}
{{/* For Kubernetes 1.16 we use old CCM, requiring old configuration file format. */}}
{{- if semverCompare "=1.16" .Values.global.discovery.kubernetesVersion }}
[Global]
user = {{ .Values.cloudProviderVsphere.internal.username | required ".Values.cloudProviderVsphere.internal.username is required" | quote }}
password = {{ .Values.cloudProviderVsphere.internal.password | required ".Values.cloudProviderVsphere.internal.password is required" | quote }}
insecure-flag = {{ if .Values.cloudProviderVsphere.internal.insecure }}1{{ else }}0{{ end }}

[VirtualCenter {{ .Values.cloudProviderVsphere.internal.server | required ".Values.cloudProviderVsphere.internal.server is required" | quote }}]
datacenters = {{ .Values.cloudProviderVsphere.internal.datacenter | required ".Values.cloudProviderVsphere.internal.datacenter is required" | quote }}
  {{- if not (empty .Values.cloudProviderVsphere.internal.externalNetworkNames) }}
external-network-names = {{ join "," .Values.cloudProviderVsphere.internal.externalNetworkNames }}
  {{- end }}
  {{- if not (empty .Values.cloudProviderVsphere.internal.internalNetworkNames) }}
internal-network-names = {{ join "," .Values.cloudProviderVsphere.internal.internalNetworkNames }}
  {{- end }}
vm-folder-path = {{ .Values.cloudProviderVsphere.internal.vmFolderPath | required ".Values.cloudProviderVsphere.internal.vmFolderPath is required" }}

[Labels]
region = {{ .Values.cloudProviderVsphere.internal.regionTagCategory | required ".Values.cloudProviderVsphere.internal.regionTagCategory is required" | quote }}
zone = {{ .Values.cloudProviderVsphere.internal.zoneTagCategory | required ".Values.cloudProviderVsphere.internal.zoneTagCategory is required" | quote }}

{{- else }}
global:
  user: {{ .Values.cloudProviderVsphere.internal.username | required ".Values.cloudProviderVsphere.internal.username is required" | quote }}
  password: {{ .Values.cloudProviderVsphere.internal.password | required ".Values.cloudProviderVsphere.internal.password is required" | quote }}
  insecureFlag: {{ .Values.cloudProviderVsphere.internal.insecure }}

vcenter:
  main:
    server: {{ .Values.cloudProviderVsphere.internal.server | required ".Values.cloudProviderVsphere.internal.server is required" | quote }}
    datacenters:
      - {{ .Values.cloudProviderVsphere.internal.datacenter | required ".Values.cloudProviderVsphere.internal.datacenter is required" | quote }}
    {{- if not (empty .Values.cloudProviderVsphere.internal.externalNetworkNames) }}
    externalNetworkNames:
    {{- .Values.cloudProviderVsphere.internal.externalNetworkNames | toYaml | nindent 6 }}
    {{- end }}
    {{- if not (empty .Values.cloudProviderVsphere.internal.internalNetworkNames) }}
    internalNetworkNames:
    {{- .Values.cloudProviderVsphere.internal.internalNetworkNames | toYaml | nindent 6 }}
    {{- end }}
    vmFolderPath: {{ .Values.cloudProviderVsphere.internal.vmFolderPath | required ".Values.cloudProviderVsphere.internal.vmFolderPath is required" }}

labels:
  region: {{ .Values.cloudProviderVsphere.internal.regionTagCategory | required ".Values.cloudProviderVsphere.internal.regionTagCategory is required" | quote }}
  zone: {{ .Values.cloudProviderVsphere.internal.zoneTagCategory | required ".Values.cloudProviderVsphere.internal.zoneTagCategory is required" | quote }}

{{- end }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: cloud-controller-manager
  namespace: d8-cloud-provider-vsphere
{{ include "helm_lib_module_labels" (list . (dict "app" "cloud-controller-manager")) | indent 2 }}
type: Opaque
data:
  cloud-config: {{ include "vsphere_cloud_config" . | b64enc | quote }}
