global:
  clusterName: "mycluster"
  highAvailability:
    __ConstantChoices__: [true, false]
  enabledModules: ["operator-prometheus-crd","cert-manager", "priority-class"]
  modules:
    publicDomainTemplate: "%s.example.com"
    placement:
      customTolerationKeys:
      - "test-1"
      - "test-2/master"
    https:
      __ConstantChoices__:
        - certManager:
            clusterIssuerName: letsencrypt
          mode: CertManager
        - mode: Disabled
        - mode: OnlyInURI
        - mode: CustomCertificate
          customCertificate:
            secretName: plainstring
  modulesImages:
    registry: registry.deckhouse.io
    registryDockercfg: registry.example.com
    tags:
      common:
        kubeRbacProxy: hashstring
      istio:
        apiProxy: hashstring
        metadataExporter: hashstring
        metadataDiscovery: hashstring
        kiali: hashstring
        operatorV1x8x1: hashstring
        operatorV1x8x2: hashstring
        pilotV1x8x1: hashstring
        pilotV1x8x2: hashstring
        proxyv2V1x8x1: hashstring
        proxyv2V1x8x2: hashstring
  discovery:
    clusterDomain: my.cluster
    clusterControlPlaneIsHighlyAvailable:
      __ConstantChoices__: [true, false]
    d8SpecificNodeCountByRole:
      system:
        __ConstantChoices__: [1, 3]
    kubernetesVersion: "1.19"
istio:
    multicluster:
      enabled:
        __ConstantChoices__: [true, false]
    federation:
      enabled:
        __ConstantChoices__: [true, false]
    tlsMode:
      __ConstantChoices__:
      - Mutual
      - MutualPermissive
      - "Off"
    internal:
        applicationNamespaces:
          __ConstantChoices__:
          - []
          - [default, foo, bar]
        ca:
            cert: mycert
            key: mykey
            root: myroot
            chain: mychain
        globalRevision: v1x8x1
        operatorRevisionsToInstall:
          __ConstantChoices__:
          -  [v1x8x1, v1x8x2]
          -  []
        revisionsToInstall:
          __ConstantChoices__:
          -  [v1x8x1, v1x8x2]
          -  []
        federations:
          - ingressGateways:
              - address: 1.1.1.1
                port: 32224
            name: qqq-local
            publicServices:
              - hostname: xxx
                port: 123
            spiffeEndpoint: https://istio.examaple.com/federation/spiffe-bundle-endpoint
            trustDomain: qqq.local
        multiclusters:
          - spiffeEndpoint: https://istio.example.com/federation/spiffe-bundle-endpoint
            name: zzz
            apiHost: zzz.example.com
        remoteAuthnKeypair:
          pub: ccc
          priv: bbb
        apiProxyListenCertificate:
          cert: ddd
          key: eee
        remotePublicMetadata:
          uuid0:
            authnKeyPub: akp0
            rootCA: aaa
          uuid1:
            authnKeyPub: akp1
            rootCA: bbb
    sidecar:
      includeOutboundIPRanges: ["*"]
      excludeOutboundIPRanges: ["1.2.3.4"]
      excludeInboundPorts: ["1", "2"]
      excludeOutboundPorts: ["3", "4"]
