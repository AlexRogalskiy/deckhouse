{{- if or .Values.istio.federation.enabled .Values.istio.multicluster.enabled }}
  {{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1beta2
kind: VerticalPodAutoscaler
metadata:
  name: metadata-exporter
  namespace: d8-{{ $.Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" "metadata-exporter" "workload-resource-policy.deckhouse.io" "every-node")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: metadata-exporter
  updatePolicy:
    updateMode: "Auto"
  {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metadata-exporter
  namespace: d8-{{ $.Chart.Name }}
{{ include "helm_lib_module_labels" (list . (dict "app" "metadata-exporter")) | indent 2 }}
spec:
{{- include "helm_lib_deployment_strategy_and_replicas_for_ha" . | indent 2 }}
  selector:
    matchLabels:
      app: metadata-exporter
  template:
    metadata:
      labels:
        app: metadata-exporter
    spec:
{{- include "helm_lib_node_selector" (tuple . "system") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "system") | indent 6 }}
{{- include "helm_lib_priority_class" (tuple . "cluster-low") | indent 6 }}
{{- include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app" "metadata-exporter")) | indent 6 }}
{{- include "helm_lib_module_pod_security_context_run_as_user_nobody" . | indent 6 }}
      serviceAccountName: metadata-exporter
      imagePullSecrets:
      - name: deckhouse-registry
      containers:
      - name: metadata-exporter
{{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | indent 8 }}
        image: {{ $.Values.global.modulesImages.registry }}:{{ $.Values.global.modulesImages.tags.istio.metadataExporter }}
        imagePullPolicy: IfNotPresent
        env:
        - name: CLUSTER_UUID
          value: {{ .Values.global.discovery.clusterUUID }}
  {{- if .Values.istio.federation.enabled }}
        - name: FEDERATION_ENABLED
          value: "true"
  {{- end }}
  {{- if .Values.istio.multicluster.enabled }}
        - name: MULTICLUSTER_ENABLED
          value: "true"
        - name: MULTICLUSTER_API_HOST
          value: {{ include "helm_lib_module_public_domain" (list . "istio-api-proxy") }}
  {{- end }}
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
        resources:
          requests:
{{- include "helm_lib_module_ephemeral_storage_logs_with_extra" 10 | indent 12 }}
        volumeMounts:
        - name: istio-ca-root-cert
          mountPath: /certs/
        - name: authn-keypair
          mountPath: /keys/pub.pem
          subPath: pub.pem
        - name: remote-public-metadata
          mountPath: /remote/
        - name: metadata
          mountPath: /metadata/
  {{- if .Values.istio.federation.enabled }}
      - name: metadata-discovery
{{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | indent 8 }}
        image: {{ $.Values.global.modulesImages.registry }}:{{ $.Values.global.modulesImages.tags.istio.metadataDiscovery }}
        imagePullPolicy: IfNotPresent
        env:
        - name: DEBUG_UNIX_SOCKET
          value: /tmp/shell-operator-debug.socket
        - name: CLUSTER_DOMAIN
          value: {{ $.Values.global.discovery.clusterDomain | quote }}
        - name: INLET
          value: {{ $.Values.istio.federation.ingressGateway.inlet }}
        resources:
          requests:
{{- include "helm_lib_module_ephemeral_storage_logs_with_extra" 10 | indent 12 }}
        volumeMounts:
        - name: metadata
          mountPath: /metadata/
        - name: tmp
          mountPath: /tmp/
  {{- end }}
      volumes:
      - name: istio-ca-root-cert
        configMap:
          name: istio-ca-root-cert
      - name: authn-keypair
        secret:
          defaultMode: 420
          optional: true
          secretName: d8-remote-authn-keypair
      - name: remote-public-metadata
        secret:
          defaultMode: 420
          secretName: d8-remote-clusters-public-metadata
      - name: metadata
        emptyDir: {}
      - name: tmp
        emptyDir: {}
{{- end }}
