dimg_group do

  artifact do
    docker.from 'golang:1.8'

    git do
      add '/' do
        to '/go/src/github.com/deckhouse/deckhouse'
        exclude_paths 'playground', 'play-registry'
        # go get будет вызывать только если изменился этот файл!
        stage_dependencies.install 'go-get-run'
        # **/*.go срабатывает от изменений в modules
        # **.go и *.go не срабатывают от изменений *.go во вложенных директориях
        # Пока вложенные нужно придётся добавлять отдельно: stage_dependencies.build_artifact 'play-values/*.go'
        stage_dependencies.build_artifact '*.go'
      end
    end

    shell.install do
      run '(go get -v -d github.com/deckhouse/deckhouse/... ; true)'
    end

    shell.build_artifact do
      run 'cd /go/src/github.com/deckhouse/deckhouse'
      run 'go build'
    end

    export '/go/src/github.com/deckhouse/deckhouse/antiopa' do
      to '/antiopa/antiopa'
      before 'setup'
    end
  end

  dimg do
    docker.from 'ubuntu:16.04'

    git do
      add '/modules' do
        to '/antiopa/modules'
      end
      add '/.kube_api' do
        to '/antiopa/.kube_api'
      end
    end

    # Первой попыткой было отказаться от установки curl в финальном образе, но артефакты слишком связаны
    # https://github.com/flant/dapp/issues/404
    # ca-certificates ставятся явно, чтобы про них не забыть потом, т.к. нужны для работы helm.
    shell.before_install do
      run 'apt-get update -y'
      run 'apt-get install -y curl ca-certificates'
      run 'apt-get install -y makepasswd apache2-utils python3'
      run 'curl -Ls https://storage.googleapis.com/kubernetes-release/release/v1.7.7/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl'
      run 'chmod +x /usr/local/bin/kubectl'

      run 'curl -Ls https://storage.googleapis.com/kubernetes-helm/helm-v2.6.1-linux-amd64.tar.gz | tar zx linux-amd64/helm -O > /usr/local/bin/helm'
      run 'chmod +x /usr/local/bin/helm'
    end
  end
end
