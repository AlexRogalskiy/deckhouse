dimg: ~
from: alpine:3.9
git:
- add: /
  to: /antiopa
  includePaths:
  - modules
  - global-hooks
  - shell_lib.sh
  - shell_lib
  - jq_lib
  - helm_lib
  excludePaths:
  - modules/*/images
  - modules/*/docs
  - modules/*/README.md
import:
- artifact: antiopa
  add: /antiopa/antiopa
  to: /antiopa/antiopa
  before: setup
ansible:
  beforeInstall:
  - apk: update_cache=yes

  # Нам нужен bash, на нем все хуки
  - apk: name=bash

  # Зависимости хуков
  - apk: name=jq
  - apk: name=curl
  - apk: name=makepasswd
  - apk: name=apache2-utils
  - apk: name=bc
  - apk: name=grep

  # Зависимости хуков (из edge/testing)
  - apk: name=jo repository=http://nl.alpinelinux.org/alpine/edge/testing/ update_cache=yes
  - apk: name=cfssl repository=http://nl.alpinelinux.org/alpine/edge/testing/

  # Ставим kubectl
  - name: Install kubectl
    get_url:
      url: https://storage.googleapis.com/kubernetes-release/release/v1.11.9/bin/linux/amd64/kubectl
      dest: /usr/local/bin/kubectl
      mode: +x

  - name: Install kube-resource-converter
    get_url:
      url: https://github.com/zuzzas/kube-resource-converter/releases/download/0.1/kube-resource-unit-converter
      dest: /usr/local/bin/kube-resource-unit-converter
      mode: +x

  # Ставим semver
  - name: Install semver
    unarchive:
      extra_opts:
      - semver-tool-2.1.0/src
      - --strip-components=2
      src: https://github.com/fsaintjacques/semver-tool/archive/2.1.0.tar.gz
      remote_src: yes
      dest: /usr/local/bin

  # ca-certificates нужны для работы helm
  - apk: name=ca-certificates

  # Ставим helm
  - name: Install helm
    unarchive:
      extra_opts:
      - linux-amd64/helm
      - --strip-components=1
      src: https://storage.googleapis.com/kubernetes-helm/helm-v2.14.1-linux-amd64.tar.gz
      remote_src: yes
      dest: /usr/local/bin
  - raw: helm init --client-only

  # Чистим кеш
  - raw: rm -rf /var/cache/apk/*

  setup:
  - name: "Add modules images tags.json"
    copy:
      content: |
{{ .Files.Get "modules/images_tags.json" | indent 8 }}
      dest: /antiopa/modules/images_tags.json
docker:
  ENV:
    MODULES_DIR: /antiopa/modules
    GLOBAL_HOOKS_DIR: /antiopa/global-hooks
---
artifact: antiopa
from: golang:1.12-alpine3.9
git:
- add: /antiopa
  to: /antiopa
  excludePaths:
  - development
  stageDependencies:
    install:
    - go.mod
    - go.sum
    buildArtifact:
    - "antiopa/**/*.go"
    - go-build.sh
ansible:
  beforeInstall:
  - apk: name=git update_cache=yes
  - command: rm -rf /var/cache/apk/*

  install:
  - command: go get -v -d -t ./...
    args:
      chdir: /antiopa

  buildArtifact:
  - command: /antiopa/go-build.sh pipeline-{{ env "CI_PIPELINE_ID" }}
    args:
      chdir: /antiopa
