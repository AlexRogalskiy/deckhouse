kind: GCPClusterConfiguration
apiVersions:
- apiVersion: deckhouse.io/v1
  openAPISpec:
    type: object
    additionalProperties: false
    required: [apiVersion, kind, layout, provider, masterNodeGroup, sshKey]
    properties:
      apiVersion:
        type: string
        enum: [deckhouse.io/v1, deckhouse.io/v1alpha1]
      kind:
        type: string
        enum: [GCPClusterConfiguration]
      subnetworkCIDR:
        type: string
        pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$'
        description: Подсеть, в которой будут работать узлы кластера.
      sshKey:
        type: string
        description: Публичный ключ для доступа на узлы под пользователем `user`.
      labels:
        type: object
        description: |
          Список лейблов, которые будут прикреплены ко всем ресурсам (которые это поддерживают) кластера.

          Если поменять теги в рабочем кластере, то после конвержа необходимо пересоздать все машины, чтобы теги применились.

          Подробнее про лейблы можно прочитать в [официальной документации](https://cloud.google.com/resource-manager/docs/creating-managing-labels).

          Формат — `key: value`.
        additionalProperties:
          type: string
      peeredVPCs:
        type: array
        description: Список GCP VPC networks, с которыми будет объединена сеть кластера. Сервис-аккаунт должен иметь доступ ко всем перечисленным VPC. Если доступа нет, то пиринг необходимо [настраивать вручную](https://cloud.google.com/vpc/docs/using-vpc-peering#gcloud).
        items:
          type: string
      masterNodeGroup:
        type: object
        required: [replicas, instanceClass]
        description: Спецификация для описания NodeGroup master-узлов.
        properties:
          replicas:
            type: integer
            minimum: 1
            description: Сколько master-узлов создать.
          additionalNetworkTags:
            type: array
            items:
              type: string
          additionalLabels:
            type: object
            additionalProperties:
              type: string
          instanceClass:
            type: object
            required: [machineType, image]
            description: Частичное содержимое полей [GCPInstanceClass](https://deckhouse.io/ru/documentation/v1/modules/030-cloud-provider-gcp/cr.html#gcpinstanceclass).
            properties:
              machineType:
                type: string
                example: n1-standard-4
                description: |
                  Тип заказываемых инстансов.

                  **Внимание!** Следует убедиться, что указанный тип есть во всех зонах, указанных в `zones`.

                  GCP [позволяет указывать](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) нестандартное количество CPU и RAM, например: `custom-8-40960` или `n2-custom-8-40960`.
              image:
                type: string
                example: projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190911
                description: |
                  Образ, который будет использоваться в заказанных инстансах.

                  Список образов можно найти в [документации](https://cloud.google.com/compute/docs/images#ubuntu).

                  **Внимание!** Сейчас поддерживается и тестируется только `Ubuntu 18.04`, `Ubuntu 20.04`, `Centos 7`.
              diskSizeGb:
                description: Размер root-диска. Значение указывается в `ГиБ`.
                example: 20
                type: integer
              disableExternalIP:
                type: boolean
                enum: [true, false]
                x-doc-default: true
                description: |
                  Запретить ли назначение внешнего IP для инстанса.

                  Параметр доступен только для layout `Standard`.

                  `true` — узлы не имеют публичных адресов, доступ в интернет осуществляется через `CloudNAT`.

                  `false` — для узлов создаются статические публичные адреса, они же используются для One-to-one NAT.
          zones:
            type: array
            description: Cписок зон, в которых допустимо создавать статичные-узлы.
            items:
              type: string
            minItems: 1
            uniqueItems: true
      nodeGroups:
        description: Массив дополнительных NodeGroup для создания статичных узлов (например, для выделенных фронтов или шлюзов).
        type: array
        items:
          type: object
          required: [name, replicas, instanceClass]
          properties:
            name:
              type: string
              description: Имя NodeGroup, будет использоваться для генерации имен узлов.
            replicas:
              type: integer
              description: Количество узлов.
            nodeTemplate:
              type: object
              description: Настройки Node-объектов в Kubernetes, которые будут добавлены после регистрации узлов.
              properties:
                labels:
                  type: object
                  description: Аналогично стандартному [полю](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#objectmeta-v1-meta) `metadata.labels`.
                  additionalProperties:
                    type: string
                annotations:
                  type: object
                  description: Аналогично стандартному [полю](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#objectmeta-v1-meta) `metadata.annotations`.
                  additionalProperties:
                    type: string
                taints:
                  type: array
                  description: Аналогично полю `.spec.taints` из объекта [Node](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#taint-v1-core). **Внимание!** Доступны только поля `effect`, `key`, `values`.
                  items:
                    type: object
                    properties:
                      effect:
                        type: string
                        enum: [NoSchedule, PreferNoSchedule, NoExecute]
                      key:
                        type: string
                      value:
                        type: string
            additionalNetworkTags:
              type: array
              items:
                type: string
            additionalLabels:
              type: object
              additionalProperties:
                type: string
            instanceClass:
              required: [machineType, image]
              type: object
              description: Частичное содержимое полей [GCPInstanceClass](https://deckhouse.io/ru/documentation/v1/modules/030-cloud-provider-gcp/cr.html#gcpinstanceclass).
              properties:
                machineType:
                  type: string
                  description: |
                    Тип заказываемых инстансов.

                    **Внимание!** Следует убедиться, что указанный тип есть во всех зонах, указанных в `zones`.

                    GCP [позволяет указывать](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) нестандартное количество CPU и RAM, например: `custom-8-40960` или `n2-custom-8-40960`.
                image:
                  type: string
                  description: |
                    Образ, который будет использоваться в заказанных инстансах.

                    Список образов можно найти в [документации](https://cloud.google.com/compute/docs/images#ubuntu).

                    **Внимание!** Сейчас поддерживается и тестируется только `Ubuntu 18.04`, `Ubuntu 20.04`, `Centos 7`.
                diskSizeGb:
                  description: Размер root-диска. Значение указывается в `ГиБ`.
                  example: 20
                  type: integer
                disableExternalIP:
                  type: boolean
                  enum: [true, false]
                  x-doc-default: true
                  description: |
                    Запретить ли назначение внешнего IP для инстанса.

                    Параметр доступен только для layout `Standard`.

                    `true` — узлы не имеют публичных адресов, доступ в интернет осуществляется через `CloudNAT`.

                    `false` — для узлов создаются статические публичные адреса, они же используются для One-to-one NAT.
            zones:
              type: array
              description: Список зон, в которых допустимо создавать статичные-узлы.
              items:
                type: string
              minItems: 1
              uniqueItems: true
      layout:
        type: string
        enum: [Standard, WithoutNAT]
        description: |
          Название схемы размещения.

          `Standard` — включает режим [Cloud NAT](https://cloud.google.com/nat/docs/overview#benefits). [Подробнее...](https://deckhouse.io/ru/documentation/v1/modules/030-cloud-provider-gcp/layouts.html#standard).

          `WithoutNAT` — выделенная VPN создается для кластера. Все узлы имеют публичные IP адреса. [Подробнее...](https://deckhouse.io/ru/documentation/v1/modules/030-cloud-provider-gcp/layouts.html#withoutnat).
      standard:
        type: object
        description: Настройки для схемы размещения `Standard`.
        additionalProperties: false
        required: []
        properties:
          cloudNATAddresses:
            type: array
            description: Список имен публичных статических IP-адресов для `Cloud NAT`.
            items:
              type: string
      withoutNAT:
        description: Настройки для схемы размещения `WithoutNAT`.
        type: object
        additionalProperties: false
        required: []
        properties: {}
      provider:
        type: object
        additionalProperties: false
        description: Параметры подключения к API GCP.
        required: [region, serviceAccountJSON]
        properties:
          region:
            type: string
            description: Имя региона в котором будут заказываться инстансы.
          serviceAccountJSON:
            type: string
            description: Значение `service account key` в JSON-формате.
      zones:
        type: array
        description: Список зон, в которых допустимо создавать статичные-узлы.
        items:
          type: string
        minItems: 1
        uniqueItems: true
