apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: nodegroups.deckhouse.io
  labels:
    heritage: deckhouse
    module: node-manager
spec:
  group: deckhouse.io
  scope: Cluster
  preserveUnknownFields: false
  names:
    plural: nodegroups
    singular: nodegroup
    kind: NodeGroup
    shortNames:
      - ng
  versions:
    - name: v1alpha1
      served: true
      storage: true
      additionalPrinterColumns: &additionalPrinterColumns
        - name: Type
          type: string
          description: "Type of nodes in group"
          jsonPath: .spec.nodeType
        - name: Ready
          type: integer
          description: "Number of ready Kubernetes nodes in the group."
          jsonPath: .status.ready
        - name: Nodes
          type: integer
          description: "Number of Kubernetes nodes (in any state) in the group."
          jsonPath: .status.nodes
        - name: UpToDate
          type: integer
          description: "Number of up-to-date nodes in the group."
          jsonPath: .status.upToDate
        - name: Instances
          type: integer
          description: "Number of instances (in any state) in the group."
          jsonPath: .status.instances
        - name: Desired
          type: integer
          description: "Number of desired instances in the group."
          jsonPath: .status.desired
        - name: Min
          type: integer
          description: "Minimal amount of instances in the group."
          jsonPath: .status.min
        - name: Max
          type: integer
          description: "Maximum amount of instances in the group."
          jsonPath: .status.max
        - name: Standby
          type: integer
          description: "Number of overprovisioned instances in the group."
          jsonPath: .status.standby
        - name: Status
          type: string
          description: "Status message about group handling."
          jsonPath: .status.conditionSummary.statusMessage
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: |
            Описывает runtime параметры группы узлов.
          required:
            - spec
          properties:
            status: &status
              type: object
              required: []
              properties:
                ready:
                  type: integer
                  description: "Number of ready Kubernetes nodes in the group."
                nodes:
                  type: integer
                  description: "Number of Kubernetes nodes (in any state) in the group."
                instances:
                  type: integer
                  description: "Number of instances (in any state) in the group."
                desired:
                  type: integer
                  description: "Number of desired machines in the group."
                min:
                  type: integer
                  description: "Minimal amount of instances in the group."
                max:
                  type: integer
                  description: "Maximum amount of instances in the group."
                upToDate:
                  type: integer
                  description: "Number of up-to-date nodes in the group."
                standby:
                  type: integer
                  description: "Number of overprovisioned instances in the group."
                error:
                  type: string
                  description: "Error message about possible problems with the group handling."
                lastMachineFailures:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: "Machine's name."
                      providerID:
                        type: string
                        description: "Machine's ProviderID."
                      ownerRef:
                        type: string
                        description: "Machine owner's name."
                      lastOperation:
                        type: object
                        properties:
                          description:
                            type: string
                            description: "Last operation's description."
                          lastUpdateTime:
                            type: string
                            description: "Timestamp of last status update for operation."
                          state:
                            type: string
                            description: "Machine's operation state."
                          type:
                            type: string
                            description: "Type of operation."
                conditionSummary:
                  type: object
                  properties:
                    statusMessage:
                      description: "Status message about group handling."
                      type: string
                    ready:
                      description: "Status of the condition summary."
                      enum:
                        - "True"
                        - "False"
                      type: string
            spec:
              type: object
              required:
                - nodeType
              properties:
                nodeType: &nodeType
                  description: |
                    Тип узлов, которые представляет эта группа.
                    - Cloud — узлы для этой группы будут автоматически создаваться (и удаляться) в настроенном облачном провайдере.
                    - Static — статический узел, размещенный на железном сервере или виртуальной машине. Узел не управляется
                      cloud-controller-manager'ом, даже если включен один из облачных провайдеров.
                    - Hybrid – статический узел (созданный вручную или любыми внешними инструментами), размещенный в том же облаке, с
                      которым настроена интеграция у одного из облачных провайдеров, на таком узле работает CSI и такой узел
                      управляется cloud-controller-manager'ом (объект Node автоматически обогащается информацией о зоне и регионе по
                      данным, полученным от облака; при удалении узла из облака, соответствующий ему Node-объект будет
                      удален в Kubernetes).
                  type: string
                  enum:
                    - Cloud
                    - Static
                    - Hybrid
                kubernetesVersion:
                  description: |
                    Желаемая minor-версия Kubernetes.

                    По умолчанию соответствует глобально выбранной для кластера версии (см. документацию по установке) или, если таковая не определена, текущей версии control-plane'а.
                  type: string
                  example: '1.19'
                  enum:
                    - "1.14"
                    - "1.15"
                    - "1.16"
                    - "1.17"
                    - "1.18"
                    - "1.19"
                    - "1.20"
                    - "1.21"
                cri:
                  type: object
                  description: |
                    Container runtime parameters.
                  properties:
                    type: &criType
                      type: string
                      description: |
                        Container runtime type.

                        Value `defaultCRI` from the initial cluster configration (`cluster-configuration.yaml` parameter from the `d8-cluster-configuration` secret in the `kube-system` namespace) is used if not specified.

                        **Optional parameter.**
                      enum:
                        - "Docker"
                        - "Containerd"
                        - "NotManaged"
                    containerd: &criContainerd
                      type: object
                      description: Containerd runtime parameters.
                      properties:
                        maxConcurrentDownloads:
                          type: integer
                          description: |
                            Set the max concurrent downloads for each pull.
                            If used, cri.type must be set to `Containerd`.
                          x-doc-default: 3
                cloudInstances: &cloudInstances
                  description: |
                    Параметры заказа облачных виртуальных машин.

                    **Внимание!** Допустимо использовать только совместно с `nodeType: Cloud`.
                  type: object
                  required:
                  - classReference
                  - minPerZone
                  - maxPerZone
                  properties:
                    zones:
                      description: |
                        List of availability zones to create instances in.

                        Значение по умолчанию зависит от выбранного облачного провайдера и обычно соответствует всем зонам используемого региона.

                        Example:
                        ```yaml
                        - Helsinki
                        - Espoo
                        - Tampere
                        ```
                      type: array
                      items:
                        type: string
                    minPerZone:
                      description: |
                        Minimal amount of instances for the group in each zone.

                        Проставляется в объект MachineDeployment и в качестве нижней границы в cluster-autoscaler.
                      type: integer
                      minimum: 0
                    maxPerZone:
                      description: |
                        Maximum amount of instances for the group in each zone.

                        Проставляется как верхняя граница в cluster-autoscaler.
                      type: integer
                      minimum: 0
                    maxUnavailablePerZone:
                      description: |
                        Maximum amount of unavailable instances (during rollout) in the group in each zone.
                      type: integer
                      x-doc-default: 0
                      minimum: 0
                    maxSurgePerZone:
                      description: |
                        Maximum amount of instances to rollout simultaneously in the group in each zone.
                      type: integer
                      x-doc-default: 1
                      minimum: 0
                    standby:
                      description: |
                        Amount of overprovisioned Nodes for this NodeGroup.

                        The value can be an absolute number (for example, 2) or a percentage of desired Nodes (for example, 10%).
                        The absolute number is calculated from percentage of maximum Nodes amount by rounding down.
                      pattern: '^[0-9]+%?$'
                      x-kubernetes-int-or-string: true
                    standbyHolder:
                      description: |
                        Параметры "занимателя" ресурсов для подогретых инстансов.
                      type: object
                      properties:
                        notHeldResources:
                          description: |
                            Describes the amount of resources, that will not be held by standby holder.
                          type: object
                          properties:
                            cpu:
                              description: |
                                Describes the amount of CPU that will not be held by standby holder on Nodes from this NodeGroup.

                                The value can be an absolute number of cpus (for example, 2) as well as a milli representation (for example, 1500m).
                              pattern: '^[0-9]+m?$'
                              x-kubernetes-int-or-string: true
                            memory:
                              description: |
                                Describes the amount of memory that will not be held by standby holder on Nodes from this NodeGroup.

                                The value can be an absolute number of bytes (for example, 128974848) as well as a fixed-point number using one of memory suffixes: G, Gi, M, Mi.
                              pattern: '^[0-9]+(E|P|T|G|M|K|Ei|Pi|Ti|Gi|Mi|Ki)?$'
                              x-kubernetes-int-or-string: true
                    classReference:
                      description: |
                        Ссылка на объект `InstanceClass`. Уникален для каждого `cloud-provider-`модуля.
                      type: object
                      properties:
                        kind:
                          description: |
                            Тип объекта (например, `OpenStackInstanceClass`). Тип объекта указан в документации соответствующего `cloud-provider-`модуля.
                          type: string
                          enum:
                          - OpenStackInstanceClass
                          - GCPInstanceClass
                          - VsphereInstanceClass
                          - AWSInstanceClass
                          - YandexInstanceClass
                          - AzureInstanceClass
                        name:
                          description: |
                            Имя нужного `InstanceClass`-объекта (например, `finland-medium`).
                          type: string
                nodeTemplate: &nodeTemplate
                  description: |
                    Specification of some of the fields that will be maintained in all nodes of the group.

                    Example:
                    ```yaml
                    labels:
                      environment: production
                      app: warp-drive-ai
                    annotations:
                      ai.fleet.com/discombobulate: "true"
                    taints:
                    - effect: NoExecute
                      key: ship-class
                      value: frigate
                    ```
                  type: object
                  properties:
                    labels:
                      type: object
                      additionalProperties:
                        type: string
                      x-kubernetes-preserve-unknown-fields: true
                      description: |
                        Аналогично стандартному [полю](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#objectmeta-v1-meta) `metadata.labels`.

                        Example:
                        ```yaml
                        labels:
                          environment: production
                          app: warp-drive-ai
                        ```
                    annotations:
                      type: object
                      additionalProperties:
                        type: string
                      x-kubernetes-preserve-unknown-fields: true
                      description: |
                        Аналогично стандартному [полю](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#objectmeta-v1-meta) `metadata.annotations`.

                        Example:
                        ```yaml
                        annotations:
                          ai.fleet.com/discombobulate: "true"
                        ```
                    taints:
                      type: array
                      description: |
                        Аналогично полю `.spec.taints` из объекта [Node](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#taint-v1-core).

                        **Внимание!** Доступны только поля `effect`, `key`, `value`.

                        Example:
                        ```yaml
                        taints:
                        - effect: NoExecute
                          key: ship-class
                          value: frigate
                        ```
                      items:
                        type: object
                        properties:
                          effect:
                            type: string
                            enum:
                              - NoSchedule
                              - PreferNoSchedule
                              - NoExecute
                          key:
                            type: string
                          value:
                            type: string
                static:
                  description: Static node parameters
                  type: object
                  properties:
                    internalNetworkCIDRs:
                      description: Subnet CIDR
                      type: array
                      items:
                        type: string
                chaos: &chaos
                  description: |
                    Chaos monkey settings.

                    Example:
                    ```yaml
                    mode: DrainAndReboot
                    period: 24h
                    ```
                  type: object
                  properties:
                    mode:
                      type: string
                      description: |
                        Режим работы chaos monkey.

                        - `DrainAndDelete` — при срабатывании drain'ит и удаляет ноду
                        - `Disabled` — не трогает данную NodeGroup.
                      x-doc-default: 'Disabled'
                      enum:
                        - Disabled
                        - DrainAndDelete
                    period:
                      type: string
                      description: |
                        В какой интервал времени сработает chaos monkey (указывать можно в [golang формате](https://golang.org/pkg/time/#ParseDuration)).
                      pattern: '^[0-9]+[mh]{1}$'
                      x-doc-default: '6h'
                operatingSystem: &operatingSystem
                  type: object
                  description: Operating System settings for nodes.
                  properties:
                    manageKernel:
                      type: boolean
                      description: Enable kernel maintenance from bashible.
                      x-doc-default: true
                disruptions: &disruptions
                  type: object
                  description: Disruptions settings for nodes.
                  required:
                    - approvalMode
                  properties:
                    approvalMode:
                      type: string
                      description: |
                        Режим выдачи разрешения на disruptive обновление.
                        - `Manual` — отключить автоматическую выдачу разрешений на disruption, когда disruption потребуется – загорится специальный алерт.
                        - `Automatic` —  автоматически выдавать разрешения на disruption при обновлении (значение по умолчанию).
                      enum:
                        - Manual
                        - Automatic
                    automatic:
                      type: object
                      description: |
                        Дополнительные параметры для режима `Automatic`.
                      properties:
                        drainBeforeApproval:
                          type: boolean
                          x-doc-default: true
                          description: |
                            Выгон (draining) подов с ноды, перед выдачей разрешения на disruption.
                docker:
                  description: |
                    Docker settings for nodes.
                    If used, cri.type must be set to `Docker`.
                  type: object
                  properties:
                    maxConcurrentDownloads:
                      type: integer
                      description: Set the max concurrent downloads for each pull.
                      x-doc-default: 3
                    manage:
                      type: boolean
                      x-doc-default: true
                      description: Enable docker maintenance from bashible.
                kubelet: &kubelet
                  type: object
                  description: Kubelet settings for nodes.
                  properties:
                    maxPods:
                      type: integer
                      description: Set the max count of pods per node.
                      x-doc-default: 110
                    rootDir:
                      type: string
                      x-doc-default: '/var/lib/kubelet'
                      description: Directory path for managing kubelet files (volume mounts,etc).
    - name: v1alpha2
      served: true
      storage: false
      additionalPrinterColumns: *additionalPrinterColumns
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: |
            Описывает runtime параметры группы узлов.
          required:
            - spec
          properties:
            status: *status
            spec:
              type: object
              required:
                - nodeType
              properties:
                nodeType: *nodeType
                cri:
                  type: object
                  description: |
                    Container runtime parameters.
                  properties:
                    type: *criType
                    containerd: *criContainerd
                    docker:
                      type: object
                      description: Docker settings for nodes.
                      properties:
                        maxConcurrentDownloads:
                          type: integer
                          description: Set the max concurrent downloads for each pull.
                          x-doc-default: 3
                        manage:
                          type: boolean
                          x-doc-default: true
                          description: Enable docker maintenance from bashible.
                  oneOf:
                    - properties:
                        type:
                          enum: ["Docker"]
                        docker: {}
                    - properties:
                        type:
                          enum: ["Containerd"]
                        containerd: {}
                    - properties:
                        type:
                          enum: ["NotManaged"]
                cloudInstances: *cloudInstances
                nodeTemplate: *nodeTemplate
                chaos: *chaos
                operatingSystem: *operatingSystem
                disruptions: *disruptions
                kubelet: *kubelet
