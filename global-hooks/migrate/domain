#!/bin/bash

source /deckhouse/shell_lib.sh

function __config__() {
  cat << EOF
    configVersion: v1
    kubernetes:
    - name: nodes
      group: main
      keepFullObjectsInMemory: false
      executeHookOnEvent: [Added, Modified]
      apiVersion: v1
      kind: Node
      jqFilter: |
        {
          "name": .metadata.name,
          "missing_labels":
            [
              .metadata.labels // {} | keys as \$keys | \$keys[] |
              select(startswith("node-role.flant.com/")) |
              split("/")[1] | select(. | test("(frontend|system)")) | "node-role.deckhouse.io/\(.)" |
              select(. | IN(\$keys[]) | not)
            ]
        }
EOF
}

function __main__() {
  for i in $(context::jq -r '.snapshots.nodes | keys[]'); do
    if context::jq -er --argjson i "$i" '.snapshots.nodes[$i].filterResult.missing_labels | length > 0' > /dev/null; then
      node_name="$(context::jq -r --argjson i "$i" '.snapshots.nodes[$i].filterResult.name')"
      patch_set=". "
      for j in $(context::jq -r --argjson i "$i" '.snapshots.nodes[$i].filterResult.missing_labels | keys[]'); do
        label="$(context::jq -r --argjson i "$i" --argjson j "$j" '.snapshots.nodes[$i].filterResult.missing_labels[$j]')"
        patch_set="$patch_set | .metadata.labels += {\"$label\":\"\"}"
      done
      kubernetes::patch_jq "" "node/$node_name" "$patch_set"
    fi
  done
}

hook::run $@
