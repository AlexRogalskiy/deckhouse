#!/bin/bash

source /deckhouse/shell_lib.sh

function __config__() {
  cat << EOF
    configVersion: v1
    onStartup: 11
EOF
}

function __main__() {
  new_release_name="node-manager"

  release_configmaps="$(kubectl -n d8-system get cm | awk '/cloud-instance-manager/{print $1}')"

  echo "$release_configmaps"

  for cm in $release_configmaps; do
    release=$(kubectl -n d8-system get cm $cm -o json | jq -r '.data.release')
    new_release=$(echo -n "$release" | deckhouse-controller helper helm set-release-name $new_release_name)
    if ! kubectl -n d8-system get cm $(sed "s/cloud-instance-manager/$new_release_name/g" <<< $cm) 2>/dev/null >/dev/null; then
      kubectl -n d8-system get cm $cm -o json | jq -r --arg release_name "$new_release_name" --arg release "$new_release" '
        def p(s): s|sub("cloud-instance-manager";$release_name); .| .metadata.name |=  p(.) |
        .metadata.selfLink |=  p(.) | .metadata.labels.NAME |=  p(.) | .data.release = $release' | \
        kubectl create -f - && \
        kubectl -n d8-system get cm $cm > /tmp/ng-old-cm-$cm && \
        kubectl -n d8-system delete cm $cm
    fi
  done
}

hook::run "$@"
