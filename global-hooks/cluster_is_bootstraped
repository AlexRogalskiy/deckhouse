#!/bin/bash

source /deckhouse/shell_lib.sh

function __config__() {
# TODO
# jo -p onStartup=10 onKubernetesEvent="$(jo -a \
#    "$(jo kind=node jqFilter="[.metadata.labels, .spec.taints, (.status.conditions[] | [.type, .status])]" disableDebug=true)" \
#  )"
  echo '
{
  "onStartup": 10,
  "schedule": [
    {
      "crontab": "* * * * *"
    }
  ]
}'
}

function __main__() {
  if values::is_true global.clusterIsBootstrapped ; then
    return 0
  fi

  # Check if api-server is up and running
  kubectl get namespace kube-system >/dev/null 2>/dev/null

  if kubectl -n kube-system get cm/d8-cluster-is-bootstraped > /dev/null 2> /dev/null ; then
    values::set global.clusterIsBootstrapped true
  else
    if kubectl get nodes -o json | jq -e '[
        .items[]
        | select(.spec.taints == null or ([.spec.taints[] | select(.key == "node-role.kubernetes.io/master")] | any | not))
        | .status.conditions | [.[] | select(.type == "Ready")] | all(.[] ; .status == "True")
      ] | any' > /dev/null ; then
      values::set global.clusterIsBootstrapped true
      kubectl -n kube-system create configmap d8-cluster-is-bootstraped
    else
      values::set global.clusterIsBootstrapped false
    fi
  fi
}

hook::run $@
