#!/bin/bash

# Copyright 2021 Flant CJSC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

source /deckhouse/shell_lib.sh

function __config__() {
  cat << EOF
    configVersion: v1
    kubernetes:
    - name: is_bootstraped_cm
      includeSnapshotsFrom: ["is_bootstraped_cm", "not_master_and_ready_nodes"]
      keepFullObjectsInMemory: false
      apiVersion: v1
      kind: ConfigMap
      namespace:
        nameSelector:
          matchNames: [kube-system]
      nameSelector:
        matchNames: [d8-cluster-is-bootstraped]
    - name: not_master_and_ready_nodes
      includeSnapshotsFrom: ["is_bootstraped_cm", "not_master_and_ready_nodes"]
      group: main
      keepFullObjectsInMemory: false
      apiVersion: v1
      kind: Node
      executeHookOnEvent: ["Added", "Modified"]
      jqFilter: '
        (.spec.taints == null or ([.spec.taints[] | select(.key == "node-role.kubernetes.io/master")] | any | not))
        and
        (.status.conditions | [.[] | select(.type == "Ready")] | all(.[] ; .status == "True"))
      '
EOF
}

function _create_is_bootstraped_cm() {
    kubernetes::replace_or_create_yaml << EOF
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: d8-cluster-is-bootstraped
        namespace: kube-system
EOF
}

function __main__() {
  if context::has snapshots.is_bootstraped_cm.0; then
    values::set global.clusterIsBootstrapped true
    return 0
  fi

  if values::is_true global.clusterIsBootstrapped; then
    _create_is_bootstraped_cm
    return 0
  fi

  if context::jq -e '[.snapshots.not_master_and_ready_nodes[] | .filterResult] | any' >/dev/null 2>&1; then
    values::set global.clusterIsBootstrapped true
    _create_is_bootstraped_cm
    return 0
  fi
}

function __on_kubernetes::is_bootstraped_cm::deleted() {
  >&2 echo "ERROR: CM kube-system/d8-cluster-is-bootstraped was deleted. Don't know what to do."
  return 1
}

hook::run $@
