#!/bin/bash

source /antiopa/shell_lib.sh

function __config__() {
  jo -p onStartup=0
}

function __main__() {
  ### Миграция 2019-07-24: https://github.com/deckhouse/deckhouse/merge_requests/944
  # Этот хук можно удалить, после выката релиза с данным коммитом
  # Расчитана на один запуск!

  if ! kubectl -n antiopa get cm enabled-flag-migration-done > /dev/null 2>&1; then
    # {moduleName: "false"} => {moduleNameEnabled: "false"}
    if patch=$(kubectl -n antiopa get cm antiopa -o json | jq -e '
        .data |
        [
          to_entries[] |
          select((.key | test("Enabled$") | not) and .value == "false") |
          [{op: "add", path: ("/data/" + .key + "Enabled"), value: "false"}, {op: "remove", path: ("/data/" + .key)}]
        ] | add')
    then
      kubectl -n antiopa patch cm antiopa -p "$patch" --type=json || true
    fi

    # {moduleName: "{some: thing}"} -> {moduleNameEnabled: true, moduleName: "{some: thing}"}
    # {moduleName: "{}"} -> X_X
    if patch=$(kubectl -n antiopa get cm antiopa -o json | jq -e '
        .data |
        [
          to_entries[] |
          select(.key == ("userAuthn", "vsphereCsiDriver", "prometheusPushgateway", "basicAuth", "dynatrace", "okmeter", "okmeter", "openvpn", "secretJopa", "wellKnownJopa")) |
          [{op: "add", path: ("/data/" + .key + "Enabled"), value: "true"}] + if .value == "{}" then [{op: "remove", path: ("/data/" + .key)}] else [] end
        ] | add')
    then
      kubectl -n antiopa patch cm antiopa -p "$patch" --type=json || true
    fi

    kubectl -n antiopa apply -f - << EOF
apiVersion: v1
kind: ConfigMap
metadata:
  name: enabled-flag-migration-done
data:
  migrationDone: "You can delete this cm after enabled_flag_migration hook has gone."
EOF
  fi
}

hook::run $@
