.base_deploy_template:
  stage: deploy
  before_script:
  - if [[ -n ${CI_COMMIT_TAG} ]]; then
      SOURCE_IMAGE=${DEV_REGISTRY_PATH}:${CI_COMMIT_TAG};
      SOURCE_INSTALL_IMAGE=${DEV_REGISTRY_PATH}/install:${CI_COMMIT_TAG};
    else
      SOURCE_IMAGE=${DEV_REGISTRY_PATH}/dev:${CI_COMMIT_REF_NAME};
      SOURCE_INSTALL_IMAGE=${DEV_REGISTRY_PATH}/dev/install:${CI_COMMIT_REF_NAME};
      CI_COMMIT_TAG=""
    fi
  script:
  # variables
  - REGISTRY_SUFFIX=$(echo ${WERF_ENV} | tr '[:upper:]' '[:lower:]') # CE/EE/FE -> ce/ee/fe
  - RELEASE_CHANNEL=$(cut -d ":" -f1 <<< ${CI_JOB_NAME})
  - DESTINATION_IMAGE=${DEV_REGISTRY_PATH}/${REGISTRY_SUFFIX}:${RELEASE_CHANNEL}
  - DESTINATION_INSTALL_IMAGE=${DEV_REGISTRY_PATH}/${REGISTRY_SUFFIX}/install:${RELEASE_CHANNEL}
  - DECKHOUSE_DESTINATION_IMAGE=${DECKHOUSE_REGISTRY_HOST}/deckhouse/${REGISTRY_SUFFIX}:${RELEASE_CHANNEL}
  - DECKHOUSE_DESTINATION_INSTALL_IMAGE=${DECKHOUSE_REGISTRY_HOST}/deckhouse/${REGISTRY_SUFFIX}/install:${RELEASE_CHANNEL}
  - echo ${DECKHOUSE_DEV_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_DEV_REGISTRY_USER}" --password-stdin ${DECKHOUSE_DEV_REGISTRY_HOST} 2>/dev/null
  - echo ${DECKHOUSE_REGISTRY_PASSWORD} | docker login --username="${DECKHOUSE_REGISTRY_USER}" --password-stdin ${DECKHOUSE_REGISTRY_HOST} 2>/dev/null
  - docker image pull ${SOURCE_IMAGE}
  - docker image tag ${SOURCE_IMAGE} ${DESTINATION_IMAGE}
  - docker image push ${DESTINATION_IMAGE}
  - docker image tag ${SOURCE_IMAGE} ${DECKHOUSE_DESTINATION_IMAGE}
  - docker image push ${DECKHOUSE_DESTINATION_IMAGE}
  - docker image pull ${SOURCE_INSTALL_IMAGE}
  - docker image tag ${SOURCE_INSTALL_IMAGE} ${DESTINATION_INSTALL_IMAGE}
  - docker image push ${DESTINATION_INSTALL_IMAGE}
  - docker image tag ${SOURCE_INSTALL_IMAGE} ${DECKHOUSE_DESTINATION_INSTALL_IMAGE}
  - docker image push ${DECKHOUSE_DESTINATION_INSTALL_IMAGE}
  - docker image rmi ${SOURCE_IMAGE}
  - docker image rmi ${SOURCE_INSTALL_IMAGE}
  # after script
  - docker image rmi ${DESTINATION_IMAGE}
  - docker image rmi ${DESTINATION_INSTALL_IMAGE}
  - docker image rmi ${DECKHOUSE_DESTINATION_IMAGE}
  - docker image rmi ${DECKHOUSE_DESTINATION_INSTALL_IMAGE}
  dependencies:
    - "Build Modules Images"
  when: manual
  except:
    - schedules

