.Matrix Tests template:
  stage: testing
  before_script:
  - export WERF_STAGES_STORAGE=${WERF_STAGES_REPO_BASE}/stages-deckhouse
  script:
  - pwd
  - eval "${STAGES_STORAGE_LOGIN_CMD}"
  - type multiwerf && source $(multiwerf use 1.1 ${WERF_CHANNEL} --as-file)
  - type werf && source $(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose --as-file)
  - werf run tests
      --docker-options="-v $(pwd):/deckhouse -w /deckhouse"
      -- ginkgo -timeout=${TEST_TIMEOUT} -vet=off --slowSpecThreshold=30 ./testing/matrix/
  except:
  - schedules
  - alpha
  - beta
  - early-access
  - stable
  - rock-solid
  needs:
  - "Build"
  - "Build Modules Images"
  interruptible: true

.Hooks Configuration Tests template:
  stage: testing
  before_script:
  - export WERF_STAGES_STORAGE=${WERF_STAGES_REPO_BASE}/stages-deckhouse
  - rm -rf shell-operator || true
  - git submodule update --init --recursive
  script:
  - pwd
  - eval "${STAGES_STORAGE_LOGIN_CMD}"
  - type multiwerf && source $(multiwerf use 1.1 ${WERF_CHANNEL} --as-file)
  - type werf && source $(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose --as-file)
  - werf run tests
      --docker-options="-v $(pwd):/deckhouse -w /deckhouse"
      -- ginkgo -timeout=${TEST_TIMEOUT} -vet=off --slowSpecThreshold=30 ./testing/hooks_configuration/
  except:
  - schedules
  - alpha
  - beta
  - early-access
  - stable
  - rock-solid
  needs:
  - "Build"
  - "Build Modules Images"
  interruptible: true

.Tests template:
  stage: testing
  before_script:
  - export WERF_STAGES_STORAGE=${WERF_STAGES_REPO_BASE}/stages-deckhouse
  - rm -rf shell-operator || true
  - git submodule update --init --recursive
  script:
  - pwd
  - eval "${STAGES_STORAGE_LOGIN_CMD}"
  - type multiwerf && source $(multiwerf use 1.1 ${WERF_CHANNEL} --as-file)
  - type werf && source $(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose --as-file)
  - source ./testing/kcov_disabled.sh
  - rm -rf testing/kcov-report
  - chmod -R 0777 testing
  - |
    >testing/dummy_dirs
    for dir in $(find -L global-hooks modules/*/hooks -type d); do
      echo "$dir" >> testing/dummy_dirs
      cat > "$dir/dummy" <<"EOF"
        #!/bin/bash
    EOF
    done
  - >
    werf run tests --docker-options="-v $(pwd):/deckhouse -w /deckhouse --env KCOV_DISABLED=${KCOV_DISABLED}" --
    go test -timeout=${TEST_TIMEOUT} -vet=off ./modules/... ./global-hooks/...
  - |
    if [[ "$KCOV_DISABLED" != "yes" ]]; then
      cat testing/kcov-report/kcov-merged/coverage.json | grep '  "percent_covered"'
    else
      mkdir testing/kcov-report && touch testing/kcov-report/disabled
    fi
  after_script:
  - docker run --rm -v $(pwd)/testing:/testing -w /deckhouse ${BASE_ALPINE} chmod -R 0777 /testing
  except:
  - schedules
  - alpha
  - beta
  - early-access
  - stable
  - rock-solid
  artifacts:
    when: always
    paths:
    - testing/kcov-report
    expire_in: 14 days
  needs:
  - "Build"
  - "Build Modules Images"
  interruptible: true

.No Cyrillic Validation template:
  stage: testing
  script:
  - pwd
  - ./testing/validate_no_cyrillic.sh ${CI_PROJECT_ID} ${CI_COMMIT_SHA} ${FOX_ACCESS_TOKEN}
  except:
  - schedules
  - alpha
  - beta
  - early-access
  - stable
  - rock-solid
  needs:
  - "Build"
  - "Build Modules Images"
  interruptible: true

.Web links test:
  stage: testing
  variables:
    REPORT_FILE: link_test_report.txt
  before_script:
  - export WERF_STAGES_STORAGE=${WERF_STAGES_REPO_BASE}/stages-web
  script:
  - eval "${STAGES_STORAGE_LOGIN_CMD}"
  - ./modules_images_werf test_web_links
  - type multiwerf && source $(multiwerf use 1.1 ${WERF_CHANNEL} --as-file)
  - type werf && source $(werf ci-env gitlab --config werf-web.yaml --verbose --as-file)
  - werf run --config werf-web.yaml dev/web-public --docker-options="--rm --entrypoint cat" -- /usr/share/nginx/html/link_test_report.txt | tee ${REPORT_FILE}
  - echo -e "\n#################################################\nPublic site link checking report...\n"
  - |
    cat ${REPORT_FILE} | grep -Eq 'finished successfully.$'
    if [ $? -ne 0 ]; then
      exit 1
    fi
  after_script:
    - rm -f ${REPORT_FILE}
  except:
    - schedules
    - alpha
    - beta
    - early-access
    - stable
    - rock-solid
  allow_failure: true
  needs:
    - "Build"
    - "Build Website"
    - "Build Modules Images"
  interruptible: true

.Candictl Tests template:
  stage: testing
  before_script:
  - export WERF_STAGES_STORAGE=${WERF_STAGES_REPO_BASE}/stages-deckhouse
  script:
  - pwd
  - eval "${STAGES_STORAGE_LOGIN_CMD}"
  - type multiwerf && source $(multiwerf use 1.1 ${WERF_CHANNEL} --as-file)
  - type werf && source $(werf ci-env gitlab --config werf-web.yaml --verbose --as-file)
  - werf run candictl-tests --docker-options="-v $(pwd):/deckhouse -w /deckhouse/candictl/hack/" -- bash test.sh --gitlab
  except:
  - schedules
  - alpha
  - beta
  - early-access
  - stable
  - rock-solid
  needs:
  - "Build"
  - "Build Modules Images"

.GolangCI Lint template:
  stage: testing
  before_script:
    - export WERF_STAGES_STORAGE=${WERF_STAGES_REPO_BASE}/stages-deckhouse
  script:
    - pwd
    - eval "${STAGES_STORAGE_LOGIN_CMD}"
    - type multiwerf && source $(multiwerf use 1.1 ${WERF_CHANNEL} --as-file)
    - type werf && source $(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose --as-file)
    - werf run tests
      --docker-options="-v $(pwd):/deckhouse -w /deckhouse -e "TERM=xterm-256color""
      -- golangci-lint run
  except:
    - schedules
    - alpha
    - beta
    - early-access
    - stable
    - rock-solid
  needs:
    - "Build"
    - "Build Modules Images"

.OpenAPI Test Cases template:
  stage: testing
  before_script:
    - export WERF_STAGES_STORAGE=${WERF_STAGES_REPO_BASE}/stages-deckhouse
    - rm -rf shell-operator || true
    - git submodule update --init --recursive
  script:
    - pwd
    - eval "${STAGES_STORAGE_LOGIN_CMD}"
    - type multiwerf && source $(multiwerf use 1.1 ${WERF_CHANNEL} --as-file)
    - type werf && source $(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose --as-file)
    - werf run tests
      --docker-options="-v $(pwd):/deckhouse -w /deckhouse"
      -- ginkgo -vet=off ./testing/openapi_cases/
  except:
    - schedules
    - alpha
    - beta
    - early-access
    - stable
    - rock-solid
  needs:
    - "Build"
    - "Build Modules Images"
  interruptible: true
